{"version":3,"sources":["firebase/firebase.js","pages/homepage.jsx","redux/users/user.action.js","pages/home@me/home@me.jsx","redux/document/document.actions.js","redux/server/server.actions.js","redux/newserver/newserver.actions.js","components/AddServer/Addserver.jsx","components/AvailableServers/Changeservername.jsx","components/AddNewRole/AddNewRole.jsx","components/AvailableServers/AvailableServersmap.jsx","components/AvailableServers/AvailableServers.jsx","components/ChatHeader/ChatHeader.jsx","components/AddChannelPopup/AddChannelPopup.jsx","components/SidebarChannel/Channelmap.jsx","components/SidebarChannel/SidebarChannel.jsx","components/Sidebarvoice/Sidebarvoice.jsx","components/Avatar/BadgeAvatar.jsx","components/Roles/SquadRole.jsx","components/Roles/Myrolesmap.jsx","components/Roles/Myroles.jsx","components/Roles/Rolescategory.jsx","components/Roles/Roles.jsx","pages/Universal/Universal.jsx","components/RolesDocument/Allrolescolormap.jsx","components/RolesDocument/Allrolesmap.jsx","components/RolesDocument/RolesDocumentmap.jsx","components/RolesDocument/RolesDocument.jsx","components/RolesDocument/FetchRoleid.jsx","redux/message/message.actions.js","redux/clicked/clicked.actions.js","redux/replyclicked/replyclicked.actions.js","redux/replytoggle/replytoggle.actions.js","components/Emoji/Emojicontainer.jsx","components/ChatMenu/ChatMenu.jsx","components/ChatEdit/ChatEdit.jsx","components/Keypress/Keypress.jsx","components/ChatReply/ChatReply.jsx","components/ChatMessage/RenderVideo.jsx","components/ChatMessage/RenderAudio.jsx","components/ChatMessage/Chatmessagemap.jsx","components/ChatMessage/ChatMessage.jsx","redux/openupload/message.actions.js","components/FileUpload/FileUpload.jsx","components/ChatSearchBar/ChatSearchReply.jsx","components/ChatSearchBar/ChatSearchBar.jsx","pages/home_serverId/home_serverId.jsx","pages/Home_serverId_channel/Home_serverId_channel.jsx","pages/ServerPage/ServerPage.jsx","pages/Layout_Sidebar/Layout_Sidebar.jsx","App.js","redux/document/documentReducer.js","redux/message/messageReducer.js","redux/clicked/clickedReducer.js","redux/openupload/messageReducer.js","redux/replyclicked/replyclickedReducer.js","redux/replytoggle/replytoggleReducer.js","redux/server/serverReducer.js","redux/newserver/newserverReducer.js","redux/roles/rolesReducer.js","redux/rootReducer.js","redux/server/server.selectors.js","redux/document/document.sagas.js","redux/server/server.sagas.js","redux/users/user.sagas.js","redux/root-Saga.js","redux/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","storage","Googleprovider","performance","database","GoogleAuthProvider","CreateUserProfileDocument","collection","doc","currentUser","uid","set","username","displayName","useremail","email","userphoto","photoURL","createdAt","FieldValue","serverTimestamp","roles","merge","useStyles","makeStyles","github","marginTop","backgroundColor","color","google","padding","githubicon","Homepage","classes","dispatch","useDispatch","className","src","alt","Button","onClick","type","variant","Home","currentdoc","payload","currentserver","server","newserver","addicon","width","height","header","textAlign","header__heading","fontSize","fontFamily","display","header__text","header__servername","marginRight","dialogcontent","dialogaction","paper","minWidth","input","container","Addserver","useState","open","setOpen","uploadfile","setuploadfile","formValue","setformValue","serverRef","roleRef","handleClose","resizeFile","file","Promise","resolve","Resizer","imageFileResizer","uri","handleSubmit","e","a","preventDefault","add","servername","admin","userimage","serverimage","then","value","present","id","name","channelRef","channel","rolerefid","serverroleRef","roletyperef","rolename","myval","serverroletypeid","valid","allroleid","serverallroles","servallrole","number","serverroleid","roleid","serverid","handleImageUpload","target","files","encodedimage","IconButton","Dialog","onClose","aria-labelledby","DialogContent","DialogContentText","component","Typography","Container","maxWidth","accept","onChange","htmlFor","iconbutton","aria-label","required","placeholder","autoFocus","DialogActions","onSubmit","ChangeServername","currentserverid","useSelector","state","console","log","update","theme","root","backButton","spacing","instructions","marginBottom","anotherrole","finishedanotherrole","marginLeft","AddNewRole","React","activeStep","setActiveStep","multirole","setmultirole","completed","setCompleted","steps","typeofrole","settypeofrole","handleaddanotherrole","handlefinishedrole","handleChange","typeid","settypeid","roletypeid","setroletypeid","handlebranchandnext","prevActiveStep","val","handleroleandnext","addroleref","length","map","rol","thisid","allroleRef","Stepper","alternativeLabel","label","Step","StepLabel","stepIndex","header__rolename","roleheader","roleheader__rolecolor","getStepContent","disabled","AvailableServersmap","history","useHistory","query","orderBy","limit","useCollectionData","idField","channels","initialState","mouseX","mouseY","setState","myserver","handlechangeserver","push","setopen","role","setrole","StyledMenu","withStyles","props","Menu","anchorReference","anchorPosition","top","left","undefined","StyledMenuItem","palette","primary","main","common","white","MenuItem","onContextMenu","event","clientX","clientY","style","cursor","keepMounted","deleteServer","AvailableServers","servers","useEffect","button","search","position","borderRadius","shape","fade","breakpoints","up","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","ChatHeader","InputBase","inputProps","typo","textTransform","dialog","AddChannelPopup","catch","error","Channelmap","msg","SidebarChannel","setchannels","data","get","snapshot","docs","mychannel","myfun","signal","end","Sidebarvoice","startIcon","StyledBadge","badge","boxShadow","background","animation","border","content","transform","opacity","Badge","settings","flexWrap","icon","avatar","BadgeAvatars","useAuthState","user","mic","setmic","handleClick","signOut","overlap","anchorOrigin","vertical","horizontal","Avatar","slice","SquadRole","profileavatar","outlined","rolearr","Para","styled","p","StyledCircle","svg","StyledChip","div","Myrolesmap","anchorEl","setAnchorEl","setrolearr","userref","forEach","keys","Object","k","mykeys","arr","currentTarget","onMouseLeave","index","viewBox","xmlns","cx","cy","r","fill","status","Myroles","myrole","allusersref","rolemap","allusers","Rolescategory","allroleusers","Roles","useDocumentData","rolequery","allroles","Universal","children","Color","Allrolescolormap","Allrolesmap","roleheadid","RolesDocumentmap","allrolesRef","count","setcount","handleclick","obj","currentUserRef","userid","yourrole","increment","toDate","getDate","getMonth","getFullYear","i","roleheading","RolesDocument","FetchRoleid","serverdata","currentmessage","setclicked","replymessage","replytoggle","Emojicontainer","emoji","setemoji","item","tags","d","chatmenu","myicon","deleteicon","ChatMenu","currentid","other","setother","setuser","message","handleReply","document","getElementById","focus","sender","sendername","photo","senderphoto","senderemail","delete","ChatEdit","key","action","docRef","onKeyup","window","addEventListener","removeEventListener","small","ChatReply","currentrole","reply","RenderVideo","linkify","match","filter","includes","url","RenderAudio","audioname","controls","audiourl","preload","Chatmessagemap","inHover","setHover","replaceAll","chatedittoggle","click","clicked","onMouseEnter","componentDecorator","href","text","rel","base64","ChatMessage","messages","currrentdoc","openupload","drop","FileUpload","toggle","replymsg","handleupload","audio","storageRef","ref","fileRef","child","put","getDownloadURL","audiosize","size","senderuid","image","resizedfile","dropzoneClass","imageContainer","showPreviews","showPreviewsInDropzone","maxFileSize","filesLimit","onAdd","onDrop","margin","ChatSearchReply","addbutton","ChatSearchBar","openpicker","setopenpicker","togglereply","messageRef","Home_serverId","location","Home_serverId_channel","params","serverId","channelId","ServerPage","exact","path","LayoutSidebar","App","to","render","documentReducer","messageReducer","replyopenReducer","openReducer","ReplyclickedReducer","replytoggleReducer","currentserverReducer","newserverReducer","squad","CurrentRoleReducer","combineReducers","clickedReducer","CurrentServerSelector","createSelector","SwitchDocumentSuccess","SwitchDocumentStart","DocumentSagas","select","takeLatest","all","call","DeleteServerSuccess","DeleteServerStart","AddServerStart","Serversagas","roleref","takeEvery","GoogleSignInSuccess","GoogleSignInStart","userSagas","signInWithPopup","rootSaga","sagaMiddleware","createSagaMiddleware","middleware","logger","store","createStore","rootReducer","applyMiddleware","run","ReactDOM"],"mappings":"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","file":"static/js/main.76c93a30.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\nimport 'firebase/database'\r\nimport \"firebase/performance\";\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyC_flKosPn-LPJF8JsKT3-IhlI3RDMOjqk\",\r\n    authDomain: \"discord-clone-12045.firebaseapp.com\",\r\n    projectId: \"discord-clone-12045\",\r\n    storageBucket: \"discord-clone-12045.appspot.com\",\r\n    messagingSenderId: \"889501806287\",\r\n    appId: \"1:889501806287:web:a96c4cf73eee4e8b2c11ba\"\r\n  };\r\n  firebase.initializeApp(firebaseConfig);\r\n  export const firestore=firebase.firestore();\r\n  export default firebase;\r\n  export const auth=firebase.auth();\r\n  export const storage=firebase.storage();\r\n  export const perf = firebase.performance();\r\n  export const db=firebase.database();\r\n  export const Googleprovider=new firebase.auth.GoogleAuthProvider();\r\n  // const signinWithGithub=()=>{\r\n//   const provider=new firebase.auth.GithubAuthProvider();\r\n//   auth.signInWithPopup(provider).catch(alert);\r\n// }\r\n  export const CreateUserProfileDocument=()=>{\r\n    const userRef=firestore.collection('users').doc(auth.currentUser.uid);\r\n    userRef.set({\r\n      username:auth.currentUser.displayName,\r\n      useremail:auth.currentUser.email,\r\n      userphoto:auth.currentUser.photoURL,\r\n      createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n      roles:{}\r\n    },{merge:true})\r\n  }","import { Button, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { GoogleSignInStart } from '../redux/users/user.action';\r\n// import GitHubIcon from '@material-ui/icons/GitHub';\r\nconst useStyles=makeStyles({\r\n    github:{\r\n      marginTop:'1rem',\r\n      backgroundColor:'#020000',\r\n      color:'#fff',\r\n      '&:hover':{\r\n        backgroundColor:'rgba(2,0,0,.75)'\r\n      }\r\n    },\r\n    google:{\r\n      padding:'.75rem'\r\n    },\r\n    githubicon:{\r\n      color:'white'\r\n    }\r\n  })\r\nconst Homepage = () => {\r\n    const classes=useStyles();\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <>\r\n            <div className=\"discord__homepage\">\r\n             <img className=\"discord__homepage-svg\" src=\"./discord-clone/discord.svg\" alt=\"Discord Svg\"/>\r\n            <Button onClick={()=>dispatch(GoogleSignInStart())} className={`${classes.google} discord__homepage-btn`} color='primary' variant='contained'>Sign In with Google</Button>\r\n            {/* <Button onClick={signinWithGithub} startIcon={<GitHubIcon className={classes.githubicon}/>} className={`${classes.github} discord__homepage-btn`} variant='outlined'>Sign In With Github</Button> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","export const GoogleSignInStart=()=>{\r\n    return{\r\n        type:'Google_SignIn_Start'\r\n    }\r\n}\r\nexport const SignInSuccess=()=>{\r\n    return{\r\n        type:'SignIn_Success'\r\n    }\r\n}","import React from 'react'\r\nimport './home@me.scss'\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n        <div className=\"home\">\r\n                <img className=\"home__image\" src=\"/discord-clone/discord-background.jpg\" alt=\"Discord background\" />\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","const currentdoc=(doc)=>{\r\n    return{\r\n    type:'Current_Document',\r\n    payload:doc\r\n  }\r\n  }\r\n  export default currentdoc;\r\n  ","const currentserver=(server)=>{\r\n    return{\r\n    type:'Current_Server',\r\n    payload:server\r\n  }\r\n  }\r\n  export default currentserver;\r\n\r\n  export const deleteServer=(server)=>{\r\n    return{\r\n      type:'Delete_Server_Start',\r\n      payload:server\r\n    }\r\n  }\r\n\r\n","const newserver=(server)=>{\r\n    return{\r\n    type:'New_Server',\r\n    payload:server\r\n  }\r\n  }\r\n  export default newserver;","import React, { useState } from 'react'\r\nimport AddIcon from '@material-ui/icons/AddCircle';\r\nimport { Avatar, Container, DialogActions, DialogContent, DialogContentText, IconButton, makeStyles, Typography } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport './Addserver.scss'\r\nimport { auth, firestore } from '../../firebase/firebase';\r\nimport firebase from 'firebase/app'\r\nimport { useDispatch } from 'react-redux';\r\nimport currentdoc from '../../redux/document/document.actions';\r\nimport currentserver from '../../redux/server/server.actions';\r\nimport newserver from '../../redux/newserver/newserver.actions';\r\nconst useStyles=makeStyles({\r\n    addicon:{\r\n        width:'4.8rem',\r\n        height:'4.8rem',\r\n        color:'#43b581'\r\n    },\r\n    header:{\r\n        textAlign:'center'\r\n    },\r\n    header__heading:{\r\n        fontSize:'2rem',\r\n        color:'#060607',\r\n        padding:'.3rem 2rem',\r\n        fontFamily:'Whitney-bold',\r\n        display:'block'\r\n    },\r\n    header__text:{\r\n        fontSize:'1.5rem',\r\n        display:'block'\r\n    },\r\n    header__servername:{\r\n        marginRight:'80%',\r\n        color:'#6a7480',\r\n        fontSize:'1.25rem',\r\n        fontFamily:'Whitney-medium'\r\n    },\r\n    dialogcontent:{\r\n        backgroundColor:'#fff',\r\n        padding:'1rem 1.6rem'\r\n    },\r\n    dialogaction:{\r\n        backgroundColor:'#f6f6f7',\r\n        padding:'4% 5% 4% 5%',\r\n    },\r\n    paper: { \r\n        minWidth: '25%',\r\n    },\r\n    input:{\r\n        display:'none'\r\n    },\r\n    container:{\r\n        marginTop:'1.5rem'\r\n    }\r\n})\r\nfunction Addserver() {\r\n    const classes=useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [uploadfile,setuploadfile]=useState()\r\n    const [formValue,setformValue]=useState('');\r\n    const serverRef=firestore.collection('servers');\r\n    const roleRef=firestore.collection('roles');\r\n    // const [allroleid,setallroleid]=useState('');\r\n    const dispatch = useDispatch();\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n      };\r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n      const resizeFile = (file) =>\r\n            new Promise((resolve) => {\r\n                Resizer.imageFileResizer(\r\n                file,\r\n                100,\r\n                100,\r\n                \"JPEG\",\r\n                100,\r\n                0,\r\n                (uri) => {\r\n                    resolve(uri);\r\n                },\r\n                \"base64\",\r\n                );\r\n            });\r\n        \r\n      const handleSubmit=async (e)=>{\r\n        e.preventDefault();\r\n        if(formValue){\r\n            if(uploadfile){\r\n                await serverRef.add({\r\n                     servername:formValue,\r\n                     createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                     email:auth.currentUser.email,\r\n                     admin:auth.currentUser.displayName,\r\n                     userimage:auth.currentUser.photoURL,\r\n                     serverimage:uploadfile,\r\n                 }).then(async (value)=>{\r\n                    dispatch((newserver({present:true})));\r\n                    dispatch(currentserver({\r\n                        id:auth.currentUser.uid,\r\n                        name:formValue\r\n                    }))\r\n                    setuploadfile('');\r\n                    const channelRef=firestore.collection('servers').doc(value.id).collection('channels');\r\n                    await channelRef.add({\r\n                        channel:'general',\r\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                        email:auth.currentUser.email,\r\n                    }).then((value)=>dispatch((currentdoc({\r\n                        id:value.id,\r\n                        name:'general'\r\n                    }))))\r\n                    await channelRef.doc(value.id).set({\r\n                        channel:'roles',\r\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                        email:auth.currentUser.email,\r\n                    })\r\n                    let allroleid;\r\n                    const rolerefid=roleRef.doc(value.id);\r\n                    await rolerefid.set({\r\n                        servername:formValue,\r\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                    }).then(async()=>{\r\n                        const serverroleRef=serverRef.doc(value.id).collection('allroles');\r\n                        const roletyperef=roleRef.doc(value.id).collection('rolemenu');\r\n                        await serverroleRef.add({\r\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                        rolename:'Person'\r\n                    }).then(async(myval)=>{\r\n                        roletyperef.add({\r\n                            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                            rolename:'Person',\r\n                            serverroletypeid:myval.id,\r\n                        }).then(async(valid)=>{\r\n                            allroleid=valid.id\r\n                        })\r\n                        const serverallroles=serverroleRef.doc(myval.id).collection('allroles');\r\n                        serverallroles.add({\r\n                            color:'#ea596e',\r\n                            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                            rolename:'Female'\r\n                        }).then(async(servallrole)=>{\r\n                            const rolesallref=roletyperef.doc(allroleid).collection('allroles')\r\n                            rolesallref.add({\r\n                                'Female':{\r\n                                    color:'#ea596e',\r\n                                    number:1,\r\n                                    serverroleid:servallrole.id\r\n                                }\r\n                            })\r\n                        })\r\n                        serverallroles.add({\r\n                            color:'#226699',\r\n                            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                            rolename:'Male'\r\n                        }).then(async(servallrole)=>{\r\n                            const rolesallref=roletyperef.doc(allroleid).collection('allroles')\r\n                            rolesallref.add({\r\n                                'Male':{\r\n                                    color:'#226699',\r\n                                    number:1,\r\n                                    serverroleid:servallrole.id\r\n                                }\r\n                            })\r\n                        })\r\n                    })\r\n                    })\r\n                 })\r\n             }\r\n             else{\r\n                const rolerefid=roleRef.doc();\r\n                await serverRef.add({\r\n                     servername:formValue,\r\n                     createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                     email:auth.currentUser.email,\r\n                     admin:auth.currentUser.displayName,\r\n                     userimage:auth.currentUser.photoURL,\r\n                     serverimage:'./discord-clone/discord_server.png',\r\n                     roleid:rolerefid.id,\r\n                 }).then(async (value)=>{\r\n                     dispatch((newserver({present:true})));\r\n                    dispatch(currentserver({\r\n                        id:value.id,\r\n                        name:formValue\r\n                    }))\r\n                    const channelRef=firestore.collection('servers').doc(value.id).collection('channels')\r\n                    await channelRef.add({\r\n                        channel:'general',\r\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                        email:auth.currentUser.email,\r\n                    }).then((value)=>dispatch((currentdoc({\r\n                        id:value.id,\r\n                        name:'general'\r\n                    }))))\r\n                    await channelRef.add({\r\n                        channel:'roles',\r\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                        email:auth.currentUser.email,\r\n                    })\r\n                    let allroleid;\r\n                    await rolerefid.set({\r\n                        serverid:value.id,\r\n                        servername:formValue,\r\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                    }).then(async()=>{\r\n                        const serverroleRef=serverRef.doc(value.id).collection('allroles');\r\n                        const roletyperef=roleRef.doc(rolerefid.id).collection('rolemenu');\r\n                        await serverroleRef.add({\r\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                        rolename:'Person'\r\n                    }).then(async(myval)=>{\r\n                        roletyperef.add({\r\n                            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                            rolename:'Person',\r\n                            serverroletypeid:myval.id,\r\n                        }).then(async(valid)=>{\r\n                            allroleid=valid.id\r\n                        })\r\n                        const serverallroles=serverroleRef.doc(myval.id).collection('allroles');\r\n                        serverallroles.add({\r\n                            color:'#ea596e',\r\n                            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                            rolename:'Female'\r\n                        }).then(async(servallrole)=>{\r\n                            const rolesallref=roletyperef.doc(allroleid).collection('allroles')\r\n                            rolesallref.add({\r\n                                'Female':{\r\n                                    color:'#ea596e',\r\n                                    number:1,\r\n                                    serverroleid:servallrole.id\r\n                                }\r\n                            })\r\n                        })\r\n                        serverallroles.add({\r\n                            color:'#226699',\r\n                            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                            rolename:'Male'\r\n                        }).then(async(servallrole)=>{\r\n                            const rolesallref=roletyperef.doc(allroleid).collection('allroles')\r\n                            rolesallref.add({\r\n                                'Male':{\r\n                                    color:'#226699',\r\n                                    number:1,\r\n                                    serverroleid:servallrole.id\r\n                                }\r\n                            })\r\n                        })\r\n\r\n                    })\r\n                    })\r\n                 })\r\n             }\r\n        }\r\n        setformValue('');\r\n\r\n      }\r\n      const handleImageUpload=async(e)=>{\r\n        const encodedimage=await resizeFile(e.target.files[0]);\r\n        setuploadfile(encodedimage);\r\n      }\r\n      \r\n    return (\r\n    <div className='addserver'>\r\n            <div className=\"addserver__addicon\">\r\n                <IconButton onClick={handleClickOpen} >\r\n                   <AddIcon className={classes.addicon} />\r\n                </IconButton>\r\n            </div>\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" classes={{ paper: classes.paper}} >\r\n            <DialogContent className={classes.dialogcontent}>\r\n            <DialogContentText component='div' className={classes.header}>\r\n                    <Typography component={'span'} className={classes.header__heading}>\r\n                        Customize your server\r\n                    </Typography>\r\n\r\n                    <Typography component={'span'} className={classes.header__text}>\r\n                        Give your new server a personality with a name and an icon.\r\n                    </Typography>\r\n                    <Typography component={'span'} className={classes.header__text}>\r\n                        You can always change it later.\r\n                    </Typography>\r\n                    <Container className={classes.container} maxWidth=\"sm\">\r\n                    <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={handleImageUpload} />\r\n                        <label htmlFor=\"icon-button-file\">\r\n                            <IconButton className={classes.iconbutton} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                <img className='uploadimage' src=\"/./upload.png\" alt=\"\"/>\r\n                            </IconButton>\r\n                        </label>\r\n                        </Container>\r\n                    <Typography component={'span'} className={classes.header__servername}>\r\n                        SERVER NAME\r\n                    </Typography>                \r\n            </DialogContentText>\r\n                <input type=\"text\" required placeholder={`${auth.currentUser && auth.currentUser.displayName}'s server`} className='input__content' autoFocus onChange={(e)=>setformValue(e.target.value)} value={formValue}/>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogaction}>\r\n            <button type='text' onClick={handleClose} className='addserver__form-back'>Back</button>\r\n                <form onSubmit={handleSubmit} className='addserver__form'>\r\n                    <button type='submit' onClick={handleClose} className='addserver__form-button'>Create</button>\r\n                </form>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Addserver\r\n","import React, { useState } from 'react'\r\nimport { Container, DialogActions, DialogContent, DialogContentText, IconButton, makeStyles, Typography } from '@material-ui/core';\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport './Changeservername.scss'\r\nimport { firestore } from '../../firebase/firebase';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nconst useStyles=makeStyles({\r\n    addicon:{\r\n        width:'4.8rem',\r\n        height:'4.8rem',\r\n        color:'#43b581'\r\n    },\r\n    header:{\r\n        textAlign:'center',\r\n    },\r\n    header__heading:{\r\n        fontSize:'2rem',\r\n        color:'#060607',\r\n        padding:'.3rem 2rem',\r\n        fontFamily:'Whitney-bold',\r\n        display:'block'\r\n    },\r\n    header__text:{\r\n        fontSize:'1.5rem',\r\n        display:'block'\r\n    },\r\n    header__servername:{\r\n        marginRight:'75%',\r\n        color:'#6a7480',\r\n        fontSize:'1.25rem',\r\n        fontFamily:'Whitney-medium'\r\n    },\r\n    dialogcontent:{\r\n        backgroundColor:'#fff',\r\n    },\r\n    dialogaction:{\r\n        backgroundColor:'#f6f6f7',\r\n        padding:'4% 5% 4% 5%',\r\n    },\r\n    paper: { \r\n        minWidth: '25%',\r\n    },\r\n    input:{\r\n        display:'none',\r\n    },\r\n    container:{\r\n        marginTop:'1.5rem'\r\n    }\r\n})\r\nfunction ChangeServername({handleClose}) {\r\n    const classes=useStyles();\r\n    const [uploadfile,setuploadfile]=useState()\r\n    const [formValue,setformValue]=useState('');\r\n    const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const serverRef=firestore.collection('servers').doc(currentserverid);\r\n      const resizeFile = (file) =>\r\n            new Promise((resolve) => {\r\n                Resizer.imageFileResizer(\r\n                file,\r\n                100,\r\n                100,\r\n                \"JPEG\",\r\n                100,\r\n                0,\r\n                (uri) => {\r\n                    resolve(uri);\r\n                },\r\n                \"base64\",\r\n                );\r\n            });\r\n        \r\n      const handleSubmit=async (e)=>{\r\n          console.log('hanlde called');\r\n          handleClose();\r\n        e.preventDefault();\r\n\r\n        if(formValue){\r\n            if(uploadfile){\r\n                await serverRef.update({\r\n                     servername:formValue,\r\n                     serverimage:uploadfile\r\n                 })\r\n                 setformValue('');\r\n             }\r\n             else{\r\n                 await serverRef.update({\r\n                     servername:formValue,\r\n                 })\r\n                 setformValue('');\r\n             }\r\n        }\r\n      }\r\n      const handleImageUpload=async(e)=>{\r\n        const encodedimage=await resizeFile(e.target.files[0]);\r\n        setuploadfile(encodedimage);\r\n      }\r\n      \r\n    return (\r\n    <div className='ChangeServername'>\r\n            <DialogContent className={classes.dialogcontent}>\r\n            <DialogContentText className={classes.header}>\r\n                    <Typography component={'span'} className={classes.header__heading}>\r\n                        Customize your server\r\n                    </Typography>\r\n\r\n                    <Typography component={'span'} className={classes.header__text}>\r\n                        Change your Server Name and icon...\r\n                    </Typography>\r\n                    <Container className={classes.container} maxWidth=\"sm\">\r\n                    <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={handleImageUpload} />\r\n                        <label htmlFor=\"icon-button-file\">\r\n                            <IconButton className={classes.iconbutton} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                <img className='uploadimage' src=\"./upload.png\" alt=\"\"/>\r\n                            </IconButton>\r\n                        </label>\r\n                        </Container>\r\n                    <Typography component={'span'} className={classes.header__servername}>\r\n                       SERVER NAME\r\n                    </Typography>                \r\n            </DialogContentText>\r\n                <input type=\"text\" placeholder='Change server name' required className='input__content' autoFocus onChange={(e)=>setformValue(e.target.value)} value={formValue}/>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogaction}>\r\n            <button type='text' onClick={handleClose} className='ChangeServername__form-back'>Back</button>\r\n                <form onSubmit={handleSubmit} className='ChangeServername__form'>\r\n                    <button type='submit' className='ChangeServername__form-button'>Change</button>\r\n                </form>\r\n            </DialogActions>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ChangeServername\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useSelector } from 'react-redux';\r\nimport { firestore } from '../../firebase/firebase';\r\nimport { DialogContent, DialogContentText } from '@material-ui/core';\r\nimport firebase from 'firebase/app'\r\nimport './AddNewRole.scss'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '50rem',\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  anotherrole:{\r\n    marginTop:'1rem',\r\n\r\n  },\r\n  dialogcontent:{\r\n    width:'100%'\r\n  },\r\n  finishedanotherrole:{\r\n    marginTop:'1rem',\r\n    marginLeft:'2%'\r\n  }\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Get Started to Add Role', 'Add Role type', 'Add role'];\r\n}\r\n\r\nexport default function AddNewRole({handleClose}) {\r\n  const classes = useStyles();\r\n  // const roleid=useSelector((state)=>state.currentserver.roleid);\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [multirole,setmultirole]=useState([]);\r\n  const [completed, setCompleted] = React.useState(false);\r\n  const steps = getSteps();\r\n  const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const [formValue,setformValue]=useState({\r\n        color:'#fff',\r\n        rolename:''\r\n    });\r\n  const [typeofrole,settypeofrole]=useState('');\r\n  const serverRef=firestore.collection('servers').doc(currentserverid).collection('allroles');\r\n  const roleRef=firestore.collection('roles').doc(currentserverid).collection('rolemenu');\r\n  function getStepContent(stepIndex) {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return 'Select your Role';\r\n      case 1:\r\n        return <>\r\n          <DialogContent className={classes.dialogcontent}>\r\n              <DialogContentText className={classes.header}>\r\n                      <Typography component={'span'} className={classes.header__rolename}>\r\n                         Type Of Role\r\n                      </Typography>                \r\n              </DialogContentText>\r\n                  <input type=\"text\" name='rolename' required className='input__content' autoFocus onChange={(e)=>settypeofrole(e.target.value)} value={typeofrole}/>\r\n              </DialogContent>\r\n        </>\r\n      case 2:\r\n        return <>\r\n            <DialogContent className={classes.dialogcontent}>\r\n              <DialogContentText className={classes.header}>\r\n                      <Typography component={'span'} className={classes.header__rolename}>\r\n                         Role Name\r\n                      </Typography>                \r\n              </DialogContentText>\r\n                  <input type=\"text\" name='rolename' required className='input__content' autoFocus onChange={handleChange} value={formValue.rolename}/>\r\n                  <DialogContentText className={classes.roleheader}>\r\n                      <Typography component={'span'} className={classes.roleheader__rolecolor}>\r\n                          Role Color\r\n                          </Typography> \r\n                      </DialogContentText>\r\n                  <input type=\"text\" name='color' required className='input__content' onChange={handleChange} value={formValue.color}/>\r\n                  {/* {formValue.rolename && 'DO you want to add another role with same category type?'} */}\r\n                  <div className=\"addmorediv\">\r\n                    <Button onClick={handleaddanotherrole} className={classes.anotherrole} color='primary' variant='contained'>Add another role with same category type?</Button>\r\n                    <Button onClick={handlefinishedrole} className={classes.finishedanotherrole} color='primary' variant='contained'>Finished adding more</Button>\r\n                  </div>\r\n                 \r\n              </DialogContent>\r\n        </>\r\n      default:\r\n        return 'Unknown stepIndex';\r\n    }\r\n  }\r\n\r\n  const handleaddanotherrole=()=>{\r\n    setmultirole(()=>{\r\n      return [...multirole,formValue]\r\n    })\r\n    setformValue({\r\n      color:'',\r\n      rolename:''\r\n    })\r\n  }\r\n  const handlefinishedrole=()=>{\r\n    if(typeofrole){\r\n      if(formValue.rolename){\r\n        setmultirole(()=>{\r\n          return [...multirole,formValue]\r\n        })\r\n      }\r\n  }\r\n  setformValue({\r\n    color:'',\r\n    rolename:''\r\n  })\r\n}\r\n    const handleChange=(e)=>{\r\n    const {name,value}=e.target;\r\n    setformValue(()=>{\r\n        return{\r\n            ...formValue,\r\n            [name]:value\r\n        }\r\n    })\r\n  }\r\n  const handleNext = () => {\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n  const [typeid,settypeid]=useState('');\r\n  const [roletypeid,setroletypeid]=useState('');\r\n  const handlebranchandnext=async()=>{\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    if(!completed){\r\n      if(typeofrole){\r\n          await serverRef.add({\r\n              createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n              rolename:typeofrole\r\n          }).then(async(val)=>{\r\n              settypeid(val.id);\r\n              await roleRef.add({\r\n                createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                rolename:typeofrole,\r\n                serverroletypeid:val.id,\r\n              }).then((valid)=>{\r\n                console.log('called',valid.id);\r\n                setroletypeid(valid.id);\r\n              })\r\n          })\r\n          setCompleted(true);\r\n      }\r\n  }\r\n  }\r\n  const handleroleandnext=async()=>{\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    if(typeofrole){\r\n        const addroleref=serverRef.doc(typeid).collection('allroles');\r\n        if(multirole && multirole.length){\r\n          multirole.map(async(rol)=>{\r\n            await addroleref.add({\r\n              color:rol.color,\r\n              createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n              rolename:rol.rolename\r\n          }).then(async (thisid)=>{\r\n            const allroleRef=roleRef.doc(roletypeid).collection('allroles');\r\n            await allroleRef.add({\r\n              [rol.rolename]:{\r\n                color:rol.color,\r\n                number:1,\r\n                serverroleid:thisid.id\r\n              }\r\n            })\r\n          }).then(()=>{\r\n            settypeofrole('');\r\n            setformValue('');\r\n            settypeid('');\r\n            setCompleted(false);\r\n          })\r\n          })\r\n          setmultirole([]);\r\n          handleClose();\r\n        }\r\n        else{\r\n          if(formValue.rolename){\r\n            await addroleref.add({\r\n                color:formValue.color,\r\n                createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                rolename:formValue.rolename\r\n            }).then(async (thisid)=>{\r\n              const allroleRef=roleRef.doc(roletypeid).collection('allroles');\r\n              await allroleRef.add({\r\n                [formValue.rolename]:{\r\n                  color:formValue.color,\r\n                  number:1,\r\n                  serverroleid:thisid.id\r\n                }\r\n              }).then(()=>{\r\n                settypeofrole('');\r\n                setformValue('');\r\n                settypeid('');\r\n                setCompleted(false);\r\n              })\r\n            })\r\n        }\r\n        handleClose();\r\n        }  \r\n    }\r\n    \r\n  }\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? null : (\r\n          <div>\r\n            <Typography component='div' className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button>\r\n              {\r\n                  activeStep && activeStep===1? <Button variant=\"contained\" color=\"primary\" onClick={handlebranchandnext}>\r\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                </Button> : (activeStep===2 ? <Button variant=\"contained\" color=\"primary\" onClick={handleroleandnext}>\r\n                Finish</Button> : <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>) \r\n              }\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { auth, firestore } from '../../firebase/firebase';\r\nimport currentserver, { deleteServer } from '../../redux/server/server.actions';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport './AvailableServers.scss'\r\nimport { Dialog, makeStyles, withStyles } from '@material-ui/core';\r\nimport ChangeServername from './Changeservername'\r\n// import newserver from '../../redux/newserver/newserver.actions'\r\n// import firebase from 'firebase/app'\r\nimport AddNewRole from '../AddNewRole/AddNewRole';\r\nimport { useHistory } from 'react-router';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nconst useStyles=makeStyles({\r\n    paper: { \r\n        minWidth: '25%',\r\n    },\r\n})\r\nfunction AvailableServersmap({server}) {\r\n  const history=useHistory();\r\n  const channelRef=firestore.collection('servers').doc(server.id).collection('channels');\r\n  const query=channelRef.orderBy('createdAt').limit(1);\r\n  const [channels]=useCollectionData(query,{idField:'id'});\r\n    const classes=useStyles();\r\n    const initialState = {\r\n        mouseX: null,\r\n        mouseY: null,\r\n      };\r\n      const [state, setState] = useState(initialState);\r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    setState({\r\n      mouseX: event.clientX - 2,\r\n      mouseY: event.clientY - 4,\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setState(initialState);\r\n  };      \r\n    const dispatch = useDispatch();\r\n    const id=useSelector((state)=>state.currentserver.id)\r\n    const myserver=server;\r\n\r\n    // const handleDelete=async(server)=>{\r\n    //     setState(initialState);\r\n    //     dispatch(deleteServer(server));\r\n    //     dispatch((newserver({present:false})));\r\n    //     if(server.email===auth.currentUser.email){\r\n    //         const serverRef=firestore.collection('servers').doc(server.id);\r\n    //         const roleref=firestore.collection('roles').doc(server.id);\r\n    //         await roleref.delete();        \r\n    //         await serverRef.delete();\r\n    //         const userref=firestore.collection('users');\r\n    //         userref.doc(auth.currentUser.uid).set({\r\n    //           roles:{\r\n    //             [auth.currentUser.uid]:firebase.firestore.FieldValue.delete()\r\n    //           }\r\n    //         },{ merge: true })  \r\n    //     }\r\n    //     else{\r\n    //       return\r\n    //     }\r\n    // }\r\n    const handlechangeserver=async(server)=>{\r\n      await history.push(`/channels/${server.id}/${channels[0].id}`);\r\n        dispatch((currentserver({\r\n            id:server.id,\r\n            name:server.servername,\r\n            email:server.email,\r\n        })))\r\n        setState(initialState);\r\n    }\r\n    \r\n    const [open,setopen]=useState(false);\r\n    const [role,setrole]=useState(false);\r\n    const handleChangenickname=()=>{\r\n        if(myserver.email===auth.currentUser.email)\r\n        {\r\n            dispatch((currentserver({\r\n                id:server.id,\r\n                name:server.servername,\r\n                email:server.email\r\n            })))\r\n            setopen(true);\r\n        }\r\n        handleClose();\r\n    }\r\n    const handleAddroles=()=>{\r\n      if(myserver.email===auth.currentUser.email)\r\n        {\r\n          setrole(true);\r\n\r\n        }\r\n        dispatch((currentserver({\r\n          id:myserver.id,\r\n          name:myserver.servername,\r\n          email:myserver.email,\r\n      })))\r\n        handleClose();\r\n    }\r\n    const handledialogactions=()=>{\r\n        setopen(false);\r\n    }\r\n   \r\n    const StyledMenu = withStyles({\r\n        paper: {\r\n          backgroundColor:'#18191c',\r\n          color:'#b9bbbe',\r\n          padding: '6px 8px',\r\n        },\r\n      })((props) => (\r\n        <Menu  \r\n        anchorReference=\"anchorPosition\"\r\n        anchorPosition={\r\n        state.mouseY !== null && state.mouseX !== null\r\n            ? { top: state.mouseY, left: state.mouseX }\r\n            : undefined\r\n        }{...props}/>\r\n      ));\r\n    const StyledMenuItem = withStyles((theme) => ({\r\n        root: {\r\n            fontSize:'1.4rem',\r\n            '&:first-child':{\r\n                backgroundColor:'#5c6fb1',\r\n                color:'#fff'\r\n            },\r\n            '&:last-child':{\r\n                color:'rgb(240, 71, 71)'\r\n            },\r\n          '&:focus': {\r\n            backgroundColor: theme.palette.primary.main,\r\n            '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n              color: theme.palette.common.white,\r\n              fontSize:'1.4rem'\r\n            },\r\n          },\r\n        },\r\n      }))(MenuItem);\r\n\r\n    return (\r\n        <div className='availableserver__map'>\r\n            <img key={server.id} onContextMenu={handleClick} style={{ cursor: 'context-menu' }} onClick={async()=>{\r\n                dispatch(currentserver({id:server.id,name:server.servername,email:server.email}))\r\n                 await history.push(`/discord-clone/channels/${server.id}/${channels[0].id}`);\r\n                //  const channelRef=firestore.collection('servers').doc(server.id).collection('channels');\r\n                  // channelRef.get().then((response)=>{\r\n                  //   response.forEach(doc=>{\r\n                  //     console.log(doc.data())\r\n                  //   })\r\n                  // })\r\n                  // console.log(result);                 \r\n                }}\r\n                \r\n                className={`${id===server.id && `availableserver__map-clicked`} availableserver__map-image`}\r\n                src={server.serverimage} alt=\"availableserver\"\r\n                >\r\n                </img>\r\n                \r\n                <StyledMenu keepMounted open={state.mouseY !== null} onClose={handleClose}>\r\n                    <StyledMenuItem onClick={()=>handlechangeserver(server)}>{server.servername}</StyledMenuItem>\r\n                    <StyledMenuItem onClick={handleChangenickname}>Change Nickname</StyledMenuItem>\r\n                    <StyledMenuItem onClick={handleAddroles}>Add roles</StyledMenuItem>\r\n                    <StyledMenuItem onClick={()=>{\r\n                      setState(initialState);\r\n                      dispatch(deleteServer(server));\r\n                    }}>Delete Server</StyledMenuItem>\r\n                </StyledMenu>\r\n                {open && <Dialog open={open} onClose={()=>setopen(false)} aria-labelledby=\"form-dialog-title\" classes={{ paper: classes.paper}} >\r\n                    <ChangeServername handleClose={handledialogactions}/>\r\n                </Dialog>}\r\n                {role && <Dialog open={role} onClose={()=>setrole(false)} aria-labelledby=\"form-dialog-title\" classes={{ paper: classes.paper}} >\r\n                    <AddNewRole handleClose={()=>setrole(false)}/>\r\n                </Dialog>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AvailableServersmap\r\n","import React, { useEffect } from 'react'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { firestore } from '../../firebase/firebase';\r\nimport AvailableServersmap from './AvailableServersmap';\r\nimport './AvailableServers.scss'\r\nimport currentserver from '../../redux/server/server.actions';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nfunction AvailableServers () {\r\n    const dispatch = useDispatch();\r\n    const serverRef=firestore.collection('servers');\r\n    const query=serverRef.orderBy('createdAt').limit(10);\r\n    const [servers]=useCollectionData(query,{idField:'id'});\r\n    const newserver=useSelector((state)=>state.newserver.present);\r\n    useEffect(() => {\r\n        if(newserver){\r\n            return\r\n        }\r\n        else{\r\n            if(servers && !!servers.length){\r\n                // dispatch(currentserver({id:servers[0].id,name:servers[0].servername,email:servers[0].email,roleid:servers[0].roleid}));\r\n            }\r\n        }\r\n        return () => {   \r\n        }\r\n    }, [servers,newserver,dispatch])\r\n    // useEffect(() => {\r\n    //         if(newserver){\r\n    //             dispatch()\r\n    //         }\r\n    //     return () => {\r\n            \r\n    //     }\r\n    // }, [newserver])\r\n          return (\r\n        <div className='availableserver'>\r\n            {servers && servers.map((server)=>{\r\n                    return <AvailableServersmap key={server.id} server={server}/>\r\n                })} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AvailableServers\r\n","import React from 'react'\r\nimport './ChatHeader.scss'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport EditLocationIcon from '@material-ui/icons/EditLocation';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { fade, IconButton,InputBase,makeStyles } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nconst useStyles=makeStyles((theme)=>{\r\n    return{\r\n        button:{\r\n            color:'#babbbd',\r\n            padding:'.8rem'\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: '#212226',\r\n            '&:hover': {\r\n              backgroundColor: fade('#212226', 0.5),\r\n            },\r\n            marginLeft: 0,\r\n            marginRight:theme.spacing(.4),\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n              marginLeft: theme.spacing(1),\r\n              width: 'auto',\r\n            },\r\n          },\r\n          searchIcon: {\r\n            padding: theme.spacing(0, 1.5),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            color:'#363940'\r\n          },\r\n          inputRoot: {\r\n            color: 'inherit',\r\n          },\r\n          inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            fontSize:theme.spacing(1.5),\r\n            // vertical padding + font size from searchIcon\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n              width: '12ch',\r\n              '&:focus': {\r\n                width: '20ch',\r\n              },\r\n            },\r\n          },\r\n    }\r\n})\r\nfunction ChatHeader() {\r\n    const classes=useStyles();\r\n    return (\r\n        <div className=\"chat__main\">\r\n            <div className=\"chatheader\">\r\n                <div className=\"chatheader__topic\">\r\n                    <p className='chatheader__topic-hash'>#</p>\r\n                    <p className=\"chatheader__topic-content\">{useSelector((state)=>state.doc.name)}</p>\r\n                </div>\r\n                <div className=\"chatheader__items\">\r\n                    <div className='chatheader__items-left'>\r\n                        <IconButton className={classes.button} aria-label=\"settings\">\r\n                            <NotificationsIcon fontSize='large'/>\r\n                        </IconButton>\r\n                        <IconButton className={classes.button} aria-label=\"settings\">\r\n                            <EditLocationIcon fontSize='large'/>\r\n                        </IconButton>\r\n                        <IconButton className={classes.button} aria-label=\"settings\">\r\n                            <PeopleIcon fontSize='large'/>\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                        <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                        placeholder=\"Search\"\r\n                        classes={{\r\n                            root: classes.inputRoot,\r\n                            input: classes.inputInput,\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                        <div className=\"chatheader__items-right\">\r\n                        <IconButton className={classes.button} aria-label=\"settings\">\r\n                            <InboxIcon fontSize='large'/>\r\n                        </IconButton>\r\n                        <IconButton className={classes.button} aria-label=\"settings\">\r\n                            <HelpIcon fontSize='large'/>\r\n                        </IconButton>\r\n                        </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatHeader\r\n","import React,{useState} from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { IconButton, makeStyles, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {auth, firestore} from '../../firebase/firebase'\r\nimport firebase from 'firebase/app'\r\nimport './AddChannelPopup.scss' \r\nimport { useSelector } from 'react-redux';\r\nconst useStyles=makeStyles((theme)=>{\r\n    return{\r\n        button:{\r\n            padding:theme.spacing(1),\r\n            color:'#fff'\r\n        },\r\n        typo:{\r\n            color:'#fcfdfe',\r\n            textTransform:'uppercase',\r\n        },\r\n        dialog:{\r\n            backgroundColor:'#363940',\r\n        },\r\n        dialogaction:{\r\n            backgroundColor:'#363940',\r\n            padding:'4% 6.5%',\r\n        },\r\n        paper: { \r\n            minWidth: '25%',\r\n        },\r\n    }\r\n})\r\nexport default function AddChannelPopup() {\r\n    const classes=useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n    const [formValue,setformValue]=useState('');\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleSubmit=async (e)=>{\r\n    e.preventDefault();\r\n    await channelRef.add({\r\n        channel:formValue,\r\n        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n        // name:auth.currentUser.displayName,\r\n        email:auth.currentUser.email,\r\n        // uid:auth.currentUser.uid,\r\n    })\r\n    .then(\r\n      ()=>{\r\n        console.log(\"Document Added\")\r\n      })\r\n    .catch((error)=>{console.log(error)})\r\n\r\n    setformValue('');\r\n  }\r\n  const currentserverid=useSelector((state)=>state.currentserver.id)\r\n  const channelRef=firestore.collection('servers').doc(currentserverid).collection('channels')\r\n  return (\r\n    <div>\r\n        <IconButton onClick={handleClickOpen} className={classes.button} aria-label=\"settings\">\r\n            <AddIcon fontSize='large'/>\r\n        </IconButton>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" classes={{ paper: classes.paper}}>\r\n        <DialogContent className={classes.dialog}>\r\n          <DialogContentText>\r\n            <Typography variant='h5' className={classes.typo}>Channel name</Typography>\r\n          </DialogContentText>\r\n          <input type=\"text\" required className='input' autoFocus placeholder='Type channel name' onChange={(e)=>setformValue(e.target.value)} value={formValue}/>\r\n        </DialogContent>\r\n        <DialogActions className={classes.dialogaction}>\r\n            <form onSubmit={handleSubmit} className='form'>\r\n              <button type='submit' onClick={handleClose} className='form__button'>Add</button>\r\n            </form>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { memo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory} from 'react-router';\r\n// import currentdoc from '../../redux/document/document.actions'\r\nimport './SidebarChannel.scss'\r\n\r\n// const Channelmap=React.memo((props)=>{\r\n//     console.log('Channel map called');\r\n//     const {msg}=props;\r\n//     const history=useHistory();\r\n//     const id=useSelector((state)=>state.doc.id);\r\n//     const currentserverid=useSelector((state)=>state.currentserver.id)\r\n//     return (\r\n//         <div>\r\n//              <p key={msg.id} onClick={async()=>{\r\n//                  await history.push(`/channels/${currentserverid}/${msg.id}`)\r\n//                 }}\r\n//                 className={`${id===msg.id && `clicked`} sidebarchannel__content`}>\r\n//                 <span className='sidebarchannel__hash'>#</span>{msg.channel}</p>\r\n//         </div>\r\n//     )\r\n// },(prevProps, nextProps) => prevProps.msg === nextProps.msg)\r\n\r\nconst Channelmap=({msg})=>{\r\n    console.log('Channel map called');\r\n    // const {msg}=props;\r\n    const history=useHistory();\r\n    const id=useSelector((state)=>state.doc.id);\r\n    const currentserverid=useSelector((state)=>state.currentserver.id)\r\n    return (\r\n        <div>\r\n             <p key={msg.id} onClick={async()=>{\r\n                 await history.push(`/discord-clone/channels/${currentserverid}/${msg.id}`)\r\n                }}\r\n                className={`${id===msg.id && `clicked`} sidebarchannel__content`}>\r\n                <span className='sidebarchannel__hash'>#</span>{msg.channel}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Channelmap\r\n","import React, { useEffect, useState } from 'react'\r\nimport './SidebarChannel.scss'\r\nimport { firestore } from '../../firebase/firebase';\r\nimport Channelmap from './Channelmap';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// const SidebarChannel=React.memo(()=>{\r\n//     console.log('Sidebar Channel got rendered');\r\n//       const currentserverid=useSelector((state)=>state.currentserver.id)\r\n//       const channelRef=firestore.collection('servers').doc(currentserverid).collection('channels')\r\n//       const [channels,setchannels]=useState([]);\r\n//       useEffect(() => {\r\n//           let data=[]\r\n//           console.log('rendered due to channel change');\r\n//             const myfun=async()=>{\r\n//             await channelRef.orderBy('createdAt').get().then((snapshot)=>{\r\n//                 snapshot.docs.map((doc)=>{\r\n//                     const mychannel=doc.data();\r\n//                     mychannel.id=doc.id\r\n//                     return data.push(mychannel)\r\n//                 })\r\n//             })\r\n//             setchannels(data)\r\n//             }   \r\n//             myfun();    return () => {\r\n              \r\n//           }\r\n//       }, [])\r\n//       console.log(channels);\r\n//     return (\r\n//         <div>\r\n//             <div className=\"sidebarchannel\">\r\n//                 {channels && channels.map((msg)=>{\r\n//                     return <Channelmap key={msg.id} msg={msg}/>\r\n//                 })}               \r\n//             </div>\r\n//         </div>\r\n//     )\r\n// })\r\nconst SidebarChannel=()=>{\r\n    console.log('Sidebar Channel got rendered');\r\n    const currentserverid=useSelector((state)=>state.currentserver.id)\r\n    // console.log(currentserverid);\r\n    const channelRef=firestore.collection('servers').doc(currentserverid).collection('channels')\r\n    const [channels,setchannels]=useState([]);\r\n    useEffect(() => {\r\n        let data=[]\r\n        console.log('rendered due to channel change');\r\n          const myfun=async()=>{\r\n          await channelRef.orderBy('createdAt').get().then((snapshot)=>{\r\n              snapshot.docs.map((doc)=>{\r\n                  const mychannel=doc.data();\r\n                  mychannel.id=doc.id\r\n                  return data.push(mychannel)\r\n              })\r\n          })\r\n          setchannels(data)\r\n          }   \r\n          myfun();    return () => {\r\n            \r\n        }\r\n    }, [currentserverid])\r\n  return (\r\n      <div>\r\n          <div className=\"sidebarchannel\">\r\n              {channels && !!channels.length && channels.map((msg)=>{\r\n                  return <Channelmap key={msg.id} msg={msg}/>\r\n              })}               \r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default (SidebarChannel)","import React from 'react'\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport ScreenShareIcon from '@material-ui/icons/ScreenShare';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport {IconButton,makeStyles, Button} from '@material-ui/core'\r\nimport './Sidebarvoice.scss'\r\nconst useStyles=makeStyles(()=>{\r\n    return{\r\n        signal:{\r\n            color:\"#43b380\"\r\n        },\r\n        end:{\r\n            color:'#babbbf'\r\n        },\r\n        button:{\r\n            fontSize:'14px',\r\n            color:'#fff',\r\n            backgroundColor:'#363940',\r\n            padding:'5px 1.9rem',\r\n            textTransform:'none'\r\n        }\r\n    }\r\n})\r\nfunction Sidebarvoice() {\r\n    const classes=useStyles();\r\n    return (\r\n        <div className='sidebarvoice'>\r\n            <div className=\"sidebarvoice__header\">\r\n                <div className=\"sidebarvoice__connect\">\r\n                    <div className=\"sidebarvoice__connect-icon\">\r\n                        <IconButton className={classes.signal} aria-label=\"settings\">\r\n                            <SignalCellularAltIcon fontSize='large'/>\r\n                        </IconButton>\r\n                        </div>\r\n                    <div className=\"sidebarvoice__connect-connected\">Voice Connected</div>\r\n                </div>\r\n                <div className=\"sidebarvoice__disconnect\">\r\n                    <IconButton className={classes.end} aria-label=\"settings\">\r\n                        <CallEndIcon fontSize='large'/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebarvoice__stream\">\r\n                <div className=\"sidebarvoice__stream-video\">\r\n                    <Button variant=\"text\" className={classes.button} startIcon={ <VideocamIcon/>}> Video </Button>\r\n                </div>\r\n                <div className=\"sidebarvoice__stream-screen\">\r\n                    <Button variant=\"text\" className={classes.button} startIcon={ <ScreenShareIcon/>}> Screen </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebarvoice\r\n","import React, { useState } from 'react';\r\nimport {Avatar,Badge} from '@material-ui/core';\r\nimport { withStyles,makeStyles } from '@material-ui/core/styles';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from '../../firebase/firebase';\r\nimport {IconButton} from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport HeadsetMicIcon from '@material-ui/icons/HeadsetMic';\r\nimport './BadgeAvatar.scss'\r\nimport { useHistory } from 'react-router';\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: '#44b700',\r\n    color: '#44b700',\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    '&::after': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: '50%',\r\n      animation: '$ripple 1.2s infinite ease-in-out',\r\n      border: '1px solid currentColor',\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  '@keyframes ripple': {\r\n    '0%': {\r\n      transform: 'scale(.8)',\r\n      opacity: 1,\r\n    },\r\n    '100%': {\r\n      transform: 'scale(2.4)',\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst useStyles=makeStyles((theme)=>{\r\n  return{\r\n    settings:{\r\n      display:'flex',\r\n      flexWrap:'wrap'\r\n    },\r\n    icon:{\r\n      padding:'.5rem',\r\n      color:'#babbbf'\r\n    },\r\n    avatar:{\r\n      width:'3.25rem',\r\n      height:'3.25rem'\r\n    }\r\n  }\r\n})\r\n\r\nexport default function BadgeAvatars() {\r\n  const history=useHistory();\r\n  const [user]=useAuthState(auth);\r\n  const [mic,setmic]=useState(false);\r\n  const classes=useStyles();\r\n  const handleClick=async ()=>{\r\n    await auth.signOut();\r\n    history.push('/discord-clone');\r\n  }\r\n    return (\r\n    <div>\r\n      <div className=\"profile\">\r\n        <div className=\"profile__avatar\">\r\n          <StyledBadge overlap=\"circle\" anchorOrigin={{vertical: 'bottom',horizontal: 'right',}} variant=\"dot\">\r\n            <Avatar alt=\"Remy Sharp\" src={`${user&& user.photoURL?user.photoURL:null}`} className={classes.avatar}/>\r\n          </StyledBadge>\r\n          <div className=\"profile__name\">\r\n            <div className=\"profile__name-name\">\r\n              {`${user&& user.displayName?user.displayName:null}`}\r\n            </div>\r\n            <div className=\"profile__name-uid\">\r\n              #{user && user.uid.slice(0,6)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classes.settings}>\r\n            <IconButton className={classes.icon} onClick={()=>setmic(!mic)} aria-label=\"settings\">\r\n              {mic?<MicIcon fontSize='large'/>: <MicOffIcon fontSize='large' />}\r\n            </IconButton>\r\n            <IconButton className={classes.icon} aria-label=\"settings\">\r\n            <HeadsetMicIcon fontSize='large'/>\r\n            </IconButton>\r\n            <IconButton className={classes.icon} aria-label=\"settings\" onClick={handleClick}>\r\n              <SettingsIcon fontSize='large' />\r\n            </IconButton>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { Avatar} from '@material-ui/core'\r\n\r\nfunction SquadRole({usr,classes}) {\r\n    return (\r\n        <>\r\n            <div className=\"roles__box\">\r\n                <div className=\"roles__box-avatar\">\r\n                    <Avatar className={classes.avatar} src={usr.userphoto && usr.userphoto}/>\r\n                </div>\r\n                <div className=\"roles__content\">\r\n                    <div className=\"roles__content-name\">\r\n                        <p className='roles__content--squad'>{usr.username && usr.username}</p>\r\n                    </div>\r\n                    <div className='roles__content-status'>\r\n                        {/* Visual Studio Code */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SquadRole\r\n","import React,{useState} from 'react'\r\nimport styled from \"styled-components\"\r\nimport { Avatar, makeStyles } from '@material-ui/core'\r\nimport { firestore } from '../../firebase/firebase';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles=makeStyles({\r\n    avatar:{\r\n        width:'3rem',\r\n        height:'3rem'\r\n    },\r\n    profileavatar:{\r\n        width:'8rem',\r\n        height:'8rem'\r\n    },\r\n    outlined:(rolearr)=>({\r\n        color:rolearr.map((a)=>{\r\n            return a['color']\r\n        })\r\n    }),\r\n\r\n})\r\n\r\nconst Para=styled.p`\r\n    color:${props=>props.color}\r\n`\r\nconst StyledCircle=styled.svg`\r\n    display:'inline-block'\r\n`\r\nconst StyledChip=styled.div`\r\n    border-color:${props=>props.color}\r\n`\r\n\r\nconst Myrolesmap = ({user,color}) => {\r\n    const [open,setopen]=useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [rolearr,setrolearr]=useState([]);\r\n    const userref=firestore.collection('users');\r\n    const currentserverid=useSelector((state)=>state.currentserver.id)\r\n    const classes=useStyles(rolearr);\r\n     const getuserdata=()=>{\r\n        userref.get().then((snapshot)=>snapshot.docs.forEach((doc)=>{\r\n            if(doc.data().userphoto===user.photoURL){\r\n              const keys = Object.keys(doc.data().roles);\r\n              for(const k of keys){\r\n                if(currentserverid && k===currentserverid){\r\n                     const mykeys=Object.keys(doc.data().roles[k])\r\n                     let arr=[];\r\n                     mykeys.map((rol)=>{\r\n                        arr.push(doc.data().roles[k][rol]);                        \r\n                     })\r\n                     setrolearr(arr);    \r\n                }\r\n              }\r\n            }\r\n          }))\r\n     }\r\n\r\n    const handleClick=(event)=>{\r\n    getuserdata()\r\n    setopen(!open);\r\n    setrolearr([]);\r\n    setAnchorEl(anchorEl ? null : event.currentTarget);\r\n}\r\n    return (\r\n        \r\n        <div onClick={handleClick} onMouseLeave={()=>{\r\n            setopen(false)\r\n        }}>\r\n            {open && <div className=\"roleprofile\">\r\n                  <div className=\"roleprofile__header\">\r\n                    <div className=\"roleprofile__header-photo\">\r\n                        <Avatar src={user.photoURL && user.photoURL} className={classes.profileavatar} />\r\n                    </div>\r\n                    <div className=\"roleprofile__header-username\">\r\n                        {user.username && user.username}\r\n                    </div>\r\n                    <div className=\"roleprofile__header-status\">\r\n                        🙌 my website\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"roleprofile__content\">\r\n                    <div className=\"roleprofile__content-heading\">\r\n                        ROLES\r\n                    </div>\r\n                    <div className=\"roleprofile__content-roles\">\r\n                        {rolearr && rolearr.map((a,index)=>{\r\n                            return <StyledChip key={index} className=\"chip\" color={a['color']}>\r\n                            <div className=\"chip__avatar\">\r\n                                <StyledCircle viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"50\" cy=\"50\" r=\"50\" fill={a['color']} /></StyledCircle>\r\n                            </div>\r\n                            <div className=\"chip__label\" color={a['color']}>\r\n                                {a['yourrole']}\r\n                            </div>\r\n                        </StyledChip>\r\n                        })}\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n               }\r\n         <div className=\"roles__box\">\r\n                <div className=\"roles__box-avatar\">\r\n                    <Avatar className={classes.avatar} src={user.photoURL && user.photoURL}/>\r\n                </div>\r\n                <div className=\"roles__content\">\r\n                    <div className=\"roles__content-name\">\r\n                        <Para color={color} className='roles__content--squad'>{user.username && user.username}</Para>\r\n                    </div>\r\n                    <div className='roles__content-status'>\r\n                        {user.status && user.status}\r\n                    </div>\r\n                </div>\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Myrolesmap\r\n","import React from 'react'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\r\nimport Myrolesmap from './Myrolesmap'\r\n\r\nconst Myroles = ({myrole,color,rolemap}) => {\r\n    const allusersref=rolemap.doc(myrole.id).collection('allusers');\r\n    const [allusers]=useCollectionData(allusersref,{idField:'id'});\r\n    return (\r\n        <div className='myroles'>\r\n            <div className=\"myroles__user\">\r\n                {allusers && allusers.map((user)=>{\r\n                return <Myrolesmap key={user.id} user={user} color={color}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Myroles\r\n","import React from 'react'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { useSelector } from 'react-redux';\r\nimport { firestore } from '../../firebase/firebase'\r\nimport Myroles from './Myroles';\r\n\r\nconst Rolescategory = ({role}) => {\r\n    const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const rolemap=firestore.collection('servers').doc(currentserverid).collection('allroles').doc(role.id).collection('allroles');\r\n    const [allroleusers]=useCollectionData(rolemap,{idField:'id'});\r\n    return (\r\n        <>\r\n             <div className=\"rolescategory\">\r\n             <div className=\"roles__heading\">\r\n               <h2 className=\"roles__heading-h2\">{role && role.rolename} —  {allroleusers && allroleusers.length}</h2> \r\n            </div>\r\n                {allroleusers && allroleusers.map((myrole)=>{\r\n                    return <Myroles key={myrole.id} myrole={myrole} rolemap={rolemap} color={myrole && myrole.color}/>\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Rolescategory\r\n","import React, { useEffect } from 'react'\r\nimport { useCollectionData, useDocumentData } from 'react-firebase-hooks/firestore';\r\nimport { firestore } from '../../firebase/firebase';\r\nimport { Avatar, makeStyles } from '@material-ui/core'\r\nimport './Roles.scss'\r\nimport SquadRole from './SquadRole';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport currentrole from '../../redux/roles/roles.actions';\r\nimport Rolescategory from './Rolescategory';\r\nconst useStyles=makeStyles({\r\n    avatar:{\r\n        width:'3rem',\r\n        height:'3rem'\r\n    },\r\n})\r\nfunction Roles() {\r\n    const classes=useStyles();\r\n    const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const serverRef=firestore.collection('servers').doc(currentserverid);\r\n    const [servers]=useDocumentData(serverRef);\r\n    // const userRef=firestore.collection('users');\r\n    // const query=userRef.orderBy('createdAt');\r\n    // const [allusers]=useCollectionData(query,{idField:'id'});\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        // dispatch(currentrole({admin:servers}));\r\n        return () => {\r\n           \r\n        }\r\n    }, [servers,dispatch])\r\n    // console.log('Roles called');\r\n    const allrolesref=serverRef.collection('allroles');\r\n    const rolequery=allrolesref.orderBy('createdAt');\r\n    const [allroles]=useCollectionData(rolequery,{idField:'id'});\r\n    \r\n    return (\r\n        <div className='roles'>\r\n            <div className=\"roles__heading\">\r\n               <h2 className=\"roles__heading-h2\">Administrator  —  1</h2> \r\n            </div>\r\n            <div className=\"roles__box\">\r\n                <div className=\"roles__box-avatar\">\r\n                    <Avatar className={classes.avatar} src={servers && servers.userimage && servers.userimage}/>\r\n                </div>\r\n                <div className=\"roles__content\">\r\n                    <div className=\"roles__content-name\">\r\n                        <p className='roles__content--admin'>{servers && servers.admin && servers.admin}</p>\r\n                    </div>\r\n                    <div className='roles__content-status'>\r\n                        Visual Studio Code\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"roles__heading\">\r\n               <h2 className=\"roles__heading-h2\">Squad  —  {allusers && allusers.length}</h2> \r\n            </div> */}\r\n            {allroles && allroles.map((role)=>{\r\n                return <Rolescategory key={role.id} role={role}/>\r\n            })}\r\n\r\n            {/* {allusers && allusers.map((usr)=>{\r\n                if(usr && servers && usr.useremail===servers.email){\r\n                   \r\n                }\r\n                else{\r\n                    return <SquadRole key={usr.id} usr={usr} classes={classes} />\r\n                }\r\n            })} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Roles\r\n","import { IconButton, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Addserver from '../../components/AddServer/Addserver'\r\nimport AvailableServers from '../../components/AvailableServers/AvailableServers'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChatHeader from '../../components/ChatHeader/ChatHeader'\r\nimport AddChannelPopup from '../../components/AddChannelPopup/AddChannelPopup'\r\nimport SidebarChannel from '../../components/SidebarChannel/SidebarChannel'\r\nimport Sidebarvoice from '../../components/Sidebarvoice/Sidebarvoice'\r\nimport BadgeAvatars from '../../components/Avatar/BadgeAvatar'\r\nimport Roles from '../../components/Roles/Roles'\r\nimport './Universal.scss'\r\nconst useStyles=makeStyles((theme)=>{\r\n    return{\r\n        button:{\r\n            padding:theme.spacing(1),\r\n            color:'#fff'\r\n        }\r\n    }\r\n})\r\nconst Universal = ({children}) => {\r\n    const classes=useStyles();\r\n    console.log('Universal called');\r\n    return (\r\n        <>\r\n            <div className=\"mainpage\">\r\n                <div className=\"mainpage__servers\">\r\n                    <div className=\"mainpage__servers--add\">\r\n                        <Addserver/>\r\n                    </div>\r\n                    <div className=\"mainpage__servers-display\">\r\n                        <AvailableServers/>\r\n                    </div>\r\n                </div>\r\n                <div className='main'>\r\n                    <div className=\"main__header\">\r\n                        <div className=\"main__header-sidebar\">\r\n                                <p className='main__header-currentchannel'>{useSelector((state)=>state.currentserver.name)}</p>\r\n                                <div className=\"main__header-expandicon\">\r\n                                    <IconButton className={classes.button} aria-label=\"settings\">\r\n                                        <ExpandMoreIcon fontSize='large'/>\r\n                                    </IconButton>\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"main__header-chatbar\">\r\n                            <div className=\"main__header--chat\">\r\n                                <ChatHeader/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"main__content\">\r\n                        <div className='main__sidebar'>\r\n                            {/* <div className='main__channels'>\r\n                                <div className=\"main__channels-header\">\r\n                                    <div className=\"main__channels-expandicon\">\r\n                                    <IconButton className={classes.button} aria-label=\"settings\">\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n                                        </div>\r\n                                    <p>Text Channels</p>\r\n                                    <div className=\"main__channels-addicon\">\r\n                                        <AddChannelPopup/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"main__channels-list\">\r\n                                    <SidebarChannel/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"main__voice\">\r\n                                <Sidebarvoice/>\r\n                            </div>\r\n                            <div className=\"main__avatar\">\r\n                                    <BadgeAvatars/>\r\n                            </div> */}\r\n                        </div>\r\n                        {children}\r\n                        {/* <div className=\"chat\">\r\n                            <div className='chat__message'>\r\n                                <ChatMessage/>\r\n                            </div>\r\n                            <div className=\"chat__searchbar\">\r\n                                <ChatSearchBar/>\r\n                            </div>\r\n                        </div> */}\r\n                        {/* <div className=\"main__roles\">\r\n                            <Roles/>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Universal\r\n","import React from 'react'\r\nimport styled from \"styled-components\"\r\nconst Color=styled.div`\r\n    background: ${props => props.color};\r\n    border-radius: 50%;\r\n    width: 2.5rem;\r\n    height: 2.5rem;\r\n`\r\nconst Allrolescolormap = ({k,rol}) => {\r\n    return (\r\n        <div className='allrolescolor'>  \r\n        {rol && rol[k].color && <>\r\n        <Color className=\"allrolescolor__rolevalue\" color={rol[k].color} />\r\n        <div className=\"allrolescolor__rolename\">\r\n            <p>: <span className='allrolescolor__rolename-span'>{k}</span></p>\r\n        </div>\r\n        </>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Allrolescolormap\r\n","import React from 'react'\r\nimport styled from \"styled-components\"\r\nimport { auth} from '../../firebase/firebase'\r\nconst Color=styled.div`\r\n    background: ${props => props.color};\r\n    border-radius: 50%;\r\n    width: 1.75rem;\r\n    height: 1.75rem;\r\n`\r\nconst Allrolesmap = ({rol,k,handleClick,roleheadid}) => {\r\n    return (\r\n        <div onClick={()=>handleClick({\r\n            photoURL:auth.currentUser.photoURL,\r\n            email:auth.currentUser.email,\r\n            id:rol.id,\r\n            rolename:k,\r\n            number:rol[k].number,\r\n            color:rol[k].color,\r\n            name:auth.currentUser.displayName,\r\n            serverroletypeid:roleheadid,\r\n            serverroleid:rol[k].serverroleid\r\n        })}>\r\n            {rol && rol[k].number &&<div className='allroles'>\r\n            <div className=\"allroles__button\">\r\n                <Color className=\"allrolescolor__rolevalue\" color={rol[k].color} />\r\n            </div>\r\n            <div className=\"allroles__number\">\r\n                {rol[k].number}\r\n            </div>\r\n            \r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Allrolesmap\r\n","import React, { useState } from 'react'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { useSelector } from 'react-redux';\r\nimport { auth, firestore } from '../../firebase/firebase'\r\nimport Allrolescolormap from './Allrolescolormap';\r\nimport Allrolesmap from './Allrolesmap';\r\nimport firebase from 'firebase/app'\r\nimport { Avatar, makeStyles } from '@material-ui/core';\r\nconst useStyles=makeStyles((theme)=>{\r\n    return{\r\n      avatar:{\r\n          width:theme.spacing(4.5),\r\n          height:theme.spacing(4.5)\r\n      }\r\n    }\r\n})\r\nconst RolesDocumentmap = ({role}) => {\r\n    const classes=useStyles();\r\n    const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const allrolesRef=firestore.collection('roles').doc(currentserverid).collection('rolemenu').doc(role.id).collection('allroles');\r\n    // const query=allrolesRef.orderBy('createdAt').limit(10);\r\n    const [allroles]=useCollectionData(allrolesRef,{idField:'id'});\r\n    const [count,setcount]=useState(0);\r\n    const handleclick=async(obj)=>{\r\n        setcount(count+1);\r\n        if(count>0){\r\n            return\r\n        }\r\n        const currentUserRef=firestore.collection('users').doc(auth.currentUser.uid);\r\n        const {rolename,id,email,photoURL,name,serverroleid,serverroletypeid,color}=obj;\r\n        const user= (await currentUserRef.get()).data()\r\n        const userid=await currentUserRef.get();\r\n        if(user && user.roles){\r\n            if(user.roles[currentserverid] && user.roles[currentserverid][role.rolename]){\r\n                return\r\n            }\r\n            else{\r\n                await currentUserRef.set({\r\n                    roles:{\r\n                        [currentserverid]:{\r\n                            [role.rolename]:{\r\n                                yourrole:rolename,\r\n                                color:color\r\n                            }\r\n                        }\r\n                    }\r\n                },{merge:true})\r\n\r\n                const serverRef=firestore.collection('servers').doc(currentserverid).collection('allroles').doc(serverroletypeid).collection('allroles').doc(serverroleid).collection('allusers');\r\n                serverRef.doc(userid.id).set({\r\n                    username:name,\r\n                    photoURL:photoURL,\r\n                    email:email,\r\n                    createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                })\r\n                const roleref=allrolesRef.doc(id);\r\n                roleref.update({\r\n                    [`${rolename}.number`]:firebase.firestore.FieldValue.increment(1),\r\n                })\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className='rolesdocument__main-individual'>\r\n        <div className='rolesdocument__header-photo'>\r\n                <Avatar className={classes.avatar} src='/./bot.png'/>\r\n        </div>\r\n            <div className=\"rolesdocument__content\">\r\n                        <div className=\"rolesdocument__content-header\">\r\n                            <div className='rolesdocument__content-name'>\r\n                                Discord Bot\r\n                            </div>\r\n                            <div className=\"rolesdocument__content-date\">\r\n                                {`${role.createdAt && \r\n                                    role.createdAt.toDate().getDate()+\"/\"+(role.createdAt.toDate().getMonth()+1)+\"/\"+role.createdAt.toDate().getFullYear()\r\n                                    }`}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"rolesdocument__message\">\r\n                            <div className=\"rolesdocument__message-rolemenu\">\r\n                                <p>Role Menu: {role.rolename}</p>\r\n                            </div>\r\n                            <div className=\"rolesdocument__message-react\">\r\n                                React to give yourself a role.\r\n                            </div>\r\n                            <div className=\"rolesdocument__message-allroles\">\r\n                                {allroles && allroles.map((rol,i)=>{\r\n                                    const keys = Object.keys(rol);\r\n                                    return(\r\n                                       <div key={i}>{ keys.map((k,index)=>{\r\n                                        return (\r\n                                            <Allrolescolormap key={index} rol={rol} k={k}/>\r\n                                        )\r\n                                    })}</div>\r\n                                    )                                    \r\n                                })}\r\n                            </div>\r\n                            <div className=\"rolesdocument__message-rolebuttons\">\r\n                            {allroles && allroles.map((rol)=>{\r\n                                    const keys = Object.keys(rol);\r\n                                    \r\n                                    return(\r\n                                        keys.map((k,index)=>{\r\n                                        return <Allrolesmap key={index} rol={rol} k={k} handleClick={handleclick} roleheading={role.rolename} roleheadid={role.serverroletypeid}/>\r\n                                    })\r\n                                    )                                    \r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RolesDocumentmap\r\n","import React from 'react'\r\nimport { useCollectionData} from 'react-firebase-hooks/firestore'\r\nimport { firestore } from '../../firebase/firebase'\r\nimport './RolesDocument.scss'\r\nimport RolesDocumentmap from './RolesDocumentmap'\r\nconst RolesDocument = ({roleid}) => {\r\n    const roleRef=firestore.collection('roles').doc(roleid).collection('rolemenu');\r\n    const query=roleRef.orderBy('createdAt').limit(10);\r\n    const [roles]=useCollectionData(query,{idField:'id'});\r\n    return (\r\n        <>\r\n            <div className=\"rolesdocument\">\r\n                <div className=\"rolesdocument__main\">\r\n                        {roles && roles.map((role)=>{\r\n                            return <RolesDocumentmap key={role.id} role={role}/>\r\n                        })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RolesDocument\r\n","import React from 'react'\r\nimport { useDocumentData } from 'react-firebase-hooks/firestore';\r\nimport { useSelector } from 'react-redux';\r\nimport { auth, firestore } from '../../firebase/firebase';\r\nimport RolesDocument from './RolesDocument';\r\n\r\nconst FetchRoleid = () => {\r\n    const serverid=useSelector((state)=>state.currentserver.id);\r\n    const serverRef=firestore.collection('servers').doc(serverid);\r\n    const [serverdata]=useDocumentData(serverRef);\r\n    return (\r\n        <>\r\n            {serverdata && auth.currentUser && <RolesDocument roleid={serverid}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FetchRoleid\r\n","const currentmessage=(doc)=>{\r\n    return{\r\n    type:'Current_message',\r\n    payload:doc\r\n  }\r\n  }\r\n  export default currentmessage;\r\n  ","const setclicked=()=>{\r\n    return{\r\n    type:'Clicked',\r\n  }\r\n  }\r\n  export default setclicked;\r\n  ","const replymessage=(msg)=>{\r\n    return{\r\n    type:'Reply_message',\r\n    payload:msg\r\n  }\r\n  }\r\n  export default replymessage;\r\n  ","const replytoggle=()=>{\r\n    return{\r\n    type:'Reply_toggle',\r\n  }\r\n  }\r\n  export default replytoggle;\r\n  ","import React,{useState} from 'react'\r\nimport './Emojicontainer.scss'\r\nimport data from './emojis.json'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nconst Emojicontainer = () => {\r\n    const [formValue,setformValue]=useState('');\r\n    const [emoji,setemoji]=useState([]);\r\n    const handleSubmit=(e)=>{\r\n        setemoji([]);\r\n        e.preventDefault();\r\n        let arr=[];\r\n        data.map((item)=>{\r\n            return item.tags.map((i)=>{\r\n                if(i===formValue){\r\n                    arr.push(item)\r\n                }\r\n            })\r\n        })\r\n        setemoji(arr);\r\n        setformValue('');\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"emojicontainer\">\r\n                {console.log(emoji)}\r\n                <div className=\"emojicontainer__header\">\r\n                    <div className=\"emojicontainer__header-inputdiv\">\r\n                        <form onSubmit={handleSubmit} className=\"emojicontainer__header-form\">\r\n                            <input type=\"text\" onChange={(e)=>{setformValue(e.target.value)}} value={formValue} autoFocus placeholder='find the perfect emoji' className='emojicontainer__header-input'/>\r\n                        </form>  \r\n                        <div className=\"emojicontainer__header-search\">\r\n                            <SearchIcon style={{fontSize:'2rem',color:'#72767d'}}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"emojicontainer__header-handicon\">\r\n                           👏\r\n                    </div>\r\n                </div>\r\n                <div className=\"emojicontainer__body\">\r\n                    <div className=\"emojicontainer__sidebar\">\r\n                        <div className=\"emojicontainer__sidebar-items\">\r\n                            <div className=\"emojicontainer__sidebar-item\">\r\n                                😃\r\n                            </div>\r\n                            <div className=\"emojicontainer__sidebar-item\">\r\n                                😬\r\n                            </div>\r\n                            <div className=\"emojicontainer__sidebar-item\">\r\n                                🤪\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"emojicontainer__content\">\r\n                        <div className=\"emojicontainer__content-header\">\r\n                            IN DEVELOPMENT\r\n                        </div>\r\n                        <div className=\"emojicontainer__content-items\">\r\n                            {!!emoji.length ? emoji.map((e,i)=>{\r\n                                return <div key={i} className=\"emojicontainer__content-item\">\r\n                                    {e.emoji}\r\n                                    </div>\r\n                            }):(data && data.map((d,index)=>{\r\n                                return <div key={index} className=\"emojicontainer__content-item\">\r\n                                    {d.emoji}\r\n                                </div>\r\n                            })) }\r\n                            {data && data.map((d,index)=>{\r\n                                return <div key={index} className=\"emojicontainer__content-item\">\r\n                                    {d.emoji}\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Emojicontainer\r\n","import React, { useState } from 'react';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { auth, firestore } from '../../firebase/firebase';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport currentmessage from '../../redux/message/message.actions'\r\nimport setclicked from '../../redux/clicked/clicked.actions'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport replymessage from '../../redux/replyclicked/replyclicked.actions'\r\nimport replytoggle from '../../redux/replytoggle/replytoggle.actions'\r\nimport './ChatMenu.scss'\r\nimport Emojicontainer from '../Emoji/Emojicontainer';\r\nconst useStyles=makeStyles(()=>{\r\n    return{\r\n        chatmenu:{\r\n            display:'flex'\r\n        },\r\n        icon:{\r\n            color:'#dadbdc',\r\n            '&:hover':{\r\n                backgroundColor:'#3a3e44'\r\n            }\r\n        },\r\n        myicon:{\r\n          color:'#b9bbbe',\r\n          width:'1.8rem',\r\n          height:'1.8rem'\r\n        },\r\n        deleteicon:{\r\n          width:'1.8rem',\r\n          height:'1.8rem',\r\n          color:'#f04747'\r\n        }\r\n    }\r\n})\r\n\r\nfunction ChatMenu({msg}) {\r\n    const classes=useStyles();\r\n    const dispatch = useDispatch();\r\n    const currentid=useSelector((state)=>state.doc.id);\r\n    const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const [other,setother]=useState(false);\r\n    const [user,setuser]=useState(false);\r\n    const [emoji,setemoji]=useState(false);\r\n    const handleClick = () => {\r\n        dispatch(currentmessage({id:msg.id, msg:msg.message}))\r\n        dispatch(setclicked());\r\n  };\r\n  const handleDelete=()=>{\r\n    const docRef=firestore.collection('servers').doc(currentserverid).collection('channels').doc(currentid).collection('messages').doc(msg.id);\r\n    docRef.delete();\r\n  }\r\n  const handleReply=()=>{\r\n    document.getElementById(\"myTextField\").focus();\r\n    dispatch(replymessage({id:msg.id,sender:msg.sendername,msg:msg.message,photo:msg.senderphoto}));\r\n    dispatch(replytoggle())\r\n  }\r\n  const handleemoji=()=>{\r\n    setemoji(!emoji);\r\n  }\r\n  const handlemore=()=>{\r\n    console.log('called');\r\n    if(auth.currentUser.email===msg.senderemail){\r\n      setuser(!user);\r\n    }\r\n    else{\r\n      setother(!other);\r\n    }\r\n  }\r\n    return (\r\n      <div className='chatmenu'>\r\n        {emoji && <div className='emojcontain'><Emojicontainer/></div>}\r\n        <div className=\"chatmenu__addreaction\" onClick={handleemoji}>\r\n          <img className='chatmenu__image' src=\"/./addreaction.png\" alt=\"\"/>\r\n        </div>\r\n        {auth.currentUser.email===msg.senderemail ? <div className=\"chatmenu__edt\" onClick={handleClick}>\r\n          <img className='chatmenu__image' src=\"/./edit.png\" alt=\"\"/>\r\n        </div> :<div className=\"chatmenu__reply\" onClick={handleReply}>\r\n         <img className='chatmenu__image' src=\"/./reply.png\" alt=\"reply\"/>\r\n        </div>}\r\n        <div className=\"chatmenu__more\" onClick={handlemore}>\r\n          <img className='chatmenu__image' src=\"/./more.png\" alt=\"more\" / >\r\n        </div>\r\n      {user && <div className='morebox'>\r\n          <div className=\"morebox__container\">\r\n            <div className=\"morebox__item\" onClick={handleClick}>\r\n              <div className=\"morebox__item-label\">\r\n                Edit message\r\n              </div>\r\n              <div className=\"morebox__item-icon\">\r\n                <EditIcon className={classes.myicon} />\r\n              </div>\r\n            </div>\r\n            <div className=\"morebox__item\" onClick={handleDelete}>\r\n              <div className=\"morebox__item-deletelabel\">\r\n                Delete Message\r\n              </div>\r\n              <div className=\"morebox_item-icon\">\r\n                <DeleteIcon className={classes.deleteicon}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n      {other && <div className='morebox'>\r\n          <div className=\"morebox__container\">\r\n            <div className=\"morebox__item\" onClick={handleReply}>\r\n              <div className=\"morebox__item-label\">\r\n                Reply Message\r\n              </div>\r\n              <div className=\"morebox_item-icon\">\r\n                <ReplyIcon className={classes.myicon}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n      </div>\r\n    )\r\n    }\r\n\r\n\r\nexport default ChatMenu\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { firestore } from '../../firebase/firebase';\r\nimport './ChatEdit.scss'\r\nimport setclicked from '../../redux/clicked/clicked.actions';\r\nimport useKeypress from '../Keypress/Keypress';\r\n\r\nfunction ChatEdit() {\r\n    const id=useSelector((state)=>state.msg.id);\r\n    const currentid=useSelector((state)=>state.doc.id);\r\n    const msg=useSelector((state)=>state.msg.msg);\r\n    const [formValue,setformValue]=useState(msg);\r\n    const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const  dispatch = useDispatch();\r\n    const handleSubmit=(e)=>{\r\n        console.log('called');\r\n        e.preventDefault();\r\n        const docRef=firestore.collection('servers').doc(currentserverid).collection('channels').doc(currentid).collection('messages').doc(id);\r\n        console.log(docRef);\r\n        docRef.update({\r\n            message:formValue\r\n        })\r\n        dispatch(setclicked())\r\n    }\r\n    useKeypress('Escape', () => {\r\n        dispatch(setclicked())\r\n      });\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"chatedit\">\r\n                    <input type='text' required value={formValue} onChange={(e)=>{setformValue(e.target.value)}} style={{width:'100%'}} className='chatedit__inputarea'/>\r\n                </div>\r\n                <div className=\"editinstruction\">\r\n                    <p className='editinstruction__p'>escape to <span className='editinstruction__span' onClick={()=>dispatch(setclicked())}>cancel</span> • enter to <span className='editinstruction__span' onClick={handleSubmit}>save</span></p>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatEdit\r\n","import { useEffect } from 'react';\r\nexport default function useKeypress(key, action) {\r\n  useEffect(() => {\r\n    function onKeyup(e) {\r\n      if (e.key === key) action()\r\n    }\r\n    window.addEventListener('keyup', onKeyup);\r\n    return () => window.removeEventListener('keyup', onKeyup);\r\n  }, []);\r\n}","import { Avatar, makeStyles } from '@material-ui/core';\r\nimport React from 'react'\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport './ChatReply.scss'\r\nimport { useSelector } from 'react-redux';\r\nconst useStyles=makeStyles((theme)=>{\r\n    return{\r\n        small:{\r\n            width:theme.spacing(2.2),\r\n            height:theme.spacing(2.2),\r\n            marginRight:theme.spacing(.5)\r\n        }\r\n    }\r\n})\r\nfunction ChatReply({msg}) {\r\n    const admin=useSelector((state)=>state.currentrole.admin)\r\n    const classes=useStyles();\r\n    return (\r\n        <div className='chatreply'>\r\n            <div className=\"chatreply__photo\">\r\n                <Avatar className={classes.small} src={msg.reply.photo}/>\r\n            </div>\r\n            <div className={`${admin && admin.admin === msg.reply.sender && 'chatreply__sender-admin'} chatreply__sender`}>\r\n                @{msg.reply.sender}\r\n            </div>\r\n            <div className=\"chatreply__message\">\r\n                {msg.reply.msg ? msg.reply.msg.slice(0,100)+\"...\" :  <ImageIcon/> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatReply\r\n","import React from 'react'\r\nimport ReactPlayer from 'react-player/lazy'\r\nfunction RenderVideo({msg}) {\r\n   \r\n    const linkify=(input)=>{\r\n        var urlRegex =/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig;\r\n        return input.match(urlRegex)\r\n    }\r\n    return (\r\n        <div className={`${!!linkify(msg).filter((item)=>item.includes('youtube.com/watch')&&item).length && 'rendervideo__videolink'} rendervideo`}> \r\n        {linkify(msg) && !!linkify(msg).filter((item)=>item.includes('youtube.com/watch')&&item).length && <ReactPlayer url={linkify(msg).filter((item)=>item.includes('youtube.com/watch')&&item)}/> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenderVideo\r\n","import React from 'react'\r\n// import * as ByteSize from 'byte-size'\r\nfunction RenderAudio({msg}) {\r\n    // const {audiosize}=msg\r\n    // const bytesize=()=>{\r\n    //     console.log('called');\r\n    //     return `${ByteSize(audiosize)}`;\r\n    // }\r\n    return (\r\n        <div className='renderaudio'>\r\n           <div className=\"renderaudio__name\"> {msg && msg.audioname}</div>\r\n            <div className=\"renderaudio__mainplayer\">\r\n                {/* <div className=\"renderaudio__player-size\">{msg && bytesize()}</div> */}\r\n                <div className=\"renderaudio__player\">\r\n                    <audio\r\n                    className='renderaudio__player-music'\r\n                    controls\r\n                    src={msg.audiourl}\r\n                    preload='metadata'\r\n                    >\r\n                    Your browser does not support the\r\n                    <code>audio</code> element.\r\n                    </audio>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenderAudio\r\n","import { Avatar } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport {makeStyles} from '@material-ui/core'\r\nimport ChatMenu from '../ChatMenu/ChatMenu'\r\nimport ChatEdit from '../ChatEdit/ChatEdit'\r\nimport { useSelector } from 'react-redux'\r\nimport ChatReply from '../ChatReply/ChatReply'\r\nimport Linkify from 'react-linkify';\r\nimport RenderVideo from './RenderVideo'\r\nimport RenderAudio from './RenderAudio'\r\nconst useStyles=makeStyles((theme)=>{\r\n    return{\r\n      avatar:{\r\n          width:theme.spacing(4.5),\r\n          height:theme.spacing(4.5)\r\n      }\r\n    }\r\n})\r\n const Chatmessagemap=({msg})=> {\r\n    const [inHover, setHover] = useState(false);\r\n    const message=msg.message.replaceAll(\"\\\\n\", \"\\n\");\r\n    const classes=useStyles();\r\n    const id=useSelector((state)=>state.msg.id); \r\n    const admin=useSelector((state)=>state.currentrole.admin);\r\n    const chatedittoggle=useSelector((state)=>state.click.clicked);\r\n    const linkify=(input)=>{\r\n        var urlRegex =/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig;\r\n        return input.match(urlRegex)\r\n    }\r\n    const componentDecorator = (href, text, key) => (\r\n        <a className={`${linkify(msg.message) && 'linkify__videotext'} linkify__text`} href={href} key={key} target=\"_blank\" rel=\"noreferrer\">\r\n          {text}\r\n        </a>\r\n      );\r\n      \r\n      \r\n     return (\r\n         <>\r\n        <div className={`${msg.reply && 'chatmessage__main--replied'} chatmessage__main ${chatedittoggle && id===msg.id && 'chatmessage__main--edit'}`}>\r\n            <div onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} className=\"chatmessage\">\r\n            <div className=\"chatmessage\">\r\n                <div className=\"chatmessage__replycontent\">\r\n                    {msg.reply && <img className='chatmessage__replycontent--replyimage' src=\"/discord-reply.png\" alt=\"reply\"/>}\r\n                    <div className=\"chatmessage__replycontent--content\">\r\n                            { msg.reply && <ChatReply msg={msg}/>}\r\n                        </div>\r\n                </div>\r\n                <div className=\"chatmessage__header\">\r\n                    <div className={`${msg.reply&& 'chatmessage__header-photo--replied'} chatmessage__header-photo`}>\r\n                        <Avatar className={classes.avatar} src={`${msg && msg.senderphoto}`}/>\r\n                    </div>\r\n                    <div className=\"chatmessage__content\">\r\n                        <div className=\"chatmessage__content-header\">\r\n                            <div className={`${admin && admin.admin === msg.sendername && 'chatmessage__content-admin'} chatmessage__content-name`}>\r\n                                {`${msg && msg.sendername}`}\r\n                            </div>\r\n                            <div className=\"chatmessage__content-date\">\r\n                                {`${msg.createdAt && \r\n                                    msg.createdAt.toDate().getDate()+\"/\"+(msg.createdAt.toDate().getMonth()+1)+\"/\"+msg.createdAt.toDate().getFullYear()\r\n                                    }`}\r\n                            </div>\r\n                            <div className={`${msg.reply && 'chatmessage__content-menu--replied'} chatmessage__content-menu chatmessage__content-menu-normal`}>\r\n                               {inHover&& <ChatMenu msg={msg} />}\r\n                               {/* {<ChatMenu msg={msg}/>} */}\r\n                               {/* {console.log(id===msg.id)} */}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"chatmessage__message\">\r\n                         {\r\n                         useSelector((state)=>state.click.clicked) && msg.id===id ? <ChatEdit/>:\r\n                         <Linkify componentDecorator={componentDecorator}>\r\n                            {msg && !!msg.message ? message : !msg.base64 && <RenderAudio msg={msg}/>}\r\n                            </Linkify>   \r\n                         }\r\n                            {msg.base64 &&<img src={msg.base64} alt=\"cannot decode\"/>}\r\n                            {linkify(msg.message) && <RenderVideo msg={msg.message}/>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Chatmessagemap\r\n","// import { useEffect, useState } from 'react';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { useSelector } from 'react-redux';\r\nimport {firestore } from '../../firebase/firebase';\r\nimport FetchRoleid from '../RolesDocument/FetchRoleid';\r\n// import {db} from '../../firebase/firebase'\r\nimport './ChatMessage.scss'\r\nimport Chatmessagemap from './Chatmessagemap';\r\nconst ChatMessage= ()=> {\r\n    const id= useSelector((state)=>state.doc.id);\r\n    const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const channelRef=firestore.collection('servers').doc(currentserverid).collection('channels').doc(id).collection('messages');\r\n    const query=channelRef.orderBy('createdAt');\r\n    const [messages]=useCollectionData(query,{idField:'id'});\r\n    // const currentkey=useSelector((state)=>state.key.key);\r\n    // useEffect(() => {\r\n    //     const uploadRef= db.ref(`uploads/${currentkey}`);\r\n    //     uploadRef.on(\"value\",(snapshot)=>{\r\n           \r\n    //         console.log('called useEffect');\r\n    //     })\r\n    //     return () => {\r\n    //         uploadRef.off();\r\n    //         console.log('called clean');\r\n            \r\n    //     }\r\n    // }, [currentkey])\r\n\r\n    const currrentdoc=useSelector((state)=>state.doc.name);\r\n    return (\r\n        <div >\r\n            {currrentdoc==='roles'?<FetchRoleid/>: messages && messages.map((msg)=>{\r\n                return <Chatmessagemap key={msg.id} msg={msg}/>\r\n            })}            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatMessage\r\n","const openupload=()=>{\r\n    return{\r\n    type:'Change_open',\r\n  }\r\n  }\r\n  export default openupload;\r\n  ","import React from 'react'\r\nimport {DropzoneArea} from 'material-ui-dropzone'\r\nimport {auth, firestore} from '../../firebase/firebase'\r\nimport firebase from 'firebase/app'\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport openupload from '../../redux/openupload/message.actions'\r\nimport {storage} from '../../firebase/firebase'\r\nimport replytoggle from '../../redux/replytoggle/replytoggle.actions';\r\n// import {db} from '../../firebase/firebase'\r\n// import storage from '../../firebase/firebase'\r\nconst useStyles=makeStyles({\r\n    drop:{\r\n        backgroundColor:'#2C2F33',\r\n        color:'#e6e8e8'\r\n    },\r\n    icon:{\r\n        color:'gray'\r\n    },\r\n})\r\n\r\n\r\nfunction FileUpload() {\r\n    const id= useSelector((state)=>state.doc.id);\r\n    const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const toggle=useSelector((state)=>state.replytoggle.clicked);\r\n    const replymsg=useSelector((state)=>state.reply);\r\n    const classes=useStyles();\r\n    const dispatch = useDispatch();\r\n        const resizeFile = (file) =>\r\n            new Promise((resolve) => {\r\n                Resizer.imageFileResizer(\r\n                file,\r\n                350,\r\n                350,\r\n                \"JPEG\",\r\n                100,\r\n                0,\r\n                (uri) => {\r\n                    resolve(uri);\r\n                },\r\n                \"base64\"\r\n                );\r\n            });\r\n  \r\n    const handleupload=async(file)=>{\r\n        if(['audio/mpeg', 'audio/mp4', 'audio/ogg','audio/wav'].includes(file[0].type)){\r\n            const audio=file[0];\r\n            console.log(audio);\r\n            try{\r\n                dispatch(openupload());\r\n                const storageRef=storage.ref();\r\n                const fileRef = storageRef.child(audio.name)\r\n                await fileRef.put(audio).then(() => {\r\n                fileRef.getDownloadURL().then(function (url) {\r\n                    console.log(url);\r\n                    const channelRef= firestore.collection('servers').doc(currentserverid).collection('channels').doc(id).collection('messages');\r\n                    if(toggle){\r\n                        dispatch(replytoggle());\r\n                        channelRef.add({\r\n                            message:'',\r\n                            audioname:audio.name,\r\n                            audiourl:url,\r\n                            audiosize:audio.size,\r\n                            sendername:auth.currentUser.displayName,\r\n                            senderemail:auth.currentUser.email,\r\n                            senderuid:auth.currentUser.uid,\r\n                            senderphoto:auth.currentUser.photoURL,\r\n                            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                            reply:replymsg\r\n                        })\r\n                    }\r\n                    else{\r\n                        channelRef.add({\r\n                            message:'',\r\n                            audioname:audio.name,\r\n                            audiourl:url,\r\n                            audiosize:audio.size,\r\n                            sendername:auth.currentUser.displayName,\r\n                            senderemail:auth.currentUser.email,\r\n                            senderuid:auth.currentUser.uid,\r\n                            senderphoto:auth.currentUser.photoURL,\r\n                            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                        })\r\n                    }\r\n                    });\r\n                    console.log(\"Uploaded a file\")\r\n                    })\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n            }\r\n            \r\n        }\r\n        //////////////////////////////////image file\r\n        if(['image/jpeg', 'image/png', 'image/bmp','image/x-icon'].includes(file[0].type))\r\n        {\r\n        const image=file[0];\r\n        console.log(image);\r\n        try{\r\n            dispatch(openupload());\r\n            const resizedfile=await resizeFile(image);\r\n            const channelRef= firestore.collection('servers').doc(currentserverid).collection('channels').doc(id).collection('messages');\r\n            if(toggle){\r\n                dispatch(replytoggle());\r\n                await channelRef.add({\r\n                    message:'',\r\n                    base64:resizedfile,\r\n                    sendername:auth.currentUser.displayName,\r\n                    senderemail:auth.currentUser.email,\r\n                    senderuid:auth.currentUser.uid,\r\n                    senderphoto:auth.currentUser.photoURL,\r\n                    createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                    reply:replymsg\r\n                })\r\n            }\r\n            else{\r\n                await channelRef.add({\r\n                    message:'',\r\n                    base64:resizedfile,\r\n                    sendername:auth.currentUser.displayName,\r\n                    senderemail:auth.currentUser.email,\r\n                    senderuid:auth.currentUser.uid,\r\n                    senderphoto:auth.currentUser.photoURL,\r\n                    createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                })\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\n        /////////////////////Realtime Datasbase\r\n        // try{\r\n        //     const resizedfile=await resizeFile(image);\r\n        //     const uploadref=db.ref('uploads');\r\n        //     const newuploadRef=uploadref.push();\r\n        //     (await newuploadRef).set({\r\n        //         newupload:resizedfile\r\n        //     })\r\n        //     dispatch(currentkey({key:newuploadRef.key}));\r\n        // }\r\n        // catch(err){\r\n        //     console.log(err);\r\n        // }\r\n        \r\n        // const storageRef=storage.ref();\r\n        // const fileRef = storageRef.child(file.name)\r\n        \r\n        // await fileRef.put(file).then(() => {\r\n        // fileRef.getDownloadURL().then(function (url) {\r\n        //    console.log(url);\r\n        //     });\r\n        //     console.log(\"Uploaded a file\")\r\n        //     })\r\n\r\n        \r\n    \r\n    return (\r\n        <div>\r\n            <DropzoneArea\r\n            dropzoneClass={classes.drop}\r\n            classes={{icon:classes.icon,image:classes.imageContainer}}\r\n            // acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\r\n            showPreviews={false}\r\n            showPreviewsInDropzone={false}\r\n            maxFileSize={10000000}\r\n            filesLimit={1}\r\n            onAdd={handleupload}\r\n            onDrop={handleupload}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileUpload\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport {IconButton, makeStyles} from '@material-ui/core'\r\nimport replytoggle from '../../redux/replytoggle/replytoggle.actions'\r\nconst useStyles=makeStyles({\r\n    button:{\r\n        margin:0,\r\n        padding:'.1rem',\r\n        color:'#b9bbbe'\r\n    },\r\n    icon:{\r\n        width:'1.8rem'\r\n    }\r\n})\r\nfunction ChatSearchReply() {\r\n    const classes=useStyles();\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div>\r\n            <div className='chatsearchbar__reply'>\r\n                <div className=\"chatsearchbar__reply-text\">\r\n                Replying to {useSelector((state)=>state.reply.sender)}\r\n                </div>\r\n                <div className=\"chatsearchnar__reply-close\">\r\n                    <IconButton className={classes.button} onClick={()=>{dispatch(replytoggle())}}>\r\n                        <CancelIcon fontSize='large' className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatSearchReply\r\n","import React, { useState,useRef } from 'react'\r\nimport './ChatSearchBar.scss'\r\nimport firebase from 'firebase/app'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport GifIcon from '@material-ui/icons/Gif';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport { IconButton,makeStyles } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { auth, firestore } from '../../firebase/firebase';\r\n// import { Picker } from 'emoji-mart'\r\n// import 'emoji-mart/css/emoji-mart.css'\r\nimport FileUpload from '../FileUpload/FileUpload'\r\nimport openupload from '../../redux/openupload/message.actions'\r\n// import OutsideClick from '../OutsideClick/OutsideClick'\r\nimport Emojicontainer from '../Emoji/Emojicontainer'\r\nimport replytoggle from '../../redux/replytoggle/replytoggle.actions'\r\nimport ChatSearchReply from './ChatSearchReply'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nconst useStyles=makeStyles(()=>{\r\n    return{\r\n        button:{\r\n            color: '#b8bbc0',\r\n            padding:'0 .75rem'\r\n        },\r\n        addbutton:{\r\n            backgroundColor:'#40454b',\r\n            color:'#b8bbc0',\r\n            padding:'.9rem 1rem',\r\n            '&:hover':{\r\n                backgroundColor:'#40454b'\r\n            }\r\n        }\r\n    }\r\n})\r\nfunction ChatSearchBar() {\r\n    const dispatch = useDispatch()\r\n    const classes=useStyles();\r\n    const [openpicker,setopenpicker]=useState(false);\r\n    const [formValue,setformValue]=useState('');\r\n    const currentserverid=useSelector((state)=>state.currentserver.id)\r\n    const id= useSelector((state)=>state.doc.id)\r\n    const channelRef=firestore.collection('servers').doc(currentserverid).collection('channels').doc(id).collection('messages');\r\n    const replymsg= useSelector((state)=>state.reply);\r\n    const togglereply=useSelector((state)=>state.replytoggle.clicked);\r\n    const currentdoc=useSelector((state)=>state.doc.name);\r\n    const query=channelRef.orderBy('createdAt','desc').limit(1);\r\n    const [messages]=useCollectionData(query,{idField:'id'});\r\n    const handleSubmit=async(e)=>{\r\n        e.preventDefault();\r\n        if(currentdoc==='roles'){\r\n            setformValue('Not authorized to send message here');\r\n            return\r\n        }\r\n        if(!togglereply){\r\n            if(!!messages.length && messages[0].senderemail===auth.currentUser.email){\r\n                const messageRef=channelRef.doc(messages[0].id);\r\n                await messageRef.update({\r\n                    message:messages[0].message+'\\\\n'+formValue\r\n                },{merge:true})\r\n            }\r\n            else{\r\n                await channelRef.add({\r\n                    message:formValue,\r\n                    sendername:auth.currentUser.displayName,\r\n                    senderemail:auth.currentUser.email,\r\n                    senderuid:auth.currentUser.uid,\r\n                    senderphoto:auth.currentUser.photoURL,\r\n                    createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                })\r\n            }\r\n            \r\n        }\r\n        else{\r\n            await channelRef.add({\r\n                message:formValue,\r\n                sendername:auth.currentUser.displayName,\r\n                senderemail:auth.currentUser.email,\r\n                senderuid:auth.currentUser.uid,\r\n                senderphoto:auth.currentUser.photoURL,\r\n                createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                reply:replymsg\r\n            })\r\n            dispatch(replytoggle());\r\n        }\r\n        setformValue('');\r\n    }\r\n    const handleselect=(emoj)=>{\r\n        setformValue(()=>{\r\n           return formValue+emoj.native\r\n        })\r\n        \r\n    }\r\n    const handlePicker=()=>{\r\n        setopenpicker(!openpicker)\r\n    }\r\n    const handleadd=()=>{\r\n        dispatch(openupload());\r\n    }\r\n    \r\n    return (\r\n        <div style={{position:'relative'}}>\r\n           {useSelector((state)=>state.replytoggle.clicked)&&<ChatSearchReply/>}\r\n            <div className=\"chatsearchbar\">\r\n                <div className=\"chatsearchbar__addicon\">\r\n                    <IconButton className={classes.addbutton} onClick={handleadd} aria-label=\"settings\">\r\n                        <AddCircleOutlineIcon fontSize='large' />\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"chatsearchbar__input\">\r\n                    <form onSubmit={handleSubmit}>\r\n                     <input autoFocus id=\"myTextField\" value={formValue} required onChange={(e)=>{setformValue(e.target.value)}} className='chatsearchbar__input-text' placeholder={`Message #${useSelector((state)=>state.doc.name)}`} type=\"text\"/>\r\n                    </form>\r\n                </div>\r\n                <div className=\"chatsearchbar__gifticon\">\r\n                    <IconButton className={classes.button} aria-label=\"settings\" >\r\n                        <CardGiftcardIcon style={{ fontSize: 30 }}/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"chatsearchbar__gifcon\">\r\n                    <IconButton className={classes.button} aria-label=\"settings\">\r\n                        <GifIcon style={{ fontSize: 30 }}/>\r\n                    </IconButton>\r\n                </div>\r\n                \r\n                <div className=\"chatsearchbar__emojiicon\">\r\n                    <IconButton className={classes.button} onClick={handlePicker} aria-label=\"settings\">\r\n                        <InsertEmoticonIcon style={{ fontSize: 30 }}/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n         {/* {openpicker&& <div ref={ref} className='emojipicker'><Picker  onSelect={handleselect} /></div>} */}\r\n         {openpicker&& <div className='emojipicker'><Emojicontainer/></div>}\r\n        {useSelector((state)=>state.open.open) && <div className='upload'><FileUpload/></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatSearchBar\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport ChatMessage from '../../components/ChatMessage/ChatMessage'\r\nimport ChatSearchBar from '../../components/ChatSearchBar/ChatSearchBar'\r\nimport currentserver from '../../redux/server/server.actions'\r\nimport './home_serverId.scss'\r\nconst Home_serverId = ({location,history,match}) => {\r\n    const dispatch = useDispatch();\r\n    console.log(location);\r\n    console.log(history);\r\n    console.log(match);\r\n    // console.log(match.params.serverId);\r\n    useEffect(() => {\r\n        // dispatch(currentserver({id:match.params.serverId,name:server.servername,email:server.email}))\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className=\"chat\">\r\n                <div className='chat__message'>\r\n                    <ChatMessage/>\r\n                </div>\r\n                <div className=\"chat__searchbar\">\r\n                    <ChatSearchBar/>\r\n                </div>                    \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home_serverId\r\n","import { IconButton,makeStyles } from '@material-ui/core';\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport ChatMessage from '../../components/ChatMessage/ChatMessage';\r\nimport ChatSearchBar from '../../components/ChatSearchBar/ChatSearchBar';\r\nimport { firestore } from '../../firebase/firebase';\r\nimport currentdoc from '../../redux/document/document.actions';\r\nimport AddChannelPopup from '../../components/AddChannelPopup/AddChannelPopup'\r\nimport SidebarChannel from '../../components/SidebarChannel/SidebarChannel'\r\nimport Sidebarvoice from '../../components/Sidebarvoice/Sidebarvoice'\r\nimport BadgeAvatars from '../../components/Avatar/BadgeAvatar'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Roles from '../../components/Roles/Roles'\r\nimport './Home_serverId_channel.scss'\r\nconst useStyles=makeStyles((theme)=>{\r\n    return{\r\n        button:{\r\n            padding:theme.spacing(1),\r\n            color:'#fff'\r\n        }\r\n    }\r\n})\r\nconst Home_serverId_channel = ({match}) => {\r\n    console.log('called');\r\n    const classes=useStyles();\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        const myfun=async()=>{\r\n            const channelRef=firestore.collection(\"servers\").doc(match.params.serverId).collection(\"channels\").doc(match.params.channelId);\r\n            await channelRef.get().then((snapshot)=>{\r\n                dispatch(currentdoc({id:match.params.channelId,name:snapshot.data().channel}))                \r\n            })\r\n            \r\n        }\r\n        myfun();        \r\n        return () => {\r\n            \r\n        }\r\n    }, [dispatch,match.params.channelId])\r\n    return (\r\n        <>\r\n               <div className='main__sidebar'>\r\n                    <div className='main__channels'>\r\n                        <div className=\"main__channels-header\">\r\n                            <div className=\"main__channels-expandicon\">\r\n                                <IconButton className={classes.button} aria-label=\"settings\">\r\n                                    <ExpandMoreIcon/>\r\n                                </IconButton>\r\n                            </div>\r\n                            <p>Text Channels</p>\r\n                            <div className=\"main__channels-addicon\">\r\n                                <AddChannelPopup/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"main__channels-list\">\r\n                            <SidebarChannel/>\r\n                        </div>\r\n                    </div>\r\n                        <div className=\"main__voice\">\r\n                            <Sidebarvoice/>\r\n                        </div>\r\n                            <div className=\"main__avatar\">\r\n                                <BadgeAvatars/>\r\n                            </div>\r\n                        </div>\r\n            <div className=\"chat\">\r\n                <div className='chat__message'>\r\n                    <ChatMessage/>\r\n                </div>\r\n                <div className=\"chat__searchbar\">\r\n                    <ChatSearchBar/>\r\n                </div>                    \r\n            </div>\r\n            <div className=\"main__roles\">\r\n                <Roles/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home_serverId_channel\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router'\r\nimport Home_serverId from '../home_serverId/home_serverId';\r\nimport Home_serverId_channel from '../Home_serverId_channel/Home_serverId_channel';\r\nconst ServerPage = ({match}) => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route exact path={`${match.path}`} component={Home_serverId}/>\r\n                <Route path={`${match.path}/:channelId`} component={Home_serverId_channel}/>\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ServerPage\r\n","import { IconButton, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Addserver from '../../components/AddServer/Addserver'\r\nimport AvailableServers from '../../components/AvailableServers/AvailableServers'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChatHeader from '../../components/ChatHeader/ChatHeader'\r\nimport './Layout_Sidebar.scss'\r\nconst useStyles=makeStyles((theme)=>{\r\n    return{\r\n        button:{\r\n            padding:theme.spacing(1),\r\n            color:'#fff'\r\n        }\r\n    }\r\n})\r\nconst LayoutSidebar = ({children}) => {\r\n    console.log('layout sidebar');\r\n    const classes=useStyles();\r\n    return (\r\n        <>\r\n            <div className=\"mainpage\">\r\n                <div className=\"mainpage__servers\">\r\n                    <div className=\"mainpage__servers--add\">\r\n                        <Addserver/>\r\n                    </div>\r\n                    <div className=\"mainpage__servers-display\">\r\n                        <AvailableServers/>\r\n                    </div>\r\n                </div>\r\n                <div className='main'>\r\n                    <div className=\"main__header\">\r\n                        <div className=\"main__header-sidebar\">\r\n                                <p className='main__header-currentchannel'>{useSelector((state)=>state.currentserver.name)}</p>\r\n                                <div className=\"main__header-expandicon\">\r\n                                    <IconButton className={classes.button} aria-label=\"settings\">\r\n                                        <ExpandMoreIcon fontSize='large'/>\r\n                                    </IconButton>\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"main__header-chatbar\">\r\n                            <div className=\"main__header--chat\">\r\n                                <ChatHeader/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"main__content\">\r\n                        {/* <div className='main__sidebar'>\r\n                            <div className='main__channels'>\r\n                                <div className=\"main__channels-header\">\r\n                                    <div className=\"main__channels-expandicon\">\r\n                                    <IconButton className={classes.button} aria-label=\"settings\">\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n                                        </div>\r\n                                    <p>Text Channels</p>\r\n                                    <div className=\"main__channels-addicon\">\r\n                                        <AddChannelPopup/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"main__channels-list\">\r\n                                    <SidebarChannel/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"main__voice\">\r\n                                <Sidebarvoice/>\r\n                            </div>\r\n                            <div className=\"main__avatar\">\r\n                                    <BadgeAvatars/>\r\n                            </div>\r\n                        </div> */}\r\n                        {children}\r\n                        {/* <div className=\"chat\">\r\n                            <div className='chat__message'>\r\n                                <ChatMessage/>\r\n                            </div>\r\n                            <div className=\"chat__searchbar\">\r\n                                <ChatSearchBar/>\r\n                            </div>\r\n                        </div> */}\r\n                        {/* <div className=\"main__roles\">\r\n                            <Roles/>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LayoutSidebar\r\n","import React from 'react';\r\nimport './App.scss'\r\nimport {auth} from './firebase/firebase'\r\nimport {useAuthState} from 'react-firebase-hooks/auth'\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport Homepage from './pages/homepage';\r\nimport Home from './pages/home@me/home@me';\r\nimport Universal from './pages/Universal/Universal';\r\nimport ServerPage from './pages/ServerPage/ServerPage';\r\nimport LayoutSidebar from './pages/Layout_Sidebar/Layout_Sidebar';\r\nfunction App() {\r\nconst [user]=useAuthState(auth);\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      </header>\r\n      <main>\r\n        {/* <img src='/discord-clone/discord_server.png' alt='discord-svg'/> */}\r\n        {!user && <Redirect to='/discord-clone'/>}\r\n        <Switch>\r\n          <Route exact path='/discord-clone' render={()=>auth.currentUser?<Redirect to='/discord-clone/channels/@me'/>:<Homepage/>} />\r\n            <Switch>\r\n              <Route exact path='/discord-clone/channels/@me' render={()=><Universal><Home></Home></Universal>}/>\r\n              <Route path='/discord-clone/channels/:serverId' render={(props)=><LayoutSidebar><ServerPage {...props}/></LayoutSidebar>}/>\r\n            </Switch>\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState={\r\n    id:'ofIRBMmGukI3EXPAYmgn',\r\n    name:'Discordy'\r\n  }\r\n   const documentReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'Current_Document':\r\n      return {\r\n        ...state,\r\n        id:action.payload.id,\r\n        name:action.payload.name\r\n      }\r\n      default: return state\r\n    }\r\n  }\r\n  export default documentReducer\r\n  ","const initialState={\r\n    id:'',\r\n    msg:''\r\n  }\r\n   const messageReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'Current_message':\r\n      return {\r\n        ...state,\r\n        id:action.payload.id,\r\n        msg:action.payload.msg\r\n      }\r\n      default: return state\r\n    }\r\n  }\r\n  export default messageReducer\r\n  ","const initialState={\r\n    clicked:false,\r\n  }\r\n   const replyopenReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'Clicked':\r\n      return {\r\n        ...state,\r\n        clicked:!state.clicked,\r\n      }\r\n      default: return state\r\n    }\r\n  }\r\n  export default replyopenReducer\r\n  ","const initialState={\r\n  open:false,\r\n  }\r\n   const openReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'Change_open':\r\n      return {\r\n        ...state,\r\n        open:!state.open,\r\n      }\r\n      default: return state\r\n    }\r\n  }\r\n  export default openReducer\r\n  ","const initialState={\r\n    id:'',\r\n    sender:'',\r\n    msg:'',\r\n    photo:'',\r\n    // base64:''\r\n  }\r\n   const ReplyclickedReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'Reply_message':\r\n        return{\r\n          ...state,\r\n            id:action.payload.id,\r\n            sender:action.payload.sender,\r\n            msg:action.payload.msg,\r\n            photo:action.payload.photo,\r\n        }\r\n      \r\n      default: return state\r\n    }\r\n  }\r\n  export default ReplyclickedReducer\r\n  ","const initialState={\r\n    clicked:false,\r\n  }\r\n   const replytoggleReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'Reply_toggle':\r\n      return {\r\n        ...state,\r\n        clicked:!state.clicked,\r\n      }\r\n      default: return state\r\n    }\r\n  }\r\n  export default replytoggleReducer\r\n  ","const initialState={\r\n    id:'LNhwXEYI7pTlOgTN9Chm',\r\n    name:'Welcome to Discord',\r\n    email:'',\r\n  }\r\n   const currentserverReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'Current_Server':\r\n      return {\r\n        ...state,\r\n        id:action.payload.id,\r\n        name:action.payload.name,\r\n        email:action.payload.email,\r\n      }\r\n      default: return state\r\n    }\r\n  }\r\n  export default currentserverReducer\r\n  ","const initialState={\r\n    present:false\r\n  }\r\n   const newserverReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'New_Server':\r\n      return {\r\n        ...state,\r\n        present:action.payload.present\r\n      }\r\n      default: return state\r\n    }\r\n  }\r\n  export default newserverReducer\r\n  ","const initialState={\r\n    admin:'',\r\n    squad:''\r\n  }\r\n   const CurrentRoleReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'Current_Role':\r\n      return {\r\n        ...state,\r\n        admin:action.payload.admin,\r\n        squad:action.payload.squad\r\n      }\r\n      default: return state\r\n    }\r\n  }\r\n  export default CurrentRoleReducer\r\n  ","import {combineReducers} from 'redux';\r\nimport documentReducer from './document/documentReducer';\r\nimport messageReducer from './message/messageReducer'\r\nimport clickedReducer from './clicked/clickedReducer'\r\nimport openReducer from './openupload/messageReducer'\r\nimport ReplyclickedReducer from './replyclicked/replyclickedReducer'\r\nimport replytoggleReducer from './replytoggle/replytoggleReducer'\r\nimport currentserverReducer from './server/serverReducer'\r\nimport newserverReducer from './newserver/newserverReducer';\r\nimport CurrentRoleReducer from './roles/rolesReducer';\r\nexport default combineReducers({\r\n  doc:documentReducer,\r\n  msg:messageReducer,\r\n  click:clickedReducer,\r\n  open:openReducer,\r\n  reply:ReplyclickedReducer,\r\n  replytoggle:replytoggleReducer,\r\n  currentserver:currentserverReducer,\r\n  newserver:newserverReducer,\r\n  currentrole:CurrentRoleReducer,\r\n})\r\n","import {createSelector} from 'reselect'\r\n\r\nconst ServerSelector=state=>state.currentserver\r\n\r\nexport const CurrentServerSelector=createSelector(\r\n    [ServerSelector],\r\n    server=>server.id\r\n)","import {all,call, select, takeLatest} from 'redux-saga/effects'\r\nimport { CurrentServerSelector } from '../server/server.selectors'\r\n\r\n\r\nexport function* SwitchDocumentSuccess(){\r\n    const id=yield select(CurrentServerSelector)\r\n    // yield put(currentdoc())\r\n    console.log(id);\r\n}\r\n\r\nexport function* SwitchDocumentStart(){\r\n    yield takeLatest('Current_Server',SwitchDocumentSuccess)\r\n}\r\n\r\nexport function* DocumentSagas(){\r\n    yield all([call(SwitchDocumentStart)])\r\n}","import {all,call, takeEvery} from 'redux-saga/effects'\r\nimport { auth, firestore, default as firebase } from '../../firebase/firebase';\r\n\r\nexport function* DeleteServerSuccess({payload}){\r\n    yield console.log(payload);\r\n    if(payload.email===auth.currentUser.email){\r\n        const serverRef=yield firestore.collection('servers').doc(payload.id);\r\n        const roleref=yield firestore.collection('roles').doc(payload.id);\r\n        yield roleref.delete();        \r\n        yield serverRef.delete();\r\n        const userref=yield firestore.collection('users');\r\n        yield userref.doc(auth.currentUser.uid).set({\r\n          roles:{\r\n            [auth.currentUser.uid]:firebase.firestore.FieldValue.delete()\r\n          }\r\n        },{ merge: true })  \r\n    }\r\n    else{\r\n      return\r\n    }\r\n}\r\n\r\nexport function* DeleteServerStart(){\r\n    yield takeEvery('Delete_Server_Start',DeleteServerSuccess)\r\n}\r\n\r\nexport function* AddServerStart(){\r\n\r\n}\r\n\r\n\r\n\r\nexport function* Serversagas(){\r\n    yield all([call(AddServerStart),call(DeleteServerStart)])\r\n}","import { all, call, takeLatest } from \"@redux-saga/core/effects\";\r\nimport { auth,CreateUserProfileDocument,Googleprovider } from \"../../firebase/firebase\";\r\n\r\nexport function* GoogleSignInSuccess(){\r\n    yield auth.signInWithPopup(Googleprovider)\r\n    yield call(CreateUserProfileDocument);\r\n}\r\n\r\nexport function* GoogleSignInStart(){\r\n    yield takeLatest('Google_SignIn_Start',GoogleSignInSuccess)\r\n}\r\n\r\n\r\nexport function* userSagas(){\r\n    yield all([call(GoogleSignInStart)])\r\n}","import {all,call} from 'redux-saga/effects'\r\nimport { DocumentSagas } from './document/document.sagas'\r\nimport { Serversagas } from './server/server.sagas'\r\nimport { userSagas } from './users/user.sagas'\r\nexport default function* rootSaga(){\r\n    yield all([call(userSagas),call(DocumentSagas),call(Serversagas)])\r\n}\r\n","import rootReducer from './rootReducer.js'\r\nimport {createStore,applyMiddleware} from 'redux'\r\nimport {logger} from 'redux-logger'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './root-Saga'\r\nconst sagaMiddleware=createSagaMiddleware();\r\nconst middleware=[logger,sagaMiddleware]\r\nconst store=createStore(rootReducer,applyMiddleware(...middleware))\r\nsagaMiddleware.run(rootSaga);\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n      <App />\r\n      </BrowserRouter>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}