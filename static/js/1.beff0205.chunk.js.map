{"version":3,"sources":["redux/replytoggle/replytoggle.actions.js","components/Emoji/Emojicontainer.jsx","components/RolesDocument/Allrolescolormap.jsx","components/RolesDocument/Allrolesmap.jsx","components/RolesDocument/RolesDocumentmap.jsx","components/RolesDocument/RolesDocument.jsx","components/RolesDocument/FetchRoleid.jsx","redux/message/message.actions.js","redux/clicked/clicked.actions.js","redux/replyclicked/replyclicked.actions.js","components/ChatMenu/ChatMenu.jsx","components/ChatEdit/ChatEdit.jsx","components/Keypress/Keypress.jsx","components/ChatReply/ChatReply.jsx","components/ChatMessage/RenderVideo.jsx","components/ChatMessage/RenderAudio.jsx","components/ChatMessage/Chatmessagemap.jsx","components/ChatMessage/ChatMessage.jsx","redux/openupload/message.actions.js","components/FileUpload/FileUpload.jsx","components/ChatSearchBar/ChatSearchReply.jsx","components/ChatSearchBar/ChatSearchBar.jsx"],"names":["replytoggle","type","Emojicontainer","useState","formValue","setformValue","emoji","setemoji","className","console","log","onSubmit","e","preventDefault","arr","data","map","item","tags","i","push","onChange","target","value","autoFocus","placeholder","style","fontSize","color","length","d","index","Color","styled","div","props","Allrolescolormap","k","rol","Allrolesmap","handleClick","roleheadid","onClick","photoURL","auth","currentUser","email","id","rolename","number","name","displayName","serverroletypeid","serverroleid","useStyles","makeStyles","theme","avatar","width","spacing","height","RolesDocumentmap","role","classes","currentserverid","useSelector","state","currentserver","allrolesRef","firestore","collection","doc","useCollectionData","idField","allroles","count","setcount","handleclick","obj","a","currentUserRef","uid","get","user","userid","roles","set","yourrole","merge","username","createdAt","firebase","FieldValue","serverTimestamp","update","increment","Avatar","src","toDate","getDate","getMonth","getFullYear","keys","Object","roleheading","RolesDocument","roleid","query","orderBy","limit","FetchRoleid","serverid","serverRef","useDocumentData","serverdata","currentmessage","payload","setclicked","replymessage","msg","chatmenu","display","icon","backgroundColor","myicon","deleteicon","ChatMenu","dispatch","useDispatch","currentid","other","setother","setuser","message","handleReply","document","getElementById","focus","sender","sendername","photo","senderphoto","alt","senderemail","delete","ChatEdit","key","action","handleSubmit","docRef","useEffect","onKeyup","window","addEventListener","removeEventListener","required","small","marginRight","ChatReply","admin","currentrole","reply","slice","RenderVideo","linkify","input","match","filter","includes","url","RenderAudio","audioname","controls","audiourl","preload","Chatmessagemap","inHover","setHover","replaceAll","chatedittoggle","click","clicked","onMouseEnter","onMouseLeave","componentDecorator","href","text","rel","base64","ChatMessage","messages","currrentdoc","openupload","drop","FileUpload","toggle","replymsg","resizeFile","file","Promise","resolve","Resizer","imageFileResizer","uri","handleupload","audio","storageRef","storage","ref","fileRef","child","put","then","getDownloadURL","channelRef","add","audiosize","size","senderuid","image","resizedfile","dropzoneClass","imageContainer","showPreviews","showPreviewsInDropzone","maxFileSize","filesLimit","onAdd","onDrop","button","margin","padding","ChatSearchReply","IconButton","addbutton","ChatSearchBar","openpicker","setopenpicker","togglereply","currentdoc","messageRef","position","aria-label","open"],"mappings":"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","file":"static/js/1.beff0205.chunk.js","sourcesContent":["const replytoggle=()=>{\r\n    return{\r\n    type:'Reply_toggle',\r\n  }\r\n  }\r\n  export default replytoggle;\r\n  ","import React,{useState} from 'react'\r\nimport './Emojicontainer.scss'\r\nimport data from './emojis.json'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nconst Emojicontainer = () => {\r\n    const [formValue,setformValue]=useState('');\r\n    const [emoji,setemoji]=useState([]);\r\n    const handleSubmit=(e)=>{\r\n        setemoji([]);\r\n        e.preventDefault();\r\n        let arr=[];\r\n        data.map((item)=>{\r\n            return item.tags.map((i)=>{\r\n                if(i===formValue){\r\n                    arr.push(item)\r\n                }\r\n            })\r\n        })\r\n        setemoji(arr);\r\n        setformValue('');\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"emojicontainer\">\r\n                {console.log(emoji)}\r\n                <div className=\"emojicontainer__header\">\r\n                    <div className=\"emojicontainer__header-inputdiv\">\r\n                        <form onSubmit={handleSubmit} className=\"emojicontainer__header-form\">\r\n                            <input type=\"text\" onChange={(e)=>{setformValue(e.target.value)}} value={formValue} autoFocus placeholder='find the perfect emoji' className='emojicontainer__header-input'/>\r\n                        </form>  \r\n                        <div className=\"emojicontainer__header-search\">\r\n                            <SearchIcon style={{fontSize:'2rem',color:'#72767d'}}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"emojicontainer__header-handicon\">\r\n                           👏\r\n                    </div>\r\n                </div>\r\n                <div className=\"emojicontainer__body\">\r\n                    <div className=\"emojicontainer__sidebar\">\r\n                        <div className=\"emojicontainer__sidebar-items\">\r\n                            <div className=\"emojicontainer__sidebar-item\">\r\n                                😃\r\n                            </div>\r\n                            <div className=\"emojicontainer__sidebar-item\">\r\n                                😬\r\n                            </div>\r\n                            <div className=\"emojicontainer__sidebar-item\">\r\n                                🤪\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"emojicontainer__content\">\r\n                        <div className=\"emojicontainer__content-header\">\r\n                            IN DEVELOPMENT\r\n                        </div>\r\n                        <div className=\"emojicontainer__content-items\">\r\n                            {!!emoji.length ? emoji.map((e,i)=>{\r\n                                return <div key={i} className=\"emojicontainer__content-item\">\r\n                                    {e.emoji}\r\n                                    </div>\r\n                            }):(data && data.map((d,index)=>{\r\n                                return <div key={index} className=\"emojicontainer__content-item\">\r\n                                    {d.emoji}\r\n                                </div>\r\n                            })) }\r\n                            {data && data.map((d,index)=>{\r\n                                return <div key={index} className=\"emojicontainer__content-item\">\r\n                                    {d.emoji}\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Emojicontainer\r\n","import React from 'react'\r\nimport styled from \"styled-components\"\r\nconst Color=styled.div`\r\n    background: ${props => props.color};\r\n    border-radius: 50%;\r\n    width: 2.5rem;\r\n    height: 2.5rem;\r\n`\r\nconst Allrolescolormap = ({k,rol}) => {\r\n    return (\r\n        <div className='allrolescolor'>  \r\n        {rol && rol[k].color && <>\r\n        <Color className=\"allrolescolor__rolevalue\" color={rol[k].color} />\r\n        <div className=\"allrolescolor__rolename\">\r\n            <p>: <span className='allrolescolor__rolename-span'>{k}</span></p>\r\n        </div>\r\n        </>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Allrolescolormap\r\n","import React from 'react'\r\nimport styled from \"styled-components\"\r\nimport { auth} from '../../firebase/firebase'\r\nconst Color=styled.div`\r\n    background: ${props => props.color};\r\n    border-radius: 50%;\r\n    width: 1.75rem;\r\n    height: 1.75rem;\r\n`\r\nconst Allrolesmap = ({rol,k,handleClick,roleheadid}) => {\r\n    return (\r\n        <div onClick={()=>handleClick({\r\n            photoURL:auth.currentUser.photoURL,\r\n            email:auth.currentUser.email,\r\n            id:rol.id,\r\n            rolename:k,\r\n            number:rol[k].number,\r\n            color:rol[k].color,\r\n            name:auth.currentUser.displayName,\r\n            serverroletypeid:roleheadid,\r\n            serverroleid:rol[k].serverroleid\r\n        })}>\r\n            {rol && rol[k].number &&<div className='allroles'>\r\n            <div className=\"allroles__button\">\r\n                <Color className=\"allrolescolor__rolevalue\" color={rol[k].color} />\r\n            </div>\r\n            <div className=\"allroles__number\">\r\n                {rol[k].number}\r\n            </div>\r\n            \r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Allrolesmap\r\n","import React, { useState } from 'react'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { useSelector } from 'react-redux';\r\nimport { auth, firestore } from '../../firebase/firebase'\r\nimport Allrolescolormap from './Allrolescolormap';\r\nimport Allrolesmap from './Allrolesmap';\r\nimport firebase from 'firebase/app'\r\nimport { Avatar, makeStyles } from '@material-ui/core';\r\nconst useStyles=makeStyles((theme)=>{\r\n    return{\r\n      avatar:{\r\n          width:theme.spacing(4.5),\r\n          height:theme.spacing(4.5)\r\n      }\r\n    }\r\n})\r\nconst RolesDocumentmap = ({role}) => {\r\n    const classes=useStyles();\r\n    const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const allrolesRef=firestore.collection('roles').doc(currentserverid).collection('rolemenu').doc(role.id).collection('allroles');\r\n    // const query=allrolesRef.orderBy('createdAt').limit(10);\r\n    const [allroles]=useCollectionData(allrolesRef,{idField:'id'});\r\n    const [count,setcount]=useState(0);\r\n    const handleclick=async(obj)=>{\r\n        setcount(count+1);\r\n        if(count>0){\r\n            return\r\n        }\r\n        const currentUserRef=firestore.collection('users').doc(auth.currentUser.uid);\r\n        const {rolename,id,email,photoURL,name,serverroleid,serverroletypeid,color}=obj;\r\n        const user= (await currentUserRef.get()).data()\r\n        const userid=await currentUserRef.get();\r\n        if(user && user.roles){\r\n            if(user.roles[currentserverid] && user.roles[currentserverid][role.rolename]){\r\n                return\r\n            }\r\n            else{\r\n                await currentUserRef.set({\r\n                    roles:{\r\n                        [currentserverid]:{\r\n                            [role.rolename]:{\r\n                                yourrole:rolename,\r\n                                color:color\r\n                            }\r\n                        }\r\n                    }\r\n                },{merge:true})\r\n\r\n                const serverRef=firestore.collection('servers').doc(currentserverid).collection('allroles').doc(serverroletypeid).collection('allroles').doc(serverroleid).collection('allusers');\r\n                serverRef.doc(userid.id).set({\r\n                    username:name,\r\n                    photoURL:photoURL,\r\n                    email:email,\r\n                    createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                })\r\n                const roleref=allrolesRef.doc(id);\r\n                roleref.update({\r\n                    [`${rolename}.number`]:firebase.firestore.FieldValue.increment(1),\r\n                })\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className='rolesdocument__main-individual'>\r\n        <div className='rolesdocument__header-photo'>\r\n                <Avatar className={classes.avatar} src='/discord-clone/bot.png'/>\r\n        </div>\r\n            <div className=\"rolesdocument__content\">\r\n                        <div className=\"rolesdocument__content-header\">\r\n                            <div className='rolesdocument__content-name'>\r\n                                Discord Bot\r\n                            </div>\r\n                            <div className=\"rolesdocument__content-date\">\r\n                                {`${role.createdAt && \r\n                                    role.createdAt.toDate().getDate()+\"/\"+(role.createdAt.toDate().getMonth()+1)+\"/\"+role.createdAt.toDate().getFullYear()\r\n                                    }`}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"rolesdocument__message\">\r\n                            <div className=\"rolesdocument__message-rolemenu\">\r\n                                <p>Role Menu: {role.rolename}</p>\r\n                            </div>\r\n                            <div className=\"rolesdocument__message-react\">\r\n                                React to give yourself a role.\r\n                            </div>\r\n                            <div className=\"rolesdocument__message-allroles\">\r\n                                {allroles && allroles.map((rol,i)=>{\r\n                                    const keys = Object.keys(rol);\r\n                                    return(\r\n                                       <div key={i}>{ keys.map((k,index)=>{\r\n                                        return (\r\n                                            <Allrolescolormap key={index} rol={rol} k={k}/>\r\n                                        )\r\n                                    })}</div>\r\n                                    )                                    \r\n                                })}\r\n                            </div>\r\n                            <div className=\"rolesdocument__message-rolebuttons\">\r\n                            {allroles && allroles.map((rol)=>{\r\n                                    const keys = Object.keys(rol);\r\n                                    \r\n                                    return(\r\n                                        keys.map((k,index)=>{\r\n                                        return <Allrolesmap key={index} rol={rol} k={k} handleClick={handleclick} roleheading={role.rolename} roleheadid={role.serverroletypeid}/>\r\n                                    })\r\n                                    )                                    \r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RolesDocumentmap\r\n","import React from 'react'\r\nimport { useCollectionData} from 'react-firebase-hooks/firestore'\r\nimport { firestore } from '../../firebase/firebase'\r\nimport './RolesDocument.scss'\r\nimport RolesDocumentmap from './RolesDocumentmap'\r\nconst RolesDocument = ({roleid}) => {\r\n    const roleRef=firestore.collection('roles').doc(roleid).collection('rolemenu');\r\n    const query=roleRef.orderBy('createdAt').limit(10);\r\n    const [roles]=useCollectionData(query,{idField:'id'});\r\n    return (\r\n        <>\r\n            <div className=\"rolesdocument\">\r\n                <div className=\"rolesdocument__main\">\r\n                        {roles && roles.map((role)=>{\r\n                            return <RolesDocumentmap key={role.id} role={role}/>\r\n                        })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RolesDocument\r\n","import React from 'react'\r\nimport { useDocumentData } from 'react-firebase-hooks/firestore';\r\nimport { useSelector } from 'react-redux';\r\nimport { auth, firestore } from '../../firebase/firebase';\r\nimport RolesDocument from './RolesDocument';\r\n\r\nconst FetchRoleid = () => {\r\n    const serverid=useSelector((state)=>state.currentserver.id);\r\n    const serverRef=firestore.collection('servers').doc(serverid);\r\n    const [serverdata]=useDocumentData(serverRef);\r\n    return (\r\n        <>\r\n            {serverdata && auth.currentUser && <RolesDocument roleid={serverid}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FetchRoleid\r\n","const currentmessage=(doc)=>{\r\n    return{\r\n    type:'Current_message',\r\n    payload:doc\r\n  }\r\n  }\r\n  export default currentmessage;\r\n  ","const setclicked=()=>{\r\n    return{\r\n    type:'Clicked',\r\n  }\r\n  }\r\n  export default setclicked;\r\n  ","const replymessage=(msg)=>{\r\n    return{\r\n    type:'Reply_message',\r\n    payload:msg\r\n  }\r\n  }\r\n  export default replymessage;\r\n  ","import React, { useState } from 'react';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { auth, firestore } from '../../firebase/firebase';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport currentmessage from '../../redux/message/message.actions'\r\nimport setclicked from '../../redux/clicked/clicked.actions'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport replymessage from '../../redux/replyclicked/replyclicked.actions'\r\nimport replytoggle from '../../redux/replytoggle/replytoggle.actions'\r\nimport './ChatMenu.scss'\r\nimport Emojicontainer from '../Emoji/Emojicontainer';\r\nconst useStyles=makeStyles(()=>{\r\n    return{\r\n        chatmenu:{\r\n            display:'flex'\r\n        },\r\n        icon:{\r\n            color:'#dadbdc',\r\n            '&:hover':{\r\n                backgroundColor:'#3a3e44'\r\n            }\r\n        },\r\n        myicon:{\r\n          color:'#b9bbbe',\r\n          width:'1.8rem',\r\n          height:'1.8rem'\r\n        },\r\n        deleteicon:{\r\n          width:'1.8rem',\r\n          height:'1.8rem',\r\n          color:'#f04747'\r\n        }\r\n    }\r\n})\r\n\r\nfunction ChatMenu({msg}) {\r\n    const classes=useStyles();\r\n    const dispatch = useDispatch();\r\n    const currentid=useSelector((state)=>state.doc.id);\r\n    const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const [other,setother]=useState(false);\r\n    const [user,setuser]=useState(false);\r\n    const [emoji,setemoji]=useState(false);\r\n    const handleClick = () => {\r\n        dispatch(currentmessage({id:msg.id, msg:msg.message}))\r\n        dispatch(setclicked());\r\n  };\r\n  const handleDelete=()=>{\r\n    const docRef=firestore.collection('servers').doc(currentserverid).collection('channels').doc(currentid).collection('messages').doc(msg.id);\r\n    docRef.delete();\r\n  }\r\n  const handleReply=()=>{\r\n    document.getElementById(\"myTextField\").focus();\r\n    dispatch(replymessage({id:msg.id,sender:msg.sendername,msg:msg.message,photo:msg.senderphoto}));\r\n    dispatch(replytoggle())\r\n  }\r\n  const handleemoji=()=>{\r\n    setemoji(!emoji);\r\n  }\r\n  const handlemore=()=>{\r\n    console.log('called');\r\n    if(auth.currentUser.email===msg.senderemail){\r\n      setuser(!user);\r\n    }\r\n    else{\r\n      setother(!other);\r\n    }\r\n  }\r\n    return (\r\n      <div className='chatmenu'>\r\n        {emoji && <div className='emojcontain'><Emojicontainer/></div>}\r\n        <div className=\"chatmenu__addreaction\" onClick={handleemoji}>\r\n          <img className='chatmenu__image' src=\"/discord-clone/addreaction.png\" alt=\"\"/>\r\n        </div>\r\n        {auth.currentUser.email===msg.senderemail ? <div className=\"chatmenu__edt\" onClick={handleClick}>\r\n          <img className='chatmenu__image' src=\"/discord-clone/edit.png\" alt=\"\"/>\r\n        </div> :<div className=\"chatmenu__reply\" onClick={handleReply}>\r\n         <img className='chatmenu__image' src=\"/discord-clone/reply.png\" alt=\"reply\"/>\r\n        </div>}\r\n        <div className=\"chatmenu__more\" onClick={handlemore}>\r\n          <img className='chatmenu__image' src=\"/discord-clone/more.png\" alt=\"more\" / >\r\n        </div>\r\n      {user && <div className='morebox'>\r\n          <div className=\"morebox__container\">\r\n            <div className=\"morebox__item\" onClick={handleClick}>\r\n              <div className=\"morebox__item-label\">\r\n                Edit message\r\n              </div>\r\n              <div className=\"morebox__item-icon\">\r\n                <EditIcon className={classes.myicon} />\r\n              </div>\r\n            </div>\r\n            <div className=\"morebox__item\" onClick={handleDelete}>\r\n              <div className=\"morebox__item-deletelabel\">\r\n                Delete Message\r\n              </div>\r\n              <div className=\"morebox_item-icon\">\r\n                <DeleteIcon className={classes.deleteicon}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n      {other && <div className='morebox'>\r\n          <div className=\"morebox__container\">\r\n            <div className=\"morebox__item\" onClick={handleReply}>\r\n              <div className=\"morebox__item-label\">\r\n                Reply Message\r\n              </div>\r\n              <div className=\"morebox_item-icon\">\r\n                <ReplyIcon className={classes.myicon}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n      </div>\r\n    )\r\n    }\r\n\r\n\r\nexport default ChatMenu\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { firestore } from '../../firebase/firebase';\r\nimport './ChatEdit.scss'\r\nimport setclicked from '../../redux/clicked/clicked.actions';\r\nimport useKeypress from '../Keypress/Keypress';\r\n\r\nfunction ChatEdit() {\r\n    const id=useSelector((state)=>state.msg.id);\r\n    const currentid=useSelector((state)=>state.doc.id);\r\n    const msg=useSelector((state)=>state.msg.msg);\r\n    const [formValue,setformValue]=useState(msg);\r\n    const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const  dispatch = useDispatch();\r\n    const handleSubmit=(e)=>{\r\n        console.log('called');\r\n        e.preventDefault();\r\n        const docRef=firestore.collection('servers').doc(currentserverid).collection('channels').doc(currentid).collection('messages').doc(id);\r\n        console.log(docRef);\r\n        docRef.update({\r\n            message:formValue\r\n        })\r\n        dispatch(setclicked())\r\n    }\r\n    useKeypress('Escape', () => {\r\n        dispatch(setclicked())\r\n      });\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"chatedit\">\r\n                    <input type='text' required value={formValue} onChange={(e)=>{setformValue(e.target.value)}} style={{width:'100%'}} className='chatedit__inputarea'/>\r\n                </div>\r\n                <div className=\"editinstruction\">\r\n                    <p className='editinstruction__p'>escape to <span className='editinstruction__span' onClick={()=>dispatch(setclicked())}>cancel</span> • enter to <span className='editinstruction__span' onClick={handleSubmit}>save</span></p>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatEdit\r\n","import { useEffect } from 'react';\r\nexport default function useKeypress(key, action) {\r\n  useEffect(() => {\r\n    function onKeyup(e) {\r\n      if (e.key === key) action()\r\n    }\r\n    window.addEventListener('keyup', onKeyup);\r\n    return () => window.removeEventListener('keyup', onKeyup);\r\n  }, []);\r\n}","import { Avatar, makeStyles } from '@material-ui/core';\r\nimport React from 'react'\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport './ChatReply.scss'\r\nimport { useSelector } from 'react-redux';\r\nconst useStyles=makeStyles((theme)=>{\r\n    return{\r\n        small:{\r\n            width:theme.spacing(2.2),\r\n            height:theme.spacing(2.2),\r\n            marginRight:theme.spacing(.5)\r\n        }\r\n    }\r\n})\r\nfunction ChatReply({msg}) {\r\n    const admin=useSelector((state)=>state.currentrole.admin)\r\n    const classes=useStyles();\r\n    return (\r\n        <div className='chatreply'>\r\n            <div className=\"chatreply__photo\">\r\n                <Avatar className={classes.small} src={msg.reply.photo}/>\r\n            </div>\r\n            <div className={`${admin && admin.admin === msg.reply.sender && 'chatreply__sender-admin'} chatreply__sender`}>\r\n                @{msg.reply.sender}\r\n            </div>\r\n            <div className=\"chatreply__message\">\r\n                {msg.reply.msg ? msg.reply.msg.slice(0,100)+\"...\" :  <ImageIcon/> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatReply\r\n","import React from 'react'\r\nimport ReactPlayer from 'react-player/lazy'\r\nfunction RenderVideo({msg}) {\r\n   \r\n    const linkify=(input)=>{\r\n        var urlRegex =/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig;\r\n        return input.match(urlRegex)\r\n    }\r\n    return (\r\n        <div className={`${!!linkify(msg).filter((item)=>item.includes('youtube.com/watch')&&item).length && 'rendervideo__videolink'} rendervideo`}> \r\n        {linkify(msg) && !!linkify(msg).filter((item)=>item.includes('youtube.com/watch')&&item).length && <ReactPlayer url={linkify(msg).filter((item)=>item.includes('youtube.com/watch')&&item)}/> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenderVideo\r\n","import React from 'react'\r\n// import * as ByteSize from 'byte-size'\r\nfunction RenderAudio({msg}) {\r\n    // const {audiosize}=msg\r\n    // const bytesize=()=>{\r\n    //     console.log('called');\r\n    //     return `${ByteSize(audiosize)}`;\r\n    // }\r\n    return (\r\n        <div className='renderaudio'>\r\n           <div className=\"renderaudio__name\"> {msg && msg.audioname}</div>\r\n            <div className=\"renderaudio__mainplayer\">\r\n                {/* <div className=\"renderaudio__player-size\">{msg && bytesize()}</div> */}\r\n                <div className=\"renderaudio__player\">\r\n                    <audio\r\n                    className='renderaudio__player-music'\r\n                    controls\r\n                    src={msg.audiourl}\r\n                    preload='metadata'\r\n                    >\r\n                    Your browser does not support the\r\n                    <code>audio</code> element.\r\n                    </audio>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenderAudio\r\n","import { Avatar } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport {makeStyles} from '@material-ui/core'\r\nimport ChatMenu from '../ChatMenu/ChatMenu'\r\nimport ChatEdit from '../ChatEdit/ChatEdit'\r\nimport { useSelector } from 'react-redux'\r\nimport ChatReply from '../ChatReply/ChatReply'\r\nimport Linkify from 'react-linkify';\r\nimport RenderVideo from './RenderVideo'\r\nimport RenderAudio from './RenderAudio'\r\nconst useStyles=makeStyles((theme)=>{\r\n    return{\r\n      avatar:{\r\n          width:theme.spacing(4.5),\r\n          height:theme.spacing(4.5)\r\n      }\r\n    }\r\n})\r\n const Chatmessagemap=({msg})=> {\r\n    const [inHover, setHover] = useState(false);\r\n    const message=msg.message.replaceAll(\"\\\\n\", \"\\n\");\r\n    const classes=useStyles();\r\n    const id=useSelector((state)=>state.msg.id); \r\n    const admin=useSelector((state)=>state.currentrole.admin);\r\n    const chatedittoggle=useSelector((state)=>state.click.clicked);\r\n    const linkify=(input)=>{\r\n        var urlRegex =/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig;\r\n        return input.match(urlRegex)\r\n    }\r\n    const componentDecorator = (href, text, key) => (\r\n        <a className={`${linkify(msg.message) && 'linkify__videotext'} linkify__text`} href={href} key={key} target=\"_blank\" rel=\"noreferrer\">\r\n          {text}\r\n        </a>\r\n      );\r\n      \r\n      \r\n     return (\r\n         <>\r\n        <div className={`${msg.reply && 'chatmessage__main--replied'} chatmessage__main ${chatedittoggle && id===msg.id && 'chatmessage__main--edit'}`}>\r\n            <div onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} className=\"chatmessage\">\r\n            <div className=\"chatmessage\">\r\n                <div className=\"chatmessage__replycontent\">\r\n                    {msg.reply && <img className='chatmessage__replycontent--replyimage' src=\"/discord-clone/discord-reply.png\" alt=\"reply\"/>}\r\n                    <div className=\"chatmessage__replycontent--content\">\r\n                            { msg.reply && <ChatReply msg={msg}/>}\r\n                        </div>\r\n                </div>\r\n                <div className=\"chatmessage__header\">\r\n                    <div className={`${msg.reply&& 'chatmessage__header-photo--replied'} chatmessage__header-photo`}>\r\n                        <Avatar className={classes.avatar} src={`${msg && msg.senderphoto}`}/>\r\n                    </div>\r\n                    <div className=\"chatmessage__content\">\r\n                        <div className=\"chatmessage__content-header\">\r\n                            <div className={`${admin && admin.admin === msg.sendername && 'chatmessage__content-admin'} chatmessage__content-name`}>\r\n                                {`${msg && msg.sendername}`}\r\n                            </div>\r\n                            <div className=\"chatmessage__content-date\">\r\n                                {`${msg.createdAt && \r\n                                    msg.createdAt.toDate().getDate()+\"/\"+(msg.createdAt.toDate().getMonth()+1)+\"/\"+msg.createdAt.toDate().getFullYear()\r\n                                    }`}\r\n                            </div>\r\n                            <div className={`${msg.reply && 'chatmessage__content-menu--replied'} chatmessage__content-menu chatmessage__content-menu-normal`}>\r\n                               {inHover&& <ChatMenu msg={msg} />}\r\n                               {/* {<ChatMenu msg={msg}/>} */}\r\n                               {/* {console.log(id===msg.id)} */}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"chatmessage__message\">\r\n                         {\r\n                         useSelector((state)=>state.click.clicked) && msg.id===id ? <ChatEdit/>:\r\n                         <Linkify componentDecorator={componentDecorator}>\r\n                            {msg && !!msg.message ? message : !msg.base64 && <RenderAudio msg={msg}/>}\r\n                            </Linkify>   \r\n                         }\r\n                            {msg.base64 &&<img src={msg.base64} alt=\"cannot decode\"/>}\r\n                            {linkify(msg.message) && <RenderVideo msg={msg.message}/>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Chatmessagemap\r\n","// import { useEffect, useState } from 'react';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { useSelector } from 'react-redux';\r\nimport {firestore } from '../../firebase/firebase';\r\nimport FetchRoleid from '../RolesDocument/FetchRoleid';\r\n// import {db} from '../../firebase/firebase'\r\nimport './ChatMessage.scss'\r\nimport Chatmessagemap from './Chatmessagemap';\r\nconst ChatMessage= ()=> {\r\n    const id= useSelector((state)=>state.doc.id);\r\n    const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const channelRef=firestore.collection('servers').doc(currentserverid).collection('channels').doc(id).collection('messages');\r\n    const query=channelRef.orderBy('createdAt');\r\n    const [messages]=useCollectionData(query,{idField:'id'});\r\n    // const currentkey=useSelector((state)=>state.key.key);\r\n    // useEffect(() => {\r\n    //     const uploadRef= db.ref(`uploads/${currentkey}`);\r\n    //     uploadRef.on(\"value\",(snapshot)=>{\r\n           \r\n    //         console.log('called useEffect');\r\n    //     })\r\n    //     return () => {\r\n    //         uploadRef.off();\r\n    //         console.log('called clean');\r\n            \r\n    //     }\r\n    // }, [currentkey])\r\n\r\n    const currrentdoc=useSelector((state)=>state.doc.name);\r\n    return (\r\n        <div >\r\n            {currrentdoc==='roles'?<FetchRoleid/>: messages && messages.map((msg)=>{\r\n                return <Chatmessagemap key={msg.id} msg={msg}/>\r\n            })}            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatMessage\r\n","const openupload=()=>{\r\n    return{\r\n    type:'Change_open',\r\n  }\r\n  }\r\n  export default openupload;\r\n  ","import React from 'react'\r\nimport {DropzoneArea} from 'material-ui-dropzone'\r\nimport {auth, firestore} from '../../firebase/firebase'\r\nimport firebase from 'firebase/app'\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport openupload from '../../redux/openupload/message.actions'\r\nimport {storage} from '../../firebase/firebase'\r\nimport replytoggle from '../../redux/replytoggle/replytoggle.actions';\r\n// import {db} from '../../firebase/firebase'\r\n// import storage from '../../firebase/firebase'\r\nconst useStyles=makeStyles({\r\n    drop:{\r\n        backgroundColor:'#2C2F33',\r\n        color:'#e6e8e8'\r\n    },\r\n    icon:{\r\n        color:'gray'\r\n    },\r\n})\r\n\r\n\r\nfunction FileUpload() {\r\n    const id= useSelector((state)=>state.doc.id);\r\n    const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const toggle=useSelector((state)=>state.replytoggle.clicked);\r\n    const replymsg=useSelector((state)=>state.reply);\r\n    const classes=useStyles();\r\n    const dispatch = useDispatch();\r\n        const resizeFile = (file) =>\r\n            new Promise((resolve) => {\r\n                Resizer.imageFileResizer(\r\n                file,\r\n                350,\r\n                350,\r\n                \"JPEG\",\r\n                100,\r\n                0,\r\n                (uri) => {\r\n                    resolve(uri);\r\n                },\r\n                \"base64\"\r\n                );\r\n            });\r\n  \r\n    const handleupload=async(file)=>{\r\n        if(['audio/mpeg', 'audio/mp4', 'audio/ogg','audio/wav'].includes(file[0].type)){\r\n            const audio=file[0];\r\n            console.log(audio);\r\n            try{\r\n                dispatch(openupload());\r\n                const storageRef=storage.ref();\r\n                const fileRef = storageRef.child(audio.name)\r\n                await fileRef.put(audio).then(() => {\r\n                fileRef.getDownloadURL().then(function (url) {\r\n                    console.log(url);\r\n                    const channelRef= firestore.collection('servers').doc(currentserverid).collection('channels').doc(id).collection('messages');\r\n                    if(toggle){\r\n                        dispatch(replytoggle());\r\n                        channelRef.add({\r\n                            message:'',\r\n                            audioname:audio.name,\r\n                            audiourl:url,\r\n                            audiosize:audio.size,\r\n                            sendername:auth.currentUser.displayName,\r\n                            senderemail:auth.currentUser.email,\r\n                            senderuid:auth.currentUser.uid,\r\n                            senderphoto:auth.currentUser.photoURL,\r\n                            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                            reply:replymsg\r\n                        })\r\n                    }\r\n                    else{\r\n                        channelRef.add({\r\n                            message:'',\r\n                            audioname:audio.name,\r\n                            audiourl:url,\r\n                            audiosize:audio.size,\r\n                            sendername:auth.currentUser.displayName,\r\n                            senderemail:auth.currentUser.email,\r\n                            senderuid:auth.currentUser.uid,\r\n                            senderphoto:auth.currentUser.photoURL,\r\n                            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                        })\r\n                    }\r\n                    });\r\n                    console.log(\"Uploaded a file\")\r\n                    })\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n            }\r\n            \r\n        }\r\n        //////////////////////////////////image file\r\n        if(['image/jpeg', 'image/png', 'image/bmp','image/x-icon'].includes(file[0].type))\r\n        {\r\n        const image=file[0];\r\n        console.log(image);\r\n        try{\r\n            dispatch(openupload());\r\n            const resizedfile=await resizeFile(image);\r\n            const channelRef= firestore.collection('servers').doc(currentserverid).collection('channels').doc(id).collection('messages');\r\n            if(toggle){\r\n                dispatch(replytoggle());\r\n                await channelRef.add({\r\n                    message:'',\r\n                    base64:resizedfile,\r\n                    sendername:auth.currentUser.displayName,\r\n                    senderemail:auth.currentUser.email,\r\n                    senderuid:auth.currentUser.uid,\r\n                    senderphoto:auth.currentUser.photoURL,\r\n                    createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                    reply:replymsg\r\n                })\r\n            }\r\n            else{\r\n                await channelRef.add({\r\n                    message:'',\r\n                    base64:resizedfile,\r\n                    sendername:auth.currentUser.displayName,\r\n                    senderemail:auth.currentUser.email,\r\n                    senderuid:auth.currentUser.uid,\r\n                    senderphoto:auth.currentUser.photoURL,\r\n                    createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                })\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\n        /////////////////////Realtime Datasbase\r\n        // try{\r\n        //     const resizedfile=await resizeFile(image);\r\n        //     const uploadref=db.ref('uploads');\r\n        //     const newuploadRef=uploadref.push();\r\n        //     (await newuploadRef).set({\r\n        //         newupload:resizedfile\r\n        //     })\r\n        //     dispatch(currentkey({key:newuploadRef.key}));\r\n        // }\r\n        // catch(err){\r\n        //     console.log(err);\r\n        // }\r\n        \r\n        // const storageRef=storage.ref();\r\n        // const fileRef = storageRef.child(file.name)\r\n        \r\n        // await fileRef.put(file).then(() => {\r\n        // fileRef.getDownloadURL().then(function (url) {\r\n        //    console.log(url);\r\n        //     });\r\n        //     console.log(\"Uploaded a file\")\r\n        //     })\r\n\r\n        \r\n    \r\n    return (\r\n        <div>\r\n            <DropzoneArea\r\n            dropzoneClass={classes.drop}\r\n            classes={{icon:classes.icon,image:classes.imageContainer}}\r\n            // acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\r\n            showPreviews={false}\r\n            showPreviewsInDropzone={false}\r\n            maxFileSize={10000000}\r\n            filesLimit={1}\r\n            onAdd={handleupload}\r\n            onDrop={handleupload}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileUpload\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport {IconButton, makeStyles} from '@material-ui/core'\r\nimport replytoggle from '../../redux/replytoggle/replytoggle.actions'\r\nconst useStyles=makeStyles({\r\n    button:{\r\n        margin:0,\r\n        padding:'.1rem',\r\n        color:'#b9bbbe'\r\n    },\r\n    icon:{\r\n        width:'1.8rem'\r\n    }\r\n})\r\nfunction ChatSearchReply() {\r\n    const classes=useStyles();\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div>\r\n            <div className='chatsearchbar__reply'>\r\n                <div className=\"chatsearchbar__reply-text\">\r\n                Replying to {useSelector((state)=>state.reply.sender)}\r\n                </div>\r\n                <div className=\"chatsearchnar__reply-close\">\r\n                    <IconButton className={classes.button} onClick={()=>{dispatch(replytoggle())}}>\r\n                        <CancelIcon fontSize='large' className={classes.icon} />\r\n                    </IconButton>\r\n                </div>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatSearchReply\r\n","import React, { useState,useRef } from 'react'\r\nimport './ChatSearchBar.scss'\r\nimport firebase from 'firebase/app'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport GifIcon from '@material-ui/icons/Gif';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport { IconButton,makeStyles } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { auth, firestore } from '../../firebase/firebase';\r\n// import { Picker } from 'emoji-mart'\r\n// import 'emoji-mart/css/emoji-mart.css'\r\nimport FileUpload from '../FileUpload/FileUpload'\r\nimport openupload from '../../redux/openupload/message.actions'\r\n// import OutsideClick from '../OutsideClick/OutsideClick'\r\nimport Emojicontainer from '../Emoji/Emojicontainer'\r\nimport replytoggle from '../../redux/replytoggle/replytoggle.actions'\r\nimport ChatSearchReply from './ChatSearchReply'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nconst useStyles=makeStyles(()=>{\r\n    return{\r\n        button:{\r\n            color: '#b8bbc0',\r\n            padding:'0 .75rem'\r\n        },\r\n        addbutton:{\r\n            backgroundColor:'#40454b',\r\n            color:'#b8bbc0',\r\n            padding:'.9rem 1rem',\r\n            '&:hover':{\r\n                backgroundColor:'#40454b'\r\n            }\r\n        }\r\n    }\r\n})\r\nfunction ChatSearchBar() {\r\n    const dispatch = useDispatch()\r\n    const classes=useStyles();\r\n    const [openpicker,setopenpicker]=useState(false);\r\n    const [formValue,setformValue]=useState('');\r\n    const currentserverid=useSelector((state)=>state.currentserver.id)\r\n    const id= useSelector((state)=>state.doc.id)\r\n    const channelRef=firestore.collection('servers').doc(currentserverid).collection('channels').doc(id).collection('messages');\r\n    const replymsg= useSelector((state)=>state.reply);\r\n    const togglereply=useSelector((state)=>state.replytoggle.clicked);\r\n    const currentdoc=useSelector((state)=>state.doc.name);\r\n    const query=channelRef.orderBy('createdAt','desc').limit(1);\r\n    const [messages]=useCollectionData(query,{idField:'id'});\r\n    const handleSubmit=async(e)=>{\r\n        e.preventDefault();\r\n        if(currentdoc==='roles'){\r\n            setformValue('Not authorized to send message here');\r\n            return\r\n        }\r\n        if(!togglereply){\r\n            if(!!messages.length && messages[0].senderemail===auth.currentUser.email){\r\n                const messageRef=channelRef.doc(messages[0].id);\r\n                await messageRef.update({\r\n                    message:messages[0].message+'\\\\n'+formValue\r\n                },{merge:true})\r\n            }\r\n            else{\r\n                await channelRef.add({\r\n                    message:formValue,\r\n                    sendername:auth.currentUser.displayName,\r\n                    senderemail:auth.currentUser.email,\r\n                    senderuid:auth.currentUser.uid,\r\n                    senderphoto:auth.currentUser.photoURL,\r\n                    createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                })\r\n            }\r\n            \r\n        }\r\n        else{\r\n            await channelRef.add({\r\n                message:formValue,\r\n                sendername:auth.currentUser.displayName,\r\n                senderemail:auth.currentUser.email,\r\n                senderuid:auth.currentUser.uid,\r\n                senderphoto:auth.currentUser.photoURL,\r\n                createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                reply:replymsg\r\n            })\r\n            dispatch(replytoggle());\r\n        }\r\n        setformValue('');\r\n    }\r\n    const handleselect=(emoj)=>{\r\n        setformValue(()=>{\r\n           return formValue+emoj.native\r\n        })\r\n        \r\n    }\r\n    const handlePicker=()=>{\r\n        setopenpicker(!openpicker)\r\n    }\r\n    const handleadd=()=>{\r\n        dispatch(openupload());\r\n    }\r\n    \r\n    return (\r\n        <div style={{position:'relative'}}>\r\n           {useSelector((state)=>state.replytoggle.clicked)&&<ChatSearchReply/>}\r\n            <div className=\"chatsearchbar\">\r\n                <div className=\"chatsearchbar__addicon\">\r\n                    <IconButton className={classes.addbutton} onClick={handleadd} aria-label=\"settings\">\r\n                        <AddCircleOutlineIcon fontSize='large' />\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"chatsearchbar__input\">\r\n                    <form onSubmit={handleSubmit}>\r\n                     <input autoFocus id=\"myTextField\" value={formValue} required onChange={(e)=>{setformValue(e.target.value)}} className='chatsearchbar__input-text' placeholder={`Message #${useSelector((state)=>state.doc.name)}`} type=\"text\"/>\r\n                    </form>\r\n                </div>\r\n                <div className=\"chatsearchbar__gifticon\">\r\n                    <IconButton className={classes.button} aria-label=\"settings\" >\r\n                        <CardGiftcardIcon style={{ fontSize: 30 }}/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"chatsearchbar__gifcon\">\r\n                    <IconButton className={classes.button} aria-label=\"settings\">\r\n                        <GifIcon style={{ fontSize: 30 }}/>\r\n                    </IconButton>\r\n                </div>\r\n                \r\n                <div className=\"chatsearchbar__emojiicon\">\r\n                    <IconButton className={classes.button} onClick={handlePicker} aria-label=\"settings\">\r\n                        <InsertEmoticonIcon style={{ fontSize: 30 }}/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n         {/* {openpicker&& <div ref={ref} className='emojipicker'><Picker  onSelect={handleselect} /></div>} */}\r\n         {openpicker&& <div className='emojipicker'><Emojicontainer/></div>}\r\n        {useSelector((state)=>state.open.open) && <div className='upload'><FileUpload/></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatSearchBar\r\n"],"sourceRoot":""}