{"version":3,"sources":["components/AddChannelPopup/AddChannelPopup.jsx","components/Sidebarvoice/Sidebarvoice.jsx","components/Avatar/BadgeAvatar.jsx","components/Roles/SquadRole.jsx","components/Roles/Myrolesmap.jsx","components/Roles/Myroles.jsx","components/Roles/Rolescategory.jsx","components/Roles/Roles.jsx","components/SidebarChannel/Channelmap.jsx","components/SidebarChannel/SidebarChannel.jsx","redux/newserver/newserver.actions.js","components/AddServer/Addserver.jsx","components/AvailableServers/Changeservername.jsx","components/AddNewRole/AddNewRole.jsx","components/AvailableServers/AvailableServersmap.jsx","components/AvailableServers/AvailableServers.jsx","components/ChatHeader/ChatHeader.jsx","pages/Universal/Universal.jsx","pages/Layout_Sidebar/Layout_Sidebar.jsx","pages/ErrorBoundaries/Errorboundaries.styles.jsx","App.js","redux/document/documentReducer.js","redux/message/messageReducer.js","redux/clicked/clickedReducer.js","redux/openupload/messageReducer.js","redux/replyclicked/replyclickedReducer.js","redux/replytoggle/replytoggleReducer.js","redux/server/serverReducer.js","redux/newserver/newserverReducer.js","redux/roles/rolesReducer.js","redux/rootReducer.js","redux/document/document.sagas.js","redux/server/server.sagas.js","redux/users/user.sagas.js","redux/root-Saga.js","redux/store.js","serviceWorkerRegistration.js","index.js","redux/server/server.actions.js","redux/document/document.actions.js","firebase/firebase.js","components/Spinner/Spinner.styles.jsx","components/Spinner/Spinner.jsx"],"names":["useStyles","makeStyles","theme","button","padding","spacing","color","typo","textTransform","dialog","backgroundColor","dialogaction","paper","minWidth","AddChannelPopup","classes","React","useState","open","setOpen","formValue","setformValue","handleClose","handleSubmit","e","a","preventDefault","channelRef","add","channel","createdAt","firebase","firestore","FieldValue","serverTimestamp","email","auth","currentUser","then","console","log","catch","error","currentserverid","useSelector","state","currentserver","id","collection","doc","onClick","className","aria-label","fontSize","onClose","aria-labelledby","variant","type","required","autoFocus","placeholder","onChange","target","value","onSubmit","signal","end","Sidebarvoice","startIcon","StyledBadge","withStyles","badge","boxShadow","palette","background","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","Badge","settings","display","flexWrap","icon","avatar","BadgeAvatars","history","useHistory","useAuthState","user","mic","setmic","handleClick","signOut","push","overlap","anchorOrigin","vertical","horizontal","alt","src","photoURL","displayName","uid","slice","SquadRole","profileavatar","outlined","rolearr","map","Para","styled","p","props","StyledCircle","svg","StyledChip","div","Myrolesmap","setopen","anchorEl","setAnchorEl","setrolearr","userref","event","get","snapshot","docs","forEach","data","userphoto","keys","Object","roles","k","mykeys","arr","rol","currentTarget","onMouseLeave","Avatar","username","index","viewBox","xmlns","cx","cy","r","fill","status","Myroles","myrole","allusersref","rolemap","useCollectionData","idField","allusers","Rolescategory","role","allroleusers","rolename","length","Roles","serverRef","useDocumentData","servers","dispatch","useDispatch","useEffect","rolequery","orderBy","allroles","userimage","admin","Channelmap","msg","SidebarChannel","channels","setchannels","mychannel","myfun","newserver","server","payload","addicon","header","textAlign","header__heading","fontFamily","header__text","header__servername","marginRight","dialogcontent","input","container","marginTop","Addserver","uploadfile","setuploadfile","roleRef","resizeFile","file","Promise","resolve","Resizer","imageFileResizer","uri","servername","serverimage","present","name","currentdoc","set","rolerefid","serverroleRef","roletyperef","myval","serverroletypeid","valid","allroleid","serverallroles","servallrole","number","serverroleid","roleid","serverid","handleImageUpload","files","encodedimage","IconButton","Dialog","DialogContent","DialogContentText","component","Typography","Container","maxWidth","accept","htmlFor","iconbutton","DialogActions","ChangeServername","update","root","backButton","instructions","marginBottom","anotherrole","finishedanotherrole","marginLeft","AddNewRole","activeStep","setActiveStep","multirole","setmultirole","completed","setCompleted","steps","typeofrole","settypeofrole","handleaddanotherrole","handlefinishedrole","handleChange","typeid","settypeid","roletypeid","setroletypeid","handlebranchandnext","prevActiveStep","val","handleroleandnext","addroleref","thisid","allroleRef","Stepper","alternativeLabel","label","Step","StepLabel","stepIndex","header__rolename","roleheader","roleheader__rolecolor","Button","getStepContent","disabled","AvailableServersmap","query","limit","initialState","mouseX","mouseY","setState","myserver","handlechangeserver","setrole","StyledMenu","Menu","anchorReference","anchorPosition","undefined","StyledMenuItem","primary","main","common","white","MenuItem","onContextMenu","clientX","clientY","style","cursor","keepMounted","deleteServer","AvailableServers","search","shape","fade","breakpoints","up","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","ChatHeader","InputBase","inputProps","Universal","children","LayoutSidebar","ErrorImageOverlay","ErrorImageContainer","imageUrl","ErrorImageText","h2","Homepage","lazy","Home","ServerPage","ErrorFallback","resetErrorBoundary","App","to","FallbackComponent","fallback","Spinner","exact","path","render","documentReducer","action","messageReducer","clicked","replyopenReducer","openReducer","sender","photo","ReplyclickedReducer","replytoggleReducer","currentserverReducer","newserverReducer","squad","CurrentRoleReducer","combineReducers","click","clickedReducer","reply","replytoggle","currentrole","DocumentSagas","all","DeleteServerSuccess","DeleteServerStart","AddServerStart","Serversagas","roleref","delete","merge","takeEvery","call","GoogleSignInSuccess","GoogleSignInStart","userSagas","signInWithPopup","Googleprovider","CreateUserProfileDocument","takeLatest","rootSaga","sagaMiddleware","createSagaMiddleware","middleware","logger","store","createStore","rootReducer","applyMiddleware","run","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","performance","database","GoogleAuthProvider","useremail","SpinnerOverlay"],"mappings":"kUAWMA,EAAUC,aAAW,SAACC,GACxB,MAAM,CACFC,OAAO,CACHC,QAAQF,EAAMG,QAAQ,GACtBC,MAAM,QAEVC,KAAK,CACDD,MAAM,UACNE,cAAc,aAElBC,OAAO,CACHC,gBAAgB,WAEpBC,aAAa,CACTD,gBAAgB,UAChBN,QAAQ,WAEZQ,MAAO,CACHC,SAAU,WAIP,SAASC,IACpB,IAAMC,EAAQf,IADwB,EAEhBgB,IAAMC,UAAS,GAFC,mBAEjCC,EAFiC,KAE3BC,EAF2B,OAGPF,mBAAS,IAHF,mBAG/BG,EAH+B,KAGrBC,EAHqB,KAOlCC,EAAc,WAClBH,GAAQ,IAEJI,EAAY,uCAAC,WAAOC,GAAP,SAAAC,EAAA,6DACjBD,EAAEE,iBADe,SAEXC,EAAWC,IAAI,CACjBC,QAAQT,EACRU,UAAUC,IAASC,UAAUC,WAAWC,kBAExCC,MAAMC,IAAKC,YAAYF,QAG1BG,MACC,WACEC,QAAQC,IAAI,qBAEfC,OAAM,SAACC,GAASH,QAAQC,IAAIE,MAbZ,OAejBrB,EAAa,IAfI,2CAAD,sDAiBZsB,EAAgBC,aAAY,SAACC,GAAD,OAASA,EAAMC,cAAcC,MACzDpB,EAAWK,IAAUgB,WAAW,WAAWC,IAAIN,GAAiBK,WAAW,YACjF,OACE,gCACI,cAAC,IAAD,CAAYE,QA3BM,WACtB/B,GAAQ,IA0BkCgC,UAAWpC,EAAQZ,OAAQiD,aAAW,WAA5E,SACI,cAAC,IAAD,CAASC,SAAS,YAExB,eAAC,IAAD,CAAQnC,KAAMA,EAAMoC,QAAShC,EAAaiC,kBAAgB,oBAAoBxC,QAAS,CAAEH,MAAOG,EAAQH,OAAxG,UACE,eAAC,IAAD,CAAeuC,UAAWpC,EAAQN,OAAlC,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAY+C,QAAQ,KAAKL,UAAWpC,EAAQR,KAA5C,4BAEF,uBAAOkD,KAAK,OAAOC,UAAQ,EAACP,UAAU,QAAQQ,WAAS,EAACC,YAAY,oBAAoBC,SAAU,SAACrC,GAAD,OAAKH,EAAaG,EAAEsC,OAAOC,QAAQA,MAAO3C,OAE9I,cAAC,IAAD,CAAe+B,UAAWpC,EAAQJ,aAAlC,SACI,sBAAMqD,SAAUzC,EAAc4B,UAAU,OAAxC,SACE,wBAAQM,KAAK,SAASP,QAAS5B,EAAa6B,UAAU,eAAtD,6B,iCC5Ed,0HAOMnD,EAAUC,aAAW,WACvB,MAAM,CACFgE,OAAO,CACH3D,MAAM,WAEV4D,IAAI,CACA5D,MAAM,WAEVH,OAAO,CACHkD,SAAS,OACT/C,MAAM,OACNI,gBAAgB,UAChBN,QAAQ,aACRI,cAAc,YAkCX2D,IA9Bf,WACI,IAAMpD,EAAQf,IACd,OACI,sBAAKmD,UAAU,eAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,qBAAKA,UAAU,6BAAf,SACI,cAAC,IAAD,CAAYA,UAAWpC,EAAQkD,OAAQb,aAAW,WAAlD,SACI,cAAC,IAAD,CAAuBC,SAAS,cAGxC,qBAAKF,UAAU,kCAAf,gCAEJ,qBAAKA,UAAU,2BAAf,SACI,cAAC,IAAD,CAAYA,UAAWpC,EAAQmD,IAAKd,aAAW,WAA/C,SACI,cAAC,IAAD,CAAaC,SAAS,iBAIlC,sBAAKF,UAAU,uBAAf,UACI,qBAAKA,UAAU,6BAAf,SACI,cAAC,IAAD,CAAQK,QAAQ,OAAOL,UAAWpC,EAAQZ,OAAQiE,UAAY,cAAC,IAAD,IAA9D,uBAEJ,qBAAKjB,UAAU,8BAAf,SACI,cAAC,IAAD,CAAQK,QAAQ,OAAOL,UAAWpC,EAAQZ,OAAQiE,UAAY,cAAC,IAAD,IAA9D,gC,uQCpCdC,EAAcC,aAAW,SAACpE,GAAD,MAAY,CACzCqE,MAAO,CACL7D,gBAAiB,UACjBJ,MAAO,UACPkE,UAAU,aAAD,OAAetE,EAAMuE,QAAQC,WAAW9D,OACjD,WAAY,CACV+D,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,UAAW,oCACXC,OAAQ,yBACRC,QAAS,OAGb,oBAAqB,CACnB,KAAM,CACJC,UAAW,YACXC,QAAS,GAEX,OAAQ,CACND,UAAW,aACXC,QAAS,OAxBKf,CA2BhBgB,KAEEtF,EAAUC,aAAW,SAACC,GAC1B,MAAM,CACJqF,SAAS,CACPC,QAAQ,OACRC,SAAS,QAEXC,KAAK,CACHtF,QAAQ,QACRE,MAAM,WAERqF,OAAO,CACLb,MAAM,UACNC,OAAO,eAKE,SAASa,IACtB,IAAMC,EAAQC,cADuB,EAExBC,YAAa3D,KAAnB4D,EAF8B,sBAGlB/E,oBAAS,GAHS,mBAG9BgF,EAH8B,KAG1BC,EAH0B,KAI/BnF,EAAQf,IACRmG,EAAW,uCAAC,sBAAA1E,EAAA,sEACVW,IAAKgE,UADK,OAEhBP,EAAQQ,KAAK,kBAFG,2CAAD,qDAIf,OACA,8BACE,sBAAKlD,UAAU,UAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,cAACkB,EAAD,CAAaiC,QAAQ,SAASC,aAAc,CAACC,SAAU,SAASC,WAAY,SAAWjD,QAAQ,MAA/F,SACE,cAAC,IAAD,CAAQkD,IAAI,aAAaC,IAAG,UAAKX,GAAOA,EAAKY,SAASZ,EAAKY,SAAS,MAAQzD,UAAWpC,EAAQ4E,WAEjG,sBAAKxC,UAAU,gBAAf,UACE,qBAAKA,UAAU,qBAAf,mBACM6C,GAAOA,EAAKa,YAAYb,EAAKa,YAAY,QAE/C,sBAAK1D,UAAU,oBAAf,cACI6C,GAAQA,EAAKc,IAAIC,MAAM,EAAE,YAIjC,sBAAK5D,UAAWpC,EAAQwE,SAAxB,UACI,cAAC,IAAD,CAAYpC,UAAWpC,EAAQ2E,KAAMxC,QAAS,kBAAIgD,GAAQD,IAAM7C,aAAW,WAA3E,SACG6C,EAAI,cAAC,IAAD,CAAS5C,SAAS,UAAW,cAAC,IAAD,CAAYA,SAAS,YAEzD,cAAC,IAAD,CAAYF,UAAWpC,EAAQ2E,KAAMtC,aAAW,WAAhD,SACA,cAAC,IAAD,CAAgBC,SAAS,YAEzB,cAAC,IAAD,CAAYF,UAAWpC,EAAQ2E,KAAMtC,aAAW,WAAWF,QAASiD,EAApE,SACE,cAAC,IAAD,CAAc9C,SAAS,sB,oGCpEtB2D,I,8BCjBThH,EAAUC,YAAW,CACvB0F,OAAO,CACHb,MAAM,OACNC,OAAO,QAEXkC,cAAc,CACVnC,MAAM,OACNC,OAAO,QAEXmC,SAAS,SAACC,GAAD,MAAY,CACjB7G,MAAM6G,EAAQC,KAAI,SAAC3F,GACf,OAAOA,EAAC,aAMd4F,EAAKC,IAAOC,EAAR,2CACE,SAAAC,GAAK,OAAEA,EAAMlH,SAEnBmH,EAAaH,IAAOI,IAAR,wDAGZC,EAAWL,IAAOM,IAAR,kDACG,SAAAJ,GAAK,OAAEA,EAAMlH,SAuFjBuH,EApFI,SAAC,GAAkB,IAAjB7B,EAAgB,EAAhBA,KAAK1F,EAAW,EAAXA,MAAW,EACZW,oBAAS,GADG,mBAC1BC,EAD0B,KACrB4G,EADqB,OAED7G,mBAAS,MAFR,mBAE1B8G,EAF0B,KAEhBC,EAFgB,OAGN/G,mBAAS,IAHH,mBAG1BkG,EAH0B,KAGlBc,EAHkB,KAI3BC,EAAQlG,IAAUgB,WAAW,SAC7BL,EAAgBC,aAAY,SAACC,GAAD,OAASA,EAAMC,cAAcC,MACzDhC,EAAQf,EAAUmH,GAyBxB,OAEI,sBAAKjE,QARS,SAACiF,GAjBfD,EAAQE,MAAM9F,MAAK,SAAC+F,GAAD,OAAYA,EAASC,KAAKC,SAAQ,SAACtF,GAClD,GAAGA,EAAIuF,OAAOC,YAAYzC,EAAKY,SAE7B,IADA,IAAM8B,EAAOC,OAAOD,KAAKzF,EAAIuF,OAAOI,OADE,aAElC,IAAMC,EAAC,KACT,GAAGlG,GAAmBkG,IAAIlG,EAAgB,CACrC,IAAMmG,EAAOH,OAAOD,KAAKzF,EAAIuF,OAAOI,MAAMC,IACtCE,EAAI,GACRD,EAAO1B,KAAI,SAAC4B,GACTD,EAAI1C,KAAKpD,EAAIuF,OAAOI,MAAMC,GAAGG,OAEhCf,EAAWc,KAPlB,MAAeL,EAAf,eAAqB,UAgB/BZ,GAAS5G,GACT+G,EAAW,IACXD,EAAYD,EAAW,KAAOI,EAAMc,gBAILC,aAAc,WACrCpB,GAAQ,IADZ,UAGK5G,GAAQ,sBAAKiC,UAAU,cAAf,UACH,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,4BAAf,SACI,cAACgG,EAAA,EAAD,CAAQxC,IAAKX,EAAKY,UAAYZ,EAAKY,SAAUzD,UAAWpC,EAAQkG,kBAEpE,qBAAK9D,UAAU,+BAAf,SACK6C,EAAKoD,UAAYpD,EAAKoD,WAE3B,qBAAKjG,UAAU,6BAAf,wCAIF,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,+BAAf,mBAGA,qBAAKA,UAAU,6BAAf,SACKgE,GAAWA,EAAQC,KAAI,SAAC3F,EAAE4H,GACvB,OAAO,eAAC1B,EAAD,CAAwBxE,UAAU,OAAO7C,MAAOmB,EAAC,MAAjD,UACP,qBAAK0B,UAAU,eAAf,SACI,cAACsE,EAAD,CAAc6B,QAAQ,cAAcC,MAAM,6BAA1C,SAAuE,wBAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,KAAMlI,EAAC,YAEjH,qBAAK0B,UAAU,cAAc7C,MAAOmB,EAAC,MAArC,SACKA,EAAC,aALkB4H,cAa3C,sBAAKlG,UAAU,aAAf,UACO,qBAAKA,UAAU,oBAAf,SACI,cAACgG,EAAA,EAAD,CAAQhG,UAAWpC,EAAQ4E,OAAQgB,IAAKX,EAAKY,UAAYZ,EAAKY,aAElE,sBAAKzD,UAAU,iBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAACkE,EAAD,CAAM/G,MAAOA,EAAO6C,UAAU,wBAA9B,SAAuD6C,EAAKoD,UAAYpD,EAAKoD,aAEjF,qBAAKjG,UAAU,wBAAf,SACK6C,EAAK4D,QAAU5D,EAAK4D,mBC3F9BC,EAdC,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,OAAOxJ,EAAmB,EAAnBA,MACfyJ,EADkC,EAAbC,QACD/G,IAAI6G,EAAO/G,IAAIC,WAAW,YADZ,EAEvBiH,YAAkBF,EAAY,CAACG,QAAQ,OAAjDC,EAFiC,oBAGxC,OACI,qBAAKhH,UAAU,UAAf,SACI,qBAAKA,UAAU,gBAAf,SACKgH,GAAYA,EAAS/C,KAAI,SAACpB,GAC3B,OAAO,cAAC,EAAD,CAA0BA,KAAMA,EAAM1F,MAAOA,GAA5B0F,EAAKjD,YCa9BqH,EAlBO,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACd1H,EAAgBC,aAAY,SAACC,GAAD,OAASA,EAAMC,cAAcC,MACzDiH,EAAQhI,IAAUgB,WAAW,WAAWC,IAAIN,GAAiBK,WAAW,YAAYC,IAAIoH,EAAKtH,IAAIC,WAAW,YAFpF,EAGTiH,YAAkBD,EAAQ,CAACE,QAAQ,OAAjDI,EAHuB,oBAI9B,OACI,mCACK,sBAAKnH,UAAU,gBAAf,UACA,qBAAKA,UAAU,iBAAf,SACE,qBAAIA,UAAU,oBAAd,UAAmCkH,GAAQA,EAAKE,SAAhD,YAA8DD,GAAgBA,EAAaE,YAEzFF,GAAgBA,EAAalD,KAAI,SAAC0C,GAC/B,OAAO,cAAC,EAAD,CAAyBA,OAAQA,EAAQE,QAASA,EAAS1J,MAAOwJ,GAAUA,EAAOxJ,OAArEwJ,EAAO/G,aCR1C/C,EAAUC,YAAW,CACvB0F,OAAO,CACHb,MAAM,OACNC,OAAO,UA6DA0F,IA1Df,WACI,IAAM1J,EAAQf,IACR2C,EAAgBC,aAAY,SAACC,GAAD,OAASA,EAAMC,cAAcC,MACzD2H,EAAU1I,IAAUgB,WAAW,WAAWC,IAAIN,GAHvC,EAIGgI,YAAgBD,GAAzBE,EAJM,oBAQPC,EAAWC,cAEjBC,qBAAU,WAEN,OAAO,eAGR,CAACH,EAAQC,IAEZ,IACMG,EADYN,EAAU1H,WAAW,YACXiI,QAAQ,aAlBvB,EAmBIhB,YAAkBe,EAAU,CAACd,QAAQ,OAA/CgB,EAnBM,oBAqBb,OACI,sBAAK/H,UAAU,QAAf,UACI,qBAAKA,UAAU,iBAAf,SACG,oBAAIA,UAAU,oBAAd,wCAEH,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,cAACgG,EAAA,EAAD,CAAQhG,UAAWpC,EAAQ4E,OAAQgB,IAAKiE,GAAWA,EAAQO,WAAaP,EAAQO,cAEpF,sBAAKhI,UAAU,iBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,mBAAGA,UAAU,wBAAb,SAAsCyH,GAAWA,EAAQQ,OAASR,EAAQQ,UAE9E,qBAAKjI,UAAU,wBAAf,sCAQP+H,GAAYA,EAAS9D,KAAI,SAACiD,GACvB,OAAO,cAAC,EAAD,CAA6BA,KAAMA,GAAfA,EAAKtH,Y,kHClBjCsI,EAjBE,SAAC,GAAS,IAARC,EAAO,EAAPA,IACf/I,QAAQC,IAAI,sBAEZ,IAAMqD,EAAQC,cACR/C,EAAGH,aAAY,SAACC,GAAD,OAASA,EAAMI,IAAIF,MAClCJ,EAAgBC,aAAY,SAACC,GAAD,OAASA,EAAMC,cAAcC,MAC/D,OACI,8BACK,oBAAgBG,QAAO,sBAAE,sBAAAzB,EAAA,sEACfoE,EAAQQ,KAAR,kCAAwC1D,EAAxC,YAA2D2I,EAAIvI,KADhD,2CAGtBI,UAAS,UAAKJ,IAAKuI,EAAIvI,IAAT,UAAL,4BAHZ,UAIG,sBAAMI,UAAU,uBAAhB,eAAgDmI,EAAIzJ,UAJ/CyJ,EAAIvI,OC0CTwI,IAlCK,WACjBhJ,QAAQC,IAAI,gCACZ,IAAMG,EAAgBC,aAAY,SAACC,GAAD,OAASA,EAAMC,cAAcC,MAEzDpB,EAAWK,IAAUgB,WAAW,WAAWC,IAAIN,GAAiBK,WAAW,YAJ5D,EAKQ/B,mBAAS,IALjB,mBAKduK,EALc,KAKLC,EALK,KAuBvB,OAjBEV,qBAAU,WACN,IAAIvC,EAAK,GAYK,OAXdjG,QAAQC,IAAI,kCACC,uCAAC,sBAAAf,EAAA,sEACNE,EAAWsJ,QAAQ,aAAa7C,MAAM9F,MAAK,SAAC+F,GAC9CA,EAASC,KAAKlB,KAAI,SAACnE,GACf,IAAMyI,EAAUzI,EAAIuF,OAEpB,OADAkD,EAAU3I,GAAGE,EAAIF,GACVyF,EAAKnC,KAAKqF,SALb,OAQZD,EAAYjD,GARA,2CAAD,oDAUXmD,GAAmB,eAGtB,CAAChJ,IAEF,8BACI,qBAAKQ,UAAU,iBAAf,SACKqI,KAAcA,EAAShB,QAAUgB,EAASpE,KAAI,SAACkE,GAC5C,OAAO,cAAC,EAAD,CAAyBA,IAAKA,GAAbA,EAAIvI,a,wjBC5D7B6I,EAND,SAACC,GACb,MAAM,CACNpI,KAAK,aACLqI,QAAQD,I,OCUN7L,EAAUC,YAAW,CACvB8L,QAAQ,CACJjH,MAAM,SACNC,OAAO,SACPzE,MAAM,WAEV0L,OAAO,CACHC,UAAU,UAEdC,gBAAgB,CACZ7I,SAAS,OACT/C,MAAM,UACNF,QAAQ,aACR+L,WAAW,eACX3G,QAAQ,SAEZ4G,aAAa,CACT/I,SAAS,SACTmC,QAAQ,SAEZ6G,mBAAmB,CACfC,YAAY,MACZhM,MAAM,UACN+C,SAAS,UACT8I,WAAW,kBAEfI,cAAc,CACV7L,gBAAgB,OAChBN,QAAQ,eAEZO,aAAa,CACTD,gBAAgB,UAChBN,QAAQ,eAEZQ,MAAO,CACHC,SAAU,OAEd2L,MAAM,CACFhH,QAAQ,QAEZiH,UAAU,CACNC,UAAU,YA+PHC,MA5Pf,WACI,IAAM5L,EAAQf,IADG,EAEOiB,oBAAS,GAFhB,mBAEVC,EAFU,KAEJC,EAFI,OAGgBF,qBAHhB,mBAGV2L,EAHU,KAGCC,EAHD,OAIc5L,mBAAS,IAJvB,mBAIVG,EAJU,KAIAC,EAJA,KAKXqJ,EAAU1I,IAAUgB,WAAW,WAC/B8J,EAAQ9K,IAAUgB,WAAW,SAE7B6H,EAAWC,cAITxJ,EAAc,WAClBH,GAAQ,IAEJ4L,EAAa,SAACC,GAAD,OACb,IAAIC,SAAQ,SAACC,GACTC,IAAQC,iBACRJ,EACA,IACA,IACA,OACA,IACA,GACA,SAACK,GACGH,EAAQG,KAEZ,cAIJ9L,EAAY,uCAAC,WAAOC,GAAP,eAAAC,EAAA,yDACjBD,EAAEE,kBACCN,EAFc,qBAGVwL,EAHU,gCAIHlC,EAAU9I,IAAI,CACf0L,WAAWlM,EACXU,UAAUC,IAASC,UAAUC,WAAWC,kBACxCC,MAAMC,IAAKC,YAAYF,MACvBiJ,MAAMhJ,IAAKC,YAAYwE,YACvBsE,UAAU/I,IAAKC,YAAYuE,SAC3B2G,YAAYX,IACbtK,KAPE,uCAOG,WAAOyB,GAAP,mBAAAtC,EAAA,6DACLoJ,EAAUe,EAAU,CAAC4B,SAAQ,KAC7B3C,EAAS/H,YAAc,CACnBC,GAAGX,IAAKC,YAAYyE,IACpB2G,KAAKrM,KAETyL,EAAc,IACRlL,EAAWK,IAAUgB,WAAW,WAAWC,IAAIc,EAAMhB,IAAIC,WAAW,YAPrE,SAQCrB,EAAWC,IAAI,CACjBC,QAAQ,UACRC,UAAUC,IAASC,UAAUC,WAAWC,kBACxCC,MAAMC,IAAKC,YAAYF,QACxBG,MAAK,SAACyB,GAAD,OAAS8G,EAAU6C,YAAW,CAClC3K,GAAGgB,EAAMhB,GACT0K,KAAK,gBAdJ,uBAgBC9L,EAAWsB,IAAIc,EAAMhB,IAAI4K,IAAI,CAC/B9L,QAAQ,QACRC,UAAUC,IAASC,UAAUC,WAAWC,kBACxCC,MAAMC,IAAKC,YAAYF,QAnBtB,cAsBCyL,EAAUd,EAAQ7J,IAAIc,EAAMhB,IAtB7B,UAuBC6K,EAAUD,IAAI,CAChBL,WAAWlM,EACXU,UAAUC,IAASC,UAAUC,WAAWC,oBACzCI,KAHG,sBAGE,8BAAAb,EAAA,6DACEoM,EAAcnD,EAAUzH,IAAIc,EAAMhB,IAAIC,WAAW,YACjD8K,EAAYhB,EAAQ7J,IAAIc,EAAMhB,IAAIC,WAAW,YAF/C,SAGE6K,EAAcjM,IAAI,CACxBE,UAAUC,IAASC,UAAUC,WAAWC,kBACxCqI,SAAS,WACVjI,KAHO,uCAGF,WAAMyL,GAAN,eAAAtM,EAAA,sDACJqM,EAAYlM,IAAI,CACZE,UAAUC,IAASC,UAAUC,WAAWC,kBACxCqI,SAAS,SACTyD,iBAAiBD,EAAMhL,KACxBT,KAJH,uCAIQ,WAAM2L,GAAN,SAAAxM,EAAA,sDACJyM,EAAUD,EAAMlL,GADZ,2CAJR,wDAOMoL,EAAeN,EAAc5K,IAAI8K,EAAMhL,IAAIC,WAAW,aAC7CpB,IAAI,CACftB,MAAM,UACNwB,UAAUC,IAASC,UAAUC,WAAWC,kBACxCqI,SAAS,WACVjI,KAJH,uCAIQ,WAAM8L,GAAN,SAAA3M,EAAA,sDACcqM,EAAY7K,IAAIiL,GAAWlL,WAAW,YAC5CpB,IAAI,CACZ,OAAS,CACLtB,MAAM,UACN+N,OAAO,EACPC,aAAaF,EAAYrL,MAN7B,2CAJR,uDAcAoL,EAAevM,IAAI,CACftB,MAAM,UACNwB,UAAUC,IAASC,UAAUC,WAAWC,kBACxCqI,SAAS,SACVjI,KAJH,uCAIQ,WAAM8L,GAAN,SAAA3M,EAAA,sDACcqM,EAAY7K,IAAIiL,GAAWlL,WAAW,YAC5CpB,IAAI,CACZ,KAAO,CACHtB,MAAM,UACN+N,OAAO,EACPC,aAAaF,EAAYrL,MAN7B,2CAJR,uDAvBI,2CAHE,uDAHF,4CA1BH,4CAPH,uDAJG,qCAqFH6K,EAAUd,EAAQ7J,MArFf,UAsFHyH,EAAU9I,IAAI,CACf0L,WAAWlM,EACXU,UAAUC,IAASC,UAAUC,WAAWC,kBACxCC,MAAMC,IAAKC,YAAYF,MACvBiJ,MAAMhJ,IAAKC,YAAYwE,YACvBsE,UAAU/I,IAAKC,YAAYuE,SAC3B2G,YAAY,qCACZgB,OAAOX,EAAU7K,KAClBT,KARE,uCAQG,WAAOyB,GAAP,iBAAAtC,EAAA,6DACJoJ,EAAUe,EAAU,CAAC4B,SAAQ,KAC9B3C,EAAS/H,YAAc,CACnBC,GAAGgB,EAAMhB,GACT0K,KAAKrM,KAEHO,EAAWK,IAAUgB,WAAW,WAAWC,IAAIc,EAAMhB,IAAIC,WAAW,YANrE,SAOCrB,EAAWC,IAAI,CACjBC,QAAQ,UACRC,UAAUC,IAASC,UAAUC,WAAWC,kBACxCC,MAAMC,IAAKC,YAAYF,QACxBG,MAAK,SAACyB,GAAD,OAAS8G,EAAU6C,YAAW,CAClC3K,GAAGgB,EAAMhB,GACT0K,KAAK,gBAbJ,uBAeC9L,EAAWC,IAAI,CACjBC,QAAQ,QACRC,UAAUC,IAASC,UAAUC,WAAWC,kBACxCC,MAAMC,IAAKC,YAAYF,QAlBtB,uBAqBCyL,EAAUD,IAAI,CAChBa,SAASzK,EAAMhB,GACfuK,WAAWlM,EACXU,UAAUC,IAASC,UAAUC,WAAWC,oBACzCI,KAJG,sBAIE,8BAAAb,EAAA,6DACEoM,EAAcnD,EAAUzH,IAAIc,EAAMhB,IAAIC,WAAW,YACjD8K,EAAYhB,EAAQ7J,IAAI2K,EAAU7K,IAAIC,WAAW,YAFnD,SAGE6K,EAAcjM,IAAI,CACxBE,UAAUC,IAASC,UAAUC,WAAWC,kBACxCqI,SAAS,WACVjI,KAHO,uCAGF,WAAMyL,GAAN,eAAAtM,EAAA,sDACJqM,EAAYlM,IAAI,CACZE,UAAUC,IAASC,UAAUC,WAAWC,kBACxCqI,SAAS,SACTyD,iBAAiBD,EAAMhL,KACxBT,KAJH,uCAIQ,WAAM2L,GAAN,SAAAxM,EAAA,sDACJyM,EAAUD,EAAMlL,GADZ,2CAJR,wDAOMoL,EAAeN,EAAc5K,IAAI8K,EAAMhL,IAAIC,WAAW,aAC7CpB,IAAI,CACftB,MAAM,UACNwB,UAAUC,IAASC,UAAUC,WAAWC,kBACxCqI,SAAS,WACVjI,KAJH,uCAIQ,WAAM8L,GAAN,SAAA3M,EAAA,sDACcqM,EAAY7K,IAAIiL,GAAWlL,WAAW,YAC5CpB,IAAI,CACZ,OAAS,CACLtB,MAAM,UACN+N,OAAO,EACPC,aAAaF,EAAYrL,MAN7B,2CAJR,uDAcAoL,EAAevM,IAAI,CACftB,MAAM,UACNwB,UAAUC,IAASC,UAAUC,WAAWC,kBACxCqI,SAAS,SACVjI,KAJH,uCAIQ,WAAM8L,GAAN,SAAA3M,EAAA,sDACcqM,EAAY7K,IAAIiL,GAAWlL,WAAW,YAC5CpB,IAAI,CACZ,KAAO,CACHtB,MAAM,UACN+N,OAAO,EACPC,aAAaF,EAAYrL,MAN7B,2CAJR,uDAvBI,2CAHE,uDAHF,4CAzBH,2CARH,uDAtFG,QAwKjB1B,EAAa,IAxKI,4CAAD,sDA2KZoN,EAAiB,uCAAC,WAAMjN,GAAN,eAAAC,EAAA,sEACGsL,EAAWvL,EAAEsC,OAAO4K,MAAM,IAD7B,OAChBC,EADgB,OAEtB9B,EAAc8B,GAFQ,2CAAD,sDAKzB,OACA,sBAAKxL,UAAU,YAAf,UACQ,qBAAKA,UAAU,qBAAf,SACI,cAACyL,EAAA,EAAD,CAAY1L,QAzMA,WACpB/B,GAAQ,IAwMA,SACG,cAAC,IAAD,CAASgC,UAAWpC,EAAQgL,cAGvC,eAAC8C,EAAA,EAAD,CAAQ3N,KAAMA,EAAMoC,QAAShC,EAAaiC,kBAAgB,oBAAoBxC,QAAS,CAAEH,MAAOG,EAAQH,OAAxG,UACI,eAACkO,EAAA,EAAD,CAAe3L,UAAWpC,EAAQwL,cAAlC,UACA,eAACwC,EAAA,EAAD,CAAmBC,UAAU,MAAM7L,UAAWpC,EAAQiL,OAAtD,UACQ,cAACiD,EAAA,EAAD,CAAYD,UAAW,OAAQ7L,UAAWpC,EAAQmL,gBAAlD,mCAIA,cAAC+C,EAAA,EAAD,CAAYD,UAAW,OAAQ7L,UAAWpC,EAAQqL,aAAlD,yEAGA,cAAC6C,EAAA,EAAD,CAAYD,UAAW,OAAQ7L,UAAWpC,EAAQqL,aAAlD,6CAGA,eAAC8C,EAAA,EAAD,CAAW/L,UAAWpC,EAAQ0L,UAAW0C,SAAS,KAAlD,UACA,uBAAOC,OAAO,UAAUjM,UAAWpC,EAAQyL,MAAOzJ,GAAG,mBAAmBU,KAAK,OAAOI,SAAU4K,IAC1F,uBAAOY,QAAQ,mBAAf,SACI,cAACT,EAAA,EAAD,CAAYzL,UAAWpC,EAAQuO,WAAYhP,MAAM,UAAU8C,aAAW,iBAAiB4L,UAAU,OAAjG,SACI,qBAAK7L,UAAU,cAAcwD,IAAI,gBAAgBD,IAAI,YAIjE,cAACuI,EAAA,EAAD,CAAYD,UAAW,OAAQ7L,UAAWpC,EAAQsL,mBAAlD,4BAIJ,uBAAO5I,KAAK,OAAOC,UAAQ,EAACE,YAAW,UAAKxB,IAAKC,aAAeD,IAAKC,YAAYwE,YAA1C,aAAkE1D,UAAU,iBAAiBQ,WAAS,EAACE,SAAU,SAACrC,GAAD,OAAKH,EAAaG,EAAEsC,OAAOC,QAAQA,MAAO3C,OAEtM,eAACmO,EAAA,EAAD,CAAepM,UAAWpC,EAAQJ,aAAlC,UACA,wBAAQ8C,KAAK,OAAOP,QAAS5B,EAAa6B,UAAU,uBAApD,kBACI,sBAAMa,SAAUzC,EAAc4B,UAAU,kBAAxC,SACI,wBAAQM,KAAK,SAASP,QAAS5B,EAAa6B,UAAU,yBAAtD,gC,0CCtSdnD,G,OAAUC,YAAW,CACvB8L,QAAQ,CACJjH,MAAM,SACNC,OAAO,SACPzE,MAAM,WAEV0L,OAAO,CACHC,UAAU,UAEdC,gBAAgB,CACZ7I,SAAS,OACT/C,MAAM,UACNF,QAAQ,aACR+L,WAAW,eACX3G,QAAQ,SAEZ4G,aAAa,CACT/I,SAAS,SACTmC,QAAQ,SAEZ6G,mBAAmB,CACfC,YAAY,MACZhM,MAAM,UACN+C,SAAS,UACT8I,WAAW,kBAEfI,cAAc,CACV7L,gBAAgB,QAEpBC,aAAa,CACTD,gBAAgB,UAChBN,QAAQ,eAEZQ,MAAO,CACHC,SAAU,OAEd2L,MAAM,CACFhH,QAAQ,QAEZiH,UAAU,CACNC,UAAU,aAsFH8C,MAnFf,YAA0C,IAAflO,EAAc,EAAdA,YACjBP,EAAQf,IADuB,EAEJiB,qBAFI,mBAE9B2L,EAF8B,KAEnBC,EAFmB,OAGN5L,mBAAS,IAHH,mBAG9BG,EAH8B,KAGpBC,EAHoB,KAI/BsB,EAAgBC,aAAY,SAACC,GAAD,OAASA,EAAMC,cAAcC,MACzD2H,EAAU1I,IAAUgB,WAAW,WAAWC,IAAIN,GAC5CoK,EAAa,SAACC,GAAD,OACb,IAAIC,SAAQ,SAACC,GACTC,IAAQC,iBACRJ,EACA,IACA,IACA,OACA,IACA,GACA,SAACK,GACGH,EAAQG,KAEZ,cAIJ9L,EAAY,uCAAC,WAAOC,GAAP,SAAAC,EAAA,yDACfc,QAAQC,IAAI,iBACZlB,IACFE,EAAEE,kBAECN,EALc,qBAMVwL,EANU,iCAOHlC,EAAU+E,OAAO,CAClBnC,WAAWlM,EACXmM,YAAYX,IATR,OAWRvL,EAAa,IAXL,yCAcFqJ,EAAU+E,OAAO,CACnBnC,WAAWlM,IAfP,QAiBRC,EAAa,IAjBL,4CAAD,sDAqBZoN,EAAiB,uCAAC,WAAMjN,GAAN,eAAAC,EAAA,sEACGsL,EAAWvL,EAAEsC,OAAO4K,MAAM,IAD7B,OAChBC,EADgB,OAEtB9B,EAAc8B,GAFQ,2CAAD,sDAKzB,OACA,sBAAKxL,UAAU,mBAAf,UACQ,eAAC2L,EAAA,EAAD,CAAe3L,UAAWpC,EAAQwL,cAAlC,UACA,eAACwC,EAAA,EAAD,CAAmB5L,UAAWpC,EAAQiL,OAAtC,UACQ,cAACiD,EAAA,EAAD,CAAYD,UAAW,OAAQ7L,UAAWpC,EAAQmL,gBAAlD,mCAIA,cAAC+C,EAAA,EAAD,CAAYD,UAAW,OAAQ7L,UAAWpC,EAAQqL,aAAlD,iDAGA,eAAC8C,EAAA,EAAD,CAAW/L,UAAWpC,EAAQ0L,UAAW0C,SAAS,KAAlD,UACA,uBAAOC,OAAO,UAAUjM,UAAWpC,EAAQyL,MAAOzJ,GAAG,mBAAmBU,KAAK,OAAOI,SAAU4K,IAC1F,uBAAOY,QAAQ,mBAAf,SACI,cAACT,EAAA,EAAD,CAAYzL,UAAWpC,EAAQuO,WAAYhP,MAAM,UAAU8C,aAAW,iBAAiB4L,UAAU,OAAjG,SACI,qBAAK7L,UAAU,cAAcwD,IAAI,eAAeD,IAAI,YAIhE,cAACuI,EAAA,EAAD,CAAYD,UAAW,OAAQ7L,UAAWpC,EAAQsL,mBAAlD,4BAIJ,uBAAO5I,KAAK,OAAOG,YAAY,qBAAqBF,UAAQ,EAACP,UAAU,iBAAiBQ,WAAS,EAACE,SAAU,SAACrC,GAAD,OAAKH,EAAaG,EAAEsC,OAAOC,QAAQA,MAAO3C,OAE1J,eAACmO,EAAA,EAAD,CAAepM,UAAWpC,EAAQJ,aAAlC,UACA,wBAAQ8C,KAAK,OAAOP,QAAS5B,EAAa6B,UAAU,8BAApD,kBACI,sBAAMa,SAAUzC,EAAc4B,UAAU,yBAAxC,SACI,wBAAQM,KAAK,SAASN,UAAU,gCAAhC,6B,oDClHdnD,G,OAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwP,KAAM,CACJ5K,MAAO,SAET6K,WAAY,CACVrD,YAAapM,EAAMG,QAAQ,IAE7BuP,aAAc,CACZlD,UAAWxM,EAAMG,QAAQ,GACzBwP,aAAc3P,EAAMG,QAAQ,IAE9ByP,YAAY,CACVpD,UAAU,QAGZH,cAAc,CACZzH,MAAM,QAERiL,oBAAoB,CAClBrD,UAAU,OACVsD,WAAW,WAQA,SAASC,EAAT,GAAoC,IAAf3O,EAAc,EAAdA,YAC5BP,EAAUf,IADgC,EAGZgB,IAAMC,SAAS,GAHH,mBAGzCiP,EAHyC,KAG7BC,EAH6B,OAIjBlP,mBAAS,IAJQ,mBAIzCmP,EAJyC,KAI/BC,EAJ+B,OAKdrP,IAAMC,UAAS,GALD,mBAKzCqP,EALyC,KAK9BC,EAL8B,KAM1CC,EATC,CAAC,0BAA2B,gBAAiB,YAU9C7N,EAAgBC,aAAY,SAACC,GAAD,OAASA,EAAMC,cAAcC,MAPf,EAQf9B,mBAAS,CACpCX,MAAM,OACNiK,SAAS,KAViC,mBAQvCnJ,EARuC,KAQ7BC,EAR6B,OAYfJ,mBAAS,IAZM,mBAYzCwP,EAZyC,KAY9BC,EAZ8B,KAa1ChG,EAAU1I,IAAUgB,WAAW,WAAWC,IAAIN,GAAiBK,WAAW,YAC1E8J,EAAQ9K,IAAUgB,WAAW,SAASC,IAAIN,GAAiBK,WAAW,YA4C5E,IAAM2N,EAAqB,WACzBN,GAAa,WACX,MAAM,GAAN,mBAAWD,GAAX,CAAqBhP,OAEvBC,EAAa,CACXf,MAAM,GACNiK,SAAS,MAGPqG,EAAmB,WACpBH,GACErP,EAAUmJ,UACX8F,GAAa,WACX,MAAM,GAAN,mBAAWD,GAAX,CAAqBhP,OAI7BC,EAAa,CACXf,MAAM,GACNiK,SAAS,MAGHsG,EAAa,SAACrP,GAAK,IAAD,EACLA,EAAEsC,OAAd2J,EADiB,EACjBA,KAAK1J,EADY,EACZA,MACZ1C,GAAa,WACT,kCACOD,GADP,kBAEKqM,EAAM1J,QArF+B,EA6FvB9C,mBAAS,IA7Fc,mBA6FzC6P,EA7FyC,KA6FlCC,EA7FkC,QA8Ff9P,mBAAS,IA9FM,qBA8FzC+P,GA9FyC,MA8F9BC,GA9F8B,MA+F1CC,GAAmB,uCAAC,sBAAAzP,EAAA,yDACxB0O,GAAc,SAACgB,GAAD,OAAoBA,EAAiB,KAC/Cb,EAFoB,oBAGnBG,EAHmB,gCAIZ/F,EAAU9I,IAAI,CAChBE,UAAUC,IAASC,UAAUC,WAAWC,kBACxCqI,SAASkG,IACVnO,KAHG,uCAGE,WAAM8O,GAAN,SAAA3P,EAAA,6DACJsP,EAAUK,EAAIrO,IADV,SAEE+J,EAAQlL,IAAI,CAChBE,UAAUC,IAASC,UAAUC,WAAWC,kBACxCqI,SAASkG,EACTzC,iBAAiBoD,EAAIrO,KACpBT,MAAK,SAAC2L,GACP1L,QAAQC,IAAI,SAASyL,EAAMlL,IAC3BkO,GAAchD,EAAMlL,OARlB,2CAHF,uDAJY,OAkBlBwN,GAAa,GAlBK,2CAAD,qDAsBnBc,GAAiB,uCAAC,4BAAA5P,EAAA,yDACtB0O,GAAc,SAACgB,GAAD,OAAoBA,EAAiB,MAChDV,EAFmB,oBAGZa,EAAW5G,EAAUzH,IAAI6N,GAAQ9N,WAAW,aAC/CoN,IAAaA,EAAU5F,OAJR,gBAKhB4F,EAAUhJ,IAAV,uCAAc,WAAM4B,GAAN,SAAAvH,EAAA,sEACN6P,EAAW1P,IAAI,CACnBtB,MAAM0I,EAAI1I,MACVwB,UAAUC,IAASC,UAAUC,WAAWC,kBACxCqI,SAASvB,EAAIuB,WACdjI,KAJK,+BAAAb,EAAA,MAIA,WAAO8P,GAAP,eAAA9P,EAAA,6DACA+P,EAAW1E,EAAQ7J,IAAI+N,IAAYhO,WAAW,YAD9C,SAEAwO,EAAW5P,IAAX,eACHoH,EAAIuB,SAAU,CACbjK,MAAM0I,EAAI1I,MACV+N,OAAO,EACPC,aAAaiD,EAAOxO,MANlB,2CAJA,uDAaLT,MAAK,WACNoO,EAAc,IACdrP,EAAa,IACb0P,EAAU,IACVR,GAAa,MAlBD,2CAAd,uDAqBAF,EAAa,IACb/O,IA3BgB,2BA8BbF,EAAUmJ,SA9BG,kCA+BR+G,EAAW1P,IAAI,CACjBtB,MAAMc,EAAUd,MAChBwB,UAAUC,IAASC,UAAUC,WAAWC,kBACxCqI,SAASnJ,EAAUmJ,WACpBjI,KAJG,+BAAAb,EAAA,MAIE,WAAO8P,GAAP,eAAA9P,EAAA,6DACA+P,EAAW1E,EAAQ7J,IAAI+N,IAAYhO,WAAW,YAD9C,SAEAwO,EAAW5P,IAAX,eACHR,EAAUmJ,SAAU,CACnBjK,MAAMc,EAAUd,MAChB+N,OAAO,EACPC,aAAaiD,EAAOxO,MAErBT,MAAK,WACNoO,EAAc,IACdrP,EAAa,IACb0P,EAAU,IACVR,GAAa,MAZT,2CAJF,uDA/BQ,QAmDlBjP,IAnDkB,4CAAD,qDA6DvB,OACE,sBAAK6B,UAAWpC,EAAQ2O,KAAxB,UACE,cAAC+B,EAAA,EAAD,CAASvB,WAAYA,EAAYwB,kBAAgB,EAAjD,SACGlB,EAAMpJ,KAAI,SAACuK,GAAD,OACT,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UAAYF,KADHA,QAKf,8BACGzB,IAAeM,EAAMhG,OAAS,KAC7B,gCACE,cAACyE,EAAA,EAAD,CAAYD,UAAU,MAAM7L,UAAWpC,EAAQ6O,aAA/C,SA/KV,SAAwBkC,GACtB,OAAQA,GACN,KAAK,EACH,MAAO,mBACT,KAAK,EACH,OAAO,mCACL,eAAChD,EAAA,EAAD,CAAe3L,UAAWpC,EAAQwL,cAAlC,UACI,cAACwC,EAAA,EAAD,CAAmB5L,UAAWpC,EAAQiL,OAAtC,SACQ,cAACiD,EAAA,EAAD,CAAYD,UAAW,OAAQ7L,UAAWpC,EAAQgR,iBAAlD,4BAIJ,uBAAOtO,KAAK,OAAOgK,KAAK,WAAW/J,UAAQ,EAACP,UAAU,iBAAiBQ,WAAS,EAACE,SAAU,SAACrC,GAAD,OAAKkP,EAAclP,EAAEsC,OAAOC,QAAQA,MAAO0M,SAGlJ,KAAK,EACH,OAAO,mCACH,eAAC3B,EAAA,EAAD,CAAe3L,UAAWpC,EAAQwL,cAAlC,UACE,cAACwC,EAAA,EAAD,CAAmB5L,UAAWpC,EAAQiL,OAAtC,SACQ,cAACiD,EAAA,EAAD,CAAYD,UAAW,OAAQ7L,UAAWpC,EAAQgR,iBAAlD,yBAIJ,uBAAOtO,KAAK,OAAOgK,KAAK,WAAW/J,UAAQ,EAACP,UAAU,iBAAiBQ,WAAS,EAACE,SAAUgN,EAAc9M,MAAO3C,EAAUmJ,WAC1H,cAACwE,EAAA,EAAD,CAAmB5L,UAAWpC,EAAQiR,WAAtC,SACI,cAAC/C,EAAA,EAAD,CAAYD,UAAW,OAAQ7L,UAAWpC,EAAQkR,sBAAlD,0BAIJ,uBAAOxO,KAAK,OAAOgK,KAAK,QAAQ/J,UAAQ,EAACP,UAAU,iBAAiBU,SAAUgN,EAAc9M,MAAO3C,EAAUd,QAE7G,sBAAK6C,UAAU,aAAf,UACE,cAAC+O,EAAA,EAAD,CAAQhP,QAASyN,EAAsBxN,UAAWpC,EAAQ+O,YAAaxP,MAAM,UAAUkD,QAAQ,YAA/F,uDACA,cAAC0O,EAAA,EAAD,CAAQhP,QAAS0N,EAAoBzN,UAAWpC,EAAQgP,oBAAqBzP,MAAM,UAAUkD,QAAQ,YAArG,0CAKd,QACE,MAAO,qBAwI2D2O,CAAejC,KAC7E,gCACE,cAACgC,EAAA,EAAD,CACEE,SAAyB,IAAflC,EACVhN,QApBK,WACjBiN,GAAc,SAACgB,GAAD,OAAoBA,EAAiB,MAoBvChO,UAAWpC,EAAQ4O,WAHrB,kBAQIO,GAA2B,IAAbA,EAAgB,cAACgC,EAAA,EAAD,CAAQ1O,QAAQ,YAAYlD,MAAM,UAAU4C,QAASgO,GAArD,SAC7BhB,IAAeM,EAAMhG,OAAS,EAAI,SAAW,SACtB,IAAb0F,EAAiB,cAACgC,EAAA,EAAD,CAAQ1O,QAAQ,YAAYlD,MAAM,UAAU4C,QAASmO,GAArD,oBACZ,cAACa,EAAA,EAAD,CAAQ1O,QAAQ,YAAYlD,MAAM,UAAU4C,QAlHzD,WAEjBiN,GAAc,SAACgB,GAAD,OAAoBA,EAAiB,MAgHrB,SACjBjB,IAAeM,EAAMhG,OAAS,EAAI,SAAW,oBCtO9D,IAAMxK,EAAUC,YAAW,CACvBW,MAAO,CACHC,SAAU,SAoKHwR,MAjKf,YAAwC,IAAVxG,EAAS,EAATA,OACtBhG,EAAQC,cAERwM,EADWtQ,IAAUgB,WAAW,WAAWC,IAAI4I,EAAO9I,IAAIC,WAAW,YACpDiI,QAAQ,aAAasH,MAAM,GAHb,EAIpBtI,YAAkBqI,EAAM,CAACpI,QAAQ,OAA3CsB,EAJ8B,oBAK7BzK,EAAQf,IACRwS,EAAe,CACjBC,OAAQ,KACRC,OAAQ,MARuB,EAUPzR,mBAASuR,GAVF,mBAU1B3P,EAV0B,KAUnB8P,EAVmB,KAoB/BrR,EAAc,WAClBqR,EAASH,IAEH3H,EAAWC,cACX/H,EAAGH,aAAY,SAACC,GAAD,OAASA,EAAMC,cAAcC,MAC5C6P,EAAS/G,EAsBTgH,EAAkB,uCAAC,WAAMhH,GAAN,SAAApK,EAAA,sEACjBoE,EAAQQ,KAAR,oBAA0BwF,EAAO9I,GAAjC,YAAuCyI,EAAS,GAAGzI,KADlC,OAErB8H,EAAU/H,YAAc,CACpBC,GAAG8I,EAAO9I,GACV0K,KAAK5B,EAAOyB,WACZnL,MAAM0J,EAAO1J,SAEjBwQ,EAASH,GAPY,2CAAD,sDA/CW,EAyDdvR,oBAAS,GAzDK,mBAyD5BC,EAzD4B,KAyDvB4G,EAzDuB,OA0Dd7G,oBAAS,GA1DK,mBA0D5BoJ,EA1D4B,KA0DvByI,EA1DuB,KAwF7BC,EAAazO,YAAW,CAC1B1D,MAAO,CACLF,gBAAgB,UAChBJ,MAAM,UACNF,QAAS,YAJIkE,EAMd,SAACkD,GAAD,OACD,cAACwL,EAAA,EAAD,aACAC,gBAAgB,iBAChBC,eACiB,OAAjBrQ,EAAM6P,QAAoC,OAAjB7P,EAAM4P,OACzB,CAAE7N,IAAK/B,EAAM6P,OAAQ7N,KAAMhC,EAAM4P,aACjCU,GACD3L,OAEH4L,EAAiB9O,aAAW,SAACpE,GAAD,MAAY,CAC1CwP,KAAM,CACFrM,SAAS,SACT,gBAAgB,CACZ3C,gBAAgB,UAChBJ,MAAM,QAEV,eAAe,CACXA,MAAM,oBAEZ,UAAW,CACTI,gBAAiBR,EAAMuE,QAAQ4O,QAAQC,KACvC,sDAAuD,CACrDhT,MAAOJ,EAAMuE,QAAQ8O,OAAOC,MAC5BnQ,SAAS,eAdIiB,CAkBjBmP,KAEN,OACI,sBAAKtQ,UAAU,uBAAf,UACI,qBAAqBuQ,cAjHX,SAACvL,GACnBA,EAAMzG,iBACNiR,EAAS,CACPF,OAAQtK,EAAMwL,QAAU,EACxBjB,OAAQvK,EAAMyL,QAAU,KA6G+BC,MAAO,CAAEC,OAAQ,gBAAkB5Q,QAAO,sBAAE,sBAAAzB,EAAA,6DACzFoJ,EAAS/H,YAAc,CAACC,GAAG8I,EAAO9I,GAAG0K,KAAK5B,EAAOyB,WAAWnL,MAAM0J,EAAO1J,SADgB,SAElF0D,EAAQQ,KAAR,kCAAwCwF,EAAO9I,GAA/C,YAAqDyI,EAAS,GAAGzI,KAFiB,2CAYzFI,UAAS,UAAKJ,IAAK8I,EAAO9I,IAAZ,+BAAL,+BACT4D,IAAKkF,EAAO0B,YAAa7G,IAAI,mBAbvBmF,EAAO9I,IAiBb,eAACgQ,EAAD,CAAYgB,aAAW,EAAC7S,KAAuB,OAAjB2B,EAAM6P,OAAiBpP,QAAShC,EAA9D,UACI,cAAC8R,EAAD,CAAgBlQ,QAAS,kBAAI2P,EAAmBhH,IAAhD,SAA0DA,EAAOyB,aACjE,cAAC8F,EAAD,CAAgBlQ,QArFL,WACpB0P,EAASzQ,QAAQC,IAAKC,YAAYF,QAEjC0I,EAAU/H,YAAc,CACpBC,GAAG8I,EAAO9I,GACV0K,KAAK5B,EAAOyB,WACZnL,MAAM0J,EAAO1J,SAEjB2F,GAAQ,IAEZxG,KA2EY,6BACA,cAAC8R,EAAD,CAAgBlQ,QA1EX,WAChB0P,EAASzQ,QAAQC,IAAKC,YAAYF,OAEjC2Q,GAAQ,GAGVjI,EAAU/H,YAAc,CACtBC,GAAG6P,EAAS7P,GACZ0K,KAAKmF,EAAStF,WACdnL,MAAMyQ,EAASzQ,SAEjBb,KA+DY,uBACA,cAAC8R,EAAD,CAAgBlQ,QAAS,WACvByP,EAASH,GACT3H,EAASmJ,YAAanI,KAFxB,8BAKH3K,GAAQ,cAAC2N,EAAA,EAAD,CAAQ3N,KAAMA,EAAMoC,QAAS,kBAAIwE,GAAQ,IAAQvE,kBAAgB,oBAAoBxC,QAAS,CAAEH,MAAOG,EAAQH,OAA/G,SACL,cAAC,EAAD,CAAkBU,YApER,WACtBwG,GAAQ,QAqECuC,GAAQ,cAACwE,EAAA,EAAD,CAAQ3N,KAAMmJ,EAAM/G,QAAS,kBAAIwP,GAAQ,IAAQvP,kBAAgB,oBAAoBxC,QAAS,CAAEH,MAAOG,EAAQH,OAA/G,SACL,cAAC,EAAD,CAAYU,YAAa,kBAAIwR,GAAQ,YCpI1CmB,MAnCf,WACI,IAAMpJ,EAAWC,cAEXwH,EADUtQ,IAAUgB,WAAW,WACfiI,QAAQ,aAAasH,MAAM,IAHxB,EAITtI,YAAkBqI,EAAM,CAACpI,QAAQ,OAA1CU,EAJkB,oBAKnBgB,EAAUhJ,aAAY,SAACC,GAAD,OAASA,EAAM+I,UAAU4B,WAqB/C,OApBNzC,qBAAU,WACN,IAAGa,EAQH,OAJOhB,GAAaA,EAAQJ,OAIrB,eAER,CAACI,EAAQgB,EAAUf,IAUlB,qBAAK1H,UAAU,kBAAf,SACKyH,GAAWA,EAAQxD,KAAI,SAACyE,GACjB,OAAO,cAAC,EAAD,CAAqCA,OAAQA,GAAnBA,EAAO9I,U,0KC1BtD/C,GAAUC,aAAW,SAACC,GACxB,MAAM,CACFC,OAAO,CACHG,MAAM,UACNF,QAAQ,SAEZ8T,OAAO,aACHvP,SAAU,WACVK,aAAc9E,EAAMiU,MAAMnP,aAC1BtE,gBAAiB,UACjB,UAAW,CACTA,gBAAiB0T,aAAK,UAAW,KAEnCpE,WAAY,EACZ1D,YAAYpM,EAAMG,QAAQ,IAC1ByE,MAAO,QACN5E,EAAMmU,YAAYC,GAAG,MAAQ,CAC5BtE,WAAY9P,EAAMG,QAAQ,GAC1ByE,MAAO,SAGXyP,WAAY,CACVnU,QAASF,EAAMG,QAAQ,EAAG,KAC1B0E,OAAQ,OACRJ,SAAU,WACV6P,cAAe,OACfhP,QAAS,OACTiP,WAAY,SACZC,eAAgB,SAChBpU,MAAM,WAERqU,UAAW,CACTrU,MAAO,WAETsU,WAAW,aACTxU,QAASF,EAAMG,QAAQ,EAAG,EAAG,EAAG,GAChCgD,SAASnD,EAAMG,QAAQ,KAEvBwU,YAAY,cAAD,OAAgB3U,EAAMG,QAAQ,GAA9B,OACXyU,WAAY5U,EAAM6U,YAAYC,OAAO,SACrClQ,MAAO,QACN5E,EAAMmU,YAAYC,GAAG,MAAQ,CAC5BxP,MAAO,OACP,UAAW,CACTA,MAAO,cAuDRmQ,I,SAAAA,GAjDf,WACI,IAAMlU,EAAQf,KACd,OACI,qBAAKmD,UAAU,aAAf,SACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,mBAAGA,UAAU,yBAAb,eACA,mBAAGA,UAAU,4BAAb,SAA0CP,aAAY,SAACC,GAAD,OAASA,EAAMI,IAAIwK,aAE7E,sBAAKtK,UAAU,oBAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,cAACyL,EAAA,EAAD,CAAYzL,UAAWpC,EAAQZ,OAAQiD,aAAW,WAAlD,SACI,cAAC,KAAD,CAAmBC,SAAS,YAEhC,cAACuL,EAAA,EAAD,CAAYzL,UAAWpC,EAAQZ,OAAQiD,aAAW,WAAlD,SACI,cAAC,KAAD,CAAkBC,SAAS,YAE/B,cAACuL,EAAA,EAAD,CAAYzL,UAAWpC,EAAQZ,OAAQiD,aAAW,WAAlD,SACI,cAAC,KAAD,CAAYC,SAAS,eAG7B,sBAAKF,UAAWpC,EAAQmT,OAAxB,UACI,qBAAK/Q,UAAWpC,EAAQwT,WAAxB,SACA,cAAC,KAAD,MAEA,cAACW,GAAA,EAAD,CACAtR,YAAY,SACZ7C,QAAS,CACL2O,KAAM3O,EAAQ4T,UACdnI,MAAOzL,EAAQ6T,YAEnBO,WAAY,CAAE,aAAc,eAG5B,sBAAKhS,UAAU,0BAAf,UACA,cAACyL,EAAA,EAAD,CAAYzL,UAAWpC,EAAQZ,OAAQiD,aAAW,WAAlD,SACI,cAAC,KAAD,CAAWC,SAAS,YAExB,cAACuL,EAAA,EAAD,CAAYzL,UAAWpC,EAAQZ,OAAQiD,aAAW,WAAlD,SACI,cAAC,KAAD,CAAUC,SAAS,wBCtFzCrD,I,0CAAUC,aAAW,SAACC,GACxB,MAAM,CACFC,OAAO,CACHC,QAAQF,EAAMG,QAAQ,GACtBC,MAAM,aA8EH8U,GA1EG,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACVtU,EAAQf,KAEd,OADAuC,QAAQC,IAAI,oBAER,mCACI,sBAAKW,UAAU,WAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,4BAAf,SACI,cAAC,EAAD,SAGR,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,4BAAf,UACQ,mBAAGA,UAAU,mCAAb,SAAiDP,aAAY,SAACC,GAAD,OAASA,EAAMC,cAAc2K,UAC1F,qBAAKtK,UAAU,+BAAf,SACI,cAACyL,EAAA,EAAD,CAAYzL,UAAWpC,EAAQZ,OAAQiD,aAAW,WAAlD,SACI,cAAC,IAAD,CAAgBC,SAAS,iBAIzC,qBAAKF,UAAU,4BAAf,SACI,qBAAKA,UAAU,0BAAf,SACI,cAAC,GAAD,WAIZ,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,uBAwBdkS,EASD,qBAAKlS,UAAU,iCC7EjCnD,I,OAAUC,aAAW,SAACC,GACxB,MAAM,CACFC,OAAO,CACHC,QAAQF,EAAMG,QAAQ,GACtBC,MAAM,aA8EHgV,GA1EO,SAAC,GAAgB,IAAfD,EAAc,EAAdA,SACpB9S,QAAQC,IAAI,kBACZ,IAAMzB,EAAQf,KACd,OACI,mCACI,sBAAKmD,UAAU,WAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,4BAAf,SACI,cAAC,EAAD,SAGR,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,uBAAf,UACQ,mBAAGA,UAAU,8BAAb,SAA4CP,aAAY,SAACC,GAAD,OAASA,EAAMC,cAAc2K,UACrF,qBAAKtK,UAAU,0BAAf,SACI,cAACyL,EAAA,EAAD,CAAYzL,UAAWpC,EAAQZ,OAAQiD,aAAW,WAAlD,SACI,cAAC,IAAD,CAAgBC,SAAS,iBAIzC,qBAAKF,UAAU,uBAAf,SACI,qBAAKA,UAAU,qBAAf,SACI,cAAC,GAAD,WAIZ,qBAAKA,UAAU,gBAAf,SAyBKkS,a,qCCrEZE,GAAoBjO,KAAOM,IAAV,iKASjB4N,GAAsBlO,KAAOM,IAAV,+KAEV,gBAAG6N,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAOTC,GAAiBpO,KAAOqO,GAAV,sECVrBC,GAASC,gBAAK,kBAAI,kCAClBC,GAAKD,gBAAK,kBAAI,kCACdE,GAAWF,gBAAK,kBAAI,kCAEpBG,GAAc,SAAC,GAA6B,EAA5BtT,MAA6B,IAAvBuT,EAAsB,EAAtBA,mBAC1B,OAAO,mCACL,eAACV,GAAD,WACE,cAACC,GAAD,CAAqBC,SAAS,oCAC9B,cAACC,GAAD,wCACA,wBAAQxS,QAAS+S,EAAjB,6BA2BSC,OAtBf,WAAgB,IAAD,EACFnQ,YAAa3D,KAAnB4D,EADQ,oBAEb,OACE,qBAAK7C,UAAU,MAAf,SACE,kCACI6C,GAAQ,cAAC,IAAD,CAAUmQ,GAAG,mBACvB,cAAC,IAAD,UACE,cAAC,iBAAD,CAAeC,kBAAmBJ,GAAlC,SACA,eAAC,WAAD,CAAUK,SAAU,cAACC,GAAA,EAAD,IAApB,UACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,OAAQ,kBAAIrU,IAAKC,YAAY,cAAC,IAAD,CAAU8T,GAAG,gCAAgC,cAACP,GAAD,OAC3G,eAAC,IAAD,WACE,cAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,8BAA8BC,OAAQ,kBAAI,cAAC,GAAD,UAAW,cAACX,GAAD,SACvE,cAAC,IAAD,CAAOU,KAAK,oCAAoCC,OAAQ,SAACjP,GAAD,OAAS,cAAC,GAAD,UAAe,cAACuO,GAAD,eAAgBvO,yB,SCpCxGgL,GAAa,CACfzP,GAAG,uBACH0K,KAAK,YAaQiJ,GAXQ,WAA8B,IAA7B7T,EAA4B,uDAAtB2P,GAAamE,EAAS,uCAClD,OAAOA,EAAOlT,MACZ,IAAK,mBACL,OAAO,2BACFZ,GADL,IAEEE,GAAG4T,EAAO7K,QAAQ/I,GAClB0K,KAAKkJ,EAAO7K,QAAQ2B,OAEtB,QAAS,OAAO5K,ICZhB2P,GAAa,CACfzP,GAAG,GACHuI,IAAI,IAaSsL,GAXO,WAA8B,IAA7B/T,EAA4B,uDAAtB2P,GAAamE,EAAS,uCACjD,OAAOA,EAAOlT,MACZ,IAAK,kBACL,OAAO,2BACFZ,GADL,IAEEE,GAAG4T,EAAO7K,QAAQ/I,GAClBuI,IAAIqL,EAAO7K,QAAQR,MAErB,QAAS,OAAOzI,ICZhB2P,GAAa,CACfqE,SAAQ,GAYKC,GAVS,WAA8B,IAA7BjU,EAA4B,uDAAtB2P,GAAamE,EAAS,uCACnD,OAAOA,EAAOlT,MACZ,IAAK,UACL,OAAO,2BACFZ,GADL,IAEEgU,SAAShU,EAAMgU,UAEjB,QAAS,OAAOhU,ICVhB2P,GAAa,CACjBtR,MAAK,GAYU6V,GAVI,WAA8B,IAA7BlU,EAA4B,uDAAtB2P,GAAamE,EAAS,uCAC9C,OAAOA,EAAOlT,MACZ,IAAK,cACL,OAAO,2BACFZ,GADL,IAEE3B,MAAM2B,EAAM3B,OAEd,QAAS,OAAO2B,ICVhB2P,GAAa,CACfzP,GAAG,GACHiU,OAAO,GACP1L,IAAI,GACJ2L,MAAM,IAiBOC,GAdY,WAA8B,IAA7BrU,EAA4B,uDAAtB2P,GAAamE,EAAS,uCACtD,OAAOA,EAAOlT,MACZ,IAAK,gBACH,kCACKZ,GADL,IAEIE,GAAG4T,EAAO7K,QAAQ/I,GAClBiU,OAAOL,EAAO7K,QAAQkL,OACtB1L,IAAIqL,EAAO7K,QAAQR,IACnB2L,MAAMN,EAAO7K,QAAQmL,QAG3B,QAAS,OAAOpU,IClBhB2P,GAAa,CACfqE,SAAQ,GAYKM,GAVW,WAA8B,IAA7BtU,EAA4B,uDAAtB2P,GAAamE,EAAS,uCACrD,OAAOA,EAAOlT,MACZ,IAAK,eACL,OAAO,2BACFZ,GADL,IAEEgU,SAAShU,EAAMgU,UAEjB,QAAS,OAAOhU,ICVhB2P,GAAa,CACfzP,GAAG,uBACH0K,KAAK,qBACLtL,MAAM,IAcOiV,GAZa,WAA8B,IAA7BvU,EAA4B,uDAAtB2P,GAAamE,EAAS,uCACvD,OAAOA,EAAOlT,MACZ,IAAK,iBACL,OAAO,2BACFZ,GADL,IAEEE,GAAG4T,EAAO7K,QAAQ/I,GAClB0K,KAAKkJ,EAAO7K,QAAQ2B,KACpBtL,MAAMwU,EAAO7K,QAAQ3J,QAEvB,QAAS,OAAOU,ICdhB2P,GAAa,CACfhF,SAAQ,GAYK6J,GAVS,WAA8B,IAA7BxU,EAA4B,uDAAtB2P,GAAamE,EAAS,uCACnD,OAAOA,EAAOlT,MACZ,IAAK,aACL,OAAO,2BACFZ,GADL,IAEE2K,QAAQmJ,EAAO7K,QAAQ0B,UAEzB,QAAS,OAAO3K,ICVhB2P,GAAa,CACfpH,MAAM,GACNkM,MAAM,IAaOC,GAXW,WAA8B,IAA7B1U,EAA4B,uDAAtB2P,GAAamE,EAAS,uCACrD,OAAOA,EAAOlT,MACZ,IAAK,eACL,OAAO,2BACFZ,GADL,IAEEuI,MAAMuL,EAAO7K,QAAQV,MACrBkM,MAAMX,EAAO7K,QAAQwL,QAEvB,QAAS,OAAOzU,ICFP2U,gBAAgB,CAC7BvU,IAAIyT,GACJpL,IAAIsL,GACJa,MAAMC,GACNxW,KAAK6V,GACLY,MAAMT,GACNU,YAAYT,GACZrU,cAAcsU,GACdxL,UAAUyL,GACVQ,YAAYN,K,yCCLGO,IAAV,SAAUA,KAAV,iEACH,OADG,SACGC,aAAI,IADP,wC,gBCXUC,I,YAmBAC,I,YAIAC,I,YAMAC,IA7BV,SAAUH,GAAV,gFACH,OADkClM,EAA/B,EAA+BA,QAA/B,SACGvJ,QAAQC,IAAIsJ,GADf,UAEAA,EAAQ3J,QAAQC,IAAKC,YAAYF,MAFjC,iBAGiB,OAHjB,SAGuBH,IAAUgB,WAAW,WAAWC,IAAI6I,EAAQ/I,IAHnE,OAIe,OADR2H,EAHP,gBAIqB1I,IAAUgB,WAAW,SAASC,IAAI6I,EAAQ/I,IAJ/D,OAKC,OADMqV,EAJP,iBAKOA,EAAQC,SALf,QAMC,OAND,UAMO3N,EAAU2N,SANjB,QAOe,OAPf,UAOqBrW,IAAUgB,WAAW,SAP1C,QAQC,OADMkF,EAPP,iBAQOA,EAAQjF,IAAIb,IAAKC,YAAYyE,KAAK6G,IAAI,CAC1C/E,MAAM,eACHxG,IAAKC,YAAYyE,IAAK/E,IAASC,UAAUC,WAAWoW,WAEvD,CAAEC,OAAO,IAZZ,mGAmBA,SAAUL,KAAV,iEACH,OADG,SACGM,aAAU,sBAAsBP,IADnC,wCAIA,SAAUE,KAAV,kGAMA,SAAUC,KAAV,iEACH,OADG,SACGJ,aAAI,CAACS,aAAKN,IAAgBM,aAAKP,MADlC,wC,yBC7BUQ,I,YAKAC,I,YAKAC,IAVV,SAAUF,KAAV,iEACH,OADG,SACGrW,IAAKwW,gBAAgBC,KADxB,OAEH,OAFG,SAEGL,aAAKM,KAFR,wCAKA,SAAUJ,KAAV,iEACH,OADG,SACGK,aAAW,sBAAsBN,IADpC,wCAKA,SAAUE,KAAV,iEACH,OADG,SACGZ,aAAI,CAACS,aAAKE,MADb,wC,gBCTkBM,IAAV,SAAUA,KAAV,iEACX,OADW,SACLjB,aAAI,CAACS,aAAKG,IAAWH,aAAKV,IAAeU,aAAKL,MADzC,wCCCf,IAAMc,GAAeC,eACfC,GAAW,CAACC,UAAOH,IACnBI,GAAMC,aAAYC,GAAYC,KAAe,WAAf,EAAmBL,KACvDF,GAAeQ,IAAIT,IACJK,U,UCGTK,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAqCnC,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT3X,MAAK,SAACgY,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3X,QACfsX,UAAUC,cAAcO,YAI1BpY,QAAQC,IACN,+GAKE0X,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB/X,QAAQC,IAAI,sCAGR0X,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5B7X,OAAM,SAACC,GACNH,QAAQG,MAAM,4CAA6CA,MCrFjEoY,IAASrE,OACL,cAAC,IAAD,CAAU4C,MAAOA,GAAjB,SACE,cAAC,KAAD,UACA,cAAC,GAAD,QAGJ0B,SAASC,eAAe,SDKnB,SAAkBd,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIc,IAAIC,iBAAwBtB,OAAOC,SAASsB,MACpDC,SAAWxB,OAAOC,SAASuB,OAIvC,OAGFxB,OAAOyB,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAMiB,iBAAN,sBAEPxB,KAgEV,SAAiCO,EAAOC,GAEtCoB,MAAMrB,EAAO,CACXsB,QAAS,CAAE,iBAAkB,YAE5BjZ,MAAK,SAACkZ,GAEL,IAAMC,EAAcD,EAASD,QAAQnT,IAAI,gBAEnB,MAApBoT,EAAS5R,QACO,MAAf6R,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5CvB,UAAUC,cAAcuB,MAAMrZ,MAAK,SAACgY,GAClCA,EAAasB,aAAatZ,MAAK,WAC7BsX,OAAOC,SAASgC,eAKpB7B,GAAgBC,EAAOC,MAG1BzX,OAAM,WACLF,QAAQC,IAAI,oEAtFVsZ,CAAwB7B,EAAOC,GAI/BC,UAAUC,cAAcuB,MAAMrZ,MAAK,WACjCC,QAAQC,IACN,+GAMJwX,GAAgBC,EAAOC,OC/B/B6B,I,gCCjBA,kCAMiBjZ,IANG,SAAC+I,GACjB,MAAM,CACNpI,KAAK,iBACLqI,QAAQD,IAKH,IAAMmI,EAAa,SAACnI,GACzB,MAAM,CACJpI,KAAK,sBACLqI,QAAQD,K,gCCLG6B,IANA,SAACzK,GACd,MAAM,CACNQ,KAAK,mBACLqI,QAAQ7I,K,+BCHZ,yNAcElB,IAASia,cARU,CACjBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAGF,IAAMta,EAAUD,IAASC,YACjBD,MAAf,EACO,IAAMK,EAAKL,IAASK,OACdma,EAAQxa,IAASwa,UAGjB1D,GAFO9W,IAASya,cACbza,IAAS0a,WACG,IAAI1a,IAASK,KAAKsa,oBAKjC5D,EAA0B,WACvB9W,EAAUgB,WAAW,SAASC,IAAIb,EAAKC,YAAYyE,KACzD6G,IAAI,CACVvE,SAAShH,EAAKC,YAAYwE,YAC1B8V,UAAUva,EAAKC,YAAYF,MAC3BsG,UAAUrG,EAAKC,YAAYuE,SAC3B9E,UAAUC,IAASC,UAAUC,WAAWC,kBACxC0G,MAAM,IACN,CAAC0P,OAAM,M,wFChCAsE,E,MAAiBtV,EAAOM,IAAV,iK,OCUZ0O,IAVC,WACZ,OACI,mCACA,cAACsG,EAAD,UACI,qBAAKjW,IAAI,6BAA6BD,IAAI,uB","file":"static/js/main.094c6d67.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { IconButton, makeStyles, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {auth, firestore} from '../../firebase/firebase'\r\nimport firebase from 'firebase/app'\r\nimport './AddChannelPopup.scss' \r\nimport { useSelector } from 'react-redux';\r\nconst useStyles=makeStyles((theme)=>{\r\n    return{\r\n        button:{\r\n            padding:theme.spacing(1),\r\n            color:'#fff'\r\n        },\r\n        typo:{\r\n            color:'#fcfdfe',\r\n            textTransform:'uppercase',\r\n        },\r\n        dialog:{\r\n            backgroundColor:'#363940',\r\n        },\r\n        dialogaction:{\r\n            backgroundColor:'#363940',\r\n            padding:'4% 6.5%',\r\n        },\r\n        paper: { \r\n            minWidth: '25%',\r\n        },\r\n    }\r\n})\r\nexport default function AddChannelPopup() {\r\n    const classes=useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n    const [formValue,setformValue]=useState('');\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleSubmit=async (e)=>{\r\n    e.preventDefault();\r\n    await channelRef.add({\r\n        channel:formValue,\r\n        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n        // name:auth.currentUser.displayName,\r\n        email:auth.currentUser.email,\r\n        // uid:auth.currentUser.uid,\r\n    })\r\n    .then(\r\n      ()=>{\r\n        console.log(\"Document Added\")\r\n      })\r\n    .catch((error)=>{console.log(error)})\r\n\r\n    setformValue('');\r\n  }\r\n  const currentserverid=useSelector((state)=>state.currentserver.id)\r\n  const channelRef=firestore.collection('servers').doc(currentserverid).collection('channels')\r\n  return (\r\n    <div>\r\n        <IconButton onClick={handleClickOpen} className={classes.button} aria-label=\"settings\">\r\n            <AddIcon fontSize='large'/>\r\n        </IconButton>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" classes={{ paper: classes.paper}}>\r\n        <DialogContent className={classes.dialog}>\r\n          <DialogContentText>\r\n            <Typography variant='h5' className={classes.typo}>Channel name</Typography>\r\n          </DialogContentText>\r\n          <input type=\"text\" required className='input' autoFocus placeholder='Type channel name' onChange={(e)=>setformValue(e.target.value)} value={formValue}/>\r\n        </DialogContent>\r\n        <DialogActions className={classes.dialogaction}>\r\n            <form onSubmit={handleSubmit} className='form'>\r\n              <button type='submit' onClick={handleClose} className='form__button'>Add</button>\r\n            </form>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport ScreenShareIcon from '@material-ui/icons/ScreenShare';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport {IconButton,makeStyles, Button} from '@material-ui/core'\r\nimport './Sidebarvoice.scss'\r\nconst useStyles=makeStyles(()=>{\r\n    return{\r\n        signal:{\r\n            color:\"#43b380\"\r\n        },\r\n        end:{\r\n            color:'#babbbf'\r\n        },\r\n        button:{\r\n            fontSize:'14px',\r\n            color:'#fff',\r\n            backgroundColor:'#363940',\r\n            padding:'5px 1.9rem',\r\n            textTransform:'none'\r\n        }\r\n    }\r\n})\r\nfunction Sidebarvoice() {\r\n    const classes=useStyles();\r\n    return (\r\n        <div className='sidebarvoice'>\r\n            <div className=\"sidebarvoice__header\">\r\n                <div className=\"sidebarvoice__connect\">\r\n                    <div className=\"sidebarvoice__connect-icon\">\r\n                        <IconButton className={classes.signal} aria-label=\"settings\">\r\n                            <SignalCellularAltIcon fontSize='large'/>\r\n                        </IconButton>\r\n                        </div>\r\n                    <div className=\"sidebarvoice__connect-connected\">Voice Connected</div>\r\n                </div>\r\n                <div className=\"sidebarvoice__disconnect\">\r\n                    <IconButton className={classes.end} aria-label=\"settings\">\r\n                        <CallEndIcon fontSize='large'/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebarvoice__stream\">\r\n                <div className=\"sidebarvoice__stream-video\">\r\n                    <Button variant=\"text\" className={classes.button} startIcon={ <VideocamIcon/>}> Video </Button>\r\n                </div>\r\n                <div className=\"sidebarvoice__stream-screen\">\r\n                    <Button variant=\"text\" className={classes.button} startIcon={ <ScreenShareIcon/>}> Screen </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebarvoice\r\n","import React, { useState } from 'react';\r\nimport {Avatar,Badge} from '@material-ui/core';\r\nimport { withStyles,makeStyles } from '@material-ui/core/styles';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from '../../firebase/firebase';\r\nimport {IconButton} from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport HeadsetMicIcon from '@material-ui/icons/HeadsetMic';\r\nimport './BadgeAvatar.scss'\r\nimport { useHistory } from 'react-router';\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: '#44b700',\r\n    color: '#44b700',\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    '&::after': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: '50%',\r\n      animation: '$ripple 1.2s infinite ease-in-out',\r\n      border: '1px solid currentColor',\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  '@keyframes ripple': {\r\n    '0%': {\r\n      transform: 'scale(.8)',\r\n      opacity: 1,\r\n    },\r\n    '100%': {\r\n      transform: 'scale(2.4)',\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst useStyles=makeStyles((theme)=>{\r\n  return{\r\n    settings:{\r\n      display:'flex',\r\n      flexWrap:'wrap'\r\n    },\r\n    icon:{\r\n      padding:'.5rem',\r\n      color:'#babbbf'\r\n    },\r\n    avatar:{\r\n      width:'3.25rem',\r\n      height:'3.25rem'\r\n    }\r\n  }\r\n})\r\n\r\nexport default function BadgeAvatars() {\r\n  const history=useHistory();\r\n  const [user]=useAuthState(auth);\r\n  const [mic,setmic]=useState(false);\r\n  const classes=useStyles();\r\n  const handleClick=async ()=>{\r\n    await auth.signOut();\r\n    history.push('/discord-clone');\r\n  }\r\n    return (\r\n    <div>\r\n      <div className=\"profile\">\r\n        <div className=\"profile__avatar\">\r\n          <StyledBadge overlap=\"circle\" anchorOrigin={{vertical: 'bottom',horizontal: 'right',}} variant=\"dot\">\r\n            <Avatar alt=\"Remy Sharp\" src={`${user&& user.photoURL?user.photoURL:null}`} className={classes.avatar}/>\r\n          </StyledBadge>\r\n          <div className=\"profile__name\">\r\n            <div className=\"profile__name-name\">\r\n              {`${user&& user.displayName?user.displayName:null}`}\r\n            </div>\r\n            <div className=\"profile__name-uid\">\r\n              #{user && user.uid.slice(0,6)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classes.settings}>\r\n            <IconButton className={classes.icon} onClick={()=>setmic(!mic)} aria-label=\"settings\">\r\n              {mic?<MicIcon fontSize='large'/>: <MicOffIcon fontSize='large' />}\r\n            </IconButton>\r\n            <IconButton className={classes.icon} aria-label=\"settings\">\r\n            <HeadsetMicIcon fontSize='large'/>\r\n            </IconButton>\r\n            <IconButton className={classes.icon} aria-label=\"settings\" onClick={handleClick}>\r\n              <SettingsIcon fontSize='large' />\r\n            </IconButton>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { Avatar} from '@material-ui/core'\r\n\r\nfunction SquadRole({usr,classes}) {\r\n    return (\r\n        <>\r\n            <div className=\"roles__box\">\r\n                <div className=\"roles__box-avatar\">\r\n                    <Avatar className={classes.avatar} src={usr.userphoto && usr.userphoto}/>\r\n                </div>\r\n                <div className=\"roles__content\">\r\n                    <div className=\"roles__content-name\">\r\n                        <p className='roles__content--squad'>{usr.username && usr.username}</p>\r\n                    </div>\r\n                    <div className='roles__content-status'>\r\n                        {/* Visual Studio Code */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SquadRole\r\n","import React,{useState} from 'react'\r\nimport styled from \"styled-components\"\r\nimport { Avatar, makeStyles } from '@material-ui/core'\r\nimport { firestore } from '../../firebase/firebase';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles=makeStyles({\r\n    avatar:{\r\n        width:'3rem',\r\n        height:'3rem'\r\n    },\r\n    profileavatar:{\r\n        width:'8rem',\r\n        height:'8rem'\r\n    },\r\n    outlined:(rolearr)=>({\r\n        color:rolearr.map((a)=>{\r\n            return a['color']\r\n        })\r\n    }),\r\n\r\n})\r\n\r\nconst Para=styled.p`\r\n    color:${props=>props.color}\r\n`\r\nconst StyledCircle=styled.svg`\r\n    display:'inline-block'\r\n`\r\nconst StyledChip=styled.div`\r\n    border-color:${props=>props.color}\r\n`\r\n\r\nconst Myrolesmap = ({user,color}) => {\r\n    const [open,setopen]=useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [rolearr,setrolearr]=useState([]);\r\n    const userref=firestore.collection('users');\r\n    const currentserverid=useSelector((state)=>state.currentserver.id)\r\n    const classes=useStyles(rolearr);\r\n     const getuserdata=()=>{\r\n        userref.get().then((snapshot)=>snapshot.docs.forEach((doc)=>{\r\n            if(doc.data().userphoto===user.photoURL){\r\n              const keys = Object.keys(doc.data().roles);\r\n              for(const k of keys){\r\n                if(currentserverid && k===currentserverid){\r\n                     const mykeys=Object.keys(doc.data().roles[k])\r\n                     let arr=[];\r\n                     mykeys.map((rol)=>{\r\n                        arr.push(doc.data().roles[k][rol]);                        \r\n                     })\r\n                     setrolearr(arr);    \r\n                }\r\n              }\r\n            }\r\n          }))\r\n     }\r\n\r\n    const handleClick=(event)=>{\r\n    getuserdata()\r\n    setopen(!open);\r\n    setrolearr([]);\r\n    setAnchorEl(anchorEl ? null : event.currentTarget);\r\n}\r\n    return (\r\n        \r\n        <div onClick={handleClick} onMouseLeave={()=>{\r\n            setopen(false)\r\n        }}>\r\n            {open && <div className=\"roleprofile\">\r\n                  <div className=\"roleprofile__header\">\r\n                    <div className=\"roleprofile__header-photo\">\r\n                        <Avatar src={user.photoURL && user.photoURL} className={classes.profileavatar} />\r\n                    </div>\r\n                    <div className=\"roleprofile__header-username\">\r\n                        {user.username && user.username}\r\n                    </div>\r\n                    <div className=\"roleprofile__header-status\">\r\n                        🙌 my website\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"roleprofile__content\">\r\n                    <div className=\"roleprofile__content-heading\">\r\n                        ROLES\r\n                    </div>\r\n                    <div className=\"roleprofile__content-roles\">\r\n                        {rolearr && rolearr.map((a,index)=>{\r\n                            return <StyledChip key={index} className=\"chip\" color={a['color']}>\r\n                            <div className=\"chip__avatar\">\r\n                                <StyledCircle viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"50\" cy=\"50\" r=\"50\" fill={a['color']} /></StyledCircle>\r\n                            </div>\r\n                            <div className=\"chip__label\" color={a['color']}>\r\n                                {a['yourrole']}\r\n                            </div>\r\n                        </StyledChip>\r\n                        })}\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n               }\r\n         <div className=\"roles__box\">\r\n                <div className=\"roles__box-avatar\">\r\n                    <Avatar className={classes.avatar} src={user.photoURL && user.photoURL}/>\r\n                </div>\r\n                <div className=\"roles__content\">\r\n                    <div className=\"roles__content-name\">\r\n                        <Para color={color} className='roles__content--squad'>{user.username && user.username}</Para>\r\n                    </div>\r\n                    <div className='roles__content-status'>\r\n                        {user.status && user.status}\r\n                    </div>\r\n                </div>\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Myrolesmap\r\n","import React from 'react'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\r\nimport Myrolesmap from './Myrolesmap'\r\n\r\nconst Myroles = ({myrole,color,rolemap}) => {\r\n    const allusersref=rolemap.doc(myrole.id).collection('allusers');\r\n    const [allusers]=useCollectionData(allusersref,{idField:'id'});\r\n    return (\r\n        <div className='myroles'>\r\n            <div className=\"myroles__user\">\r\n                {allusers && allusers.map((user)=>{\r\n                return <Myrolesmap key={user.id} user={user} color={color}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Myroles\r\n","import React from 'react'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { useSelector } from 'react-redux';\r\nimport { firestore } from '../../firebase/firebase'\r\nimport Myroles from './Myroles';\r\n\r\nconst Rolescategory = ({role}) => {\r\n    const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const rolemap=firestore.collection('servers').doc(currentserverid).collection('allroles').doc(role.id).collection('allroles');\r\n    const [allroleusers]=useCollectionData(rolemap,{idField:'id'});\r\n    return (\r\n        <>\r\n             <div className=\"rolescategory\">\r\n             <div className=\"roles__heading\">\r\n               <h2 className=\"roles__heading-h2\">{role && role.rolename} —  {allroleusers && allroleusers.length}</h2> \r\n            </div>\r\n                {allroleusers && allroleusers.map((myrole)=>{\r\n                    return <Myroles key={myrole.id} myrole={myrole} rolemap={rolemap} color={myrole && myrole.color}/>\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Rolescategory\r\n","import React, { useEffect } from 'react'\r\nimport { useCollectionData, useDocumentData } from 'react-firebase-hooks/firestore';\r\nimport { firestore } from '../../firebase/firebase';\r\nimport { Avatar, makeStyles } from '@material-ui/core'\r\nimport './Roles.scss'\r\nimport SquadRole from './SquadRole';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport currentrole from '../../redux/roles/roles.actions';\r\nimport Rolescategory from './Rolescategory';\r\nconst useStyles=makeStyles({\r\n    avatar:{\r\n        width:'3rem',\r\n        height:'3rem'\r\n    },\r\n})\r\nfunction Roles() {\r\n    const classes=useStyles();\r\n    const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const serverRef=firestore.collection('servers').doc(currentserverid);\r\n    const [servers]=useDocumentData(serverRef);\r\n    // const userRef=firestore.collection('users');\r\n    // const query=userRef.orderBy('createdAt');\r\n    // const [allusers]=useCollectionData(query,{idField:'id'});\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        // dispatch(currentrole({admin:servers}));\r\n        return () => {\r\n           \r\n        }\r\n    }, [servers,dispatch])\r\n    // console.log('Roles called');\r\n    const allrolesref=serverRef.collection('allroles');\r\n    const rolequery=allrolesref.orderBy('createdAt');\r\n    const [allroles]=useCollectionData(rolequery,{idField:'id'});\r\n    \r\n    return (\r\n        <div className='roles'>\r\n            <div className=\"roles__heading\">\r\n               <h2 className=\"roles__heading-h2\">Administrator  —  1</h2> \r\n            </div>\r\n            <div className=\"roles__box\">\r\n                <div className=\"roles__box-avatar\">\r\n                    <Avatar className={classes.avatar} src={servers && servers.userimage && servers.userimage}/>\r\n                </div>\r\n                <div className=\"roles__content\">\r\n                    <div className=\"roles__content-name\">\r\n                        <p className='roles__content--admin'>{servers && servers.admin && servers.admin}</p>\r\n                    </div>\r\n                    <div className='roles__content-status'>\r\n                        Visual Studio Code\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"roles__heading\">\r\n               <h2 className=\"roles__heading-h2\">Squad  —  {allusers && allusers.length}</h2> \r\n            </div> */}\r\n            {allroles && allroles.map((role)=>{\r\n                return <Rolescategory key={role.id} role={role}/>\r\n            })}\r\n\r\n            {/* {allusers && allusers.map((usr)=>{\r\n                if(usr && servers && usr.useremail===servers.email){\r\n                   \r\n                }\r\n                else{\r\n                    return <SquadRole key={usr.id} usr={usr} classes={classes} />\r\n                }\r\n            })} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Roles\r\n","import React, { memo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory} from 'react-router';\r\n// import currentdoc from '../../redux/document/document.actions'\r\nimport './SidebarChannel.scss'\r\n\r\n// const Channelmap=React.memo((props)=>{\r\n//     console.log('Channel map called');\r\n//     const {msg}=props;\r\n//     const history=useHistory();\r\n//     const id=useSelector((state)=>state.doc.id);\r\n//     const currentserverid=useSelector((state)=>state.currentserver.id)\r\n//     return (\r\n//         <div>\r\n//              <p key={msg.id} onClick={async()=>{\r\n//                  await history.push(`/channels/${currentserverid}/${msg.id}`)\r\n//                 }}\r\n//                 className={`${id===msg.id && `clicked`} sidebarchannel__content`}>\r\n//                 <span className='sidebarchannel__hash'>#</span>{msg.channel}</p>\r\n//         </div>\r\n//     )\r\n// },(prevProps, nextProps) => prevProps.msg === nextProps.msg)\r\n\r\nconst Channelmap=({msg})=>{\r\n    console.log('Channel map called');\r\n    // const {msg}=props;\r\n    const history=useHistory();\r\n    const id=useSelector((state)=>state.doc.id);\r\n    const currentserverid=useSelector((state)=>state.currentserver.id)\r\n    return (\r\n        <div>\r\n             <p key={msg.id} onClick={async()=>{\r\n                 await history.push(`/discord-clone/channels/${currentserverid}/${msg.id}`)\r\n                }}\r\n                className={`${id===msg.id && `clicked`} sidebarchannel__content`}>\r\n                <span className='sidebarchannel__hash'>#</span>{msg.channel}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Channelmap\r\n","import React, { useEffect, useState } from 'react'\r\nimport './SidebarChannel.scss'\r\nimport { firestore } from '../../firebase/firebase';\r\nimport Channelmap from './Channelmap';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// const SidebarChannel=React.memo(()=>{\r\n//     console.log('Sidebar Channel got rendered');\r\n//       const currentserverid=useSelector((state)=>state.currentserver.id)\r\n//       const channelRef=firestore.collection('servers').doc(currentserverid).collection('channels')\r\n//       const [channels,setchannels]=useState([]);\r\n//       useEffect(() => {\r\n//           let data=[]\r\n//           console.log('rendered due to channel change');\r\n//             const myfun=async()=>{\r\n//             await channelRef.orderBy('createdAt').get().then((snapshot)=>{\r\n//                 snapshot.docs.map((doc)=>{\r\n//                     const mychannel=doc.data();\r\n//                     mychannel.id=doc.id\r\n//                     return data.push(mychannel)\r\n//                 })\r\n//             })\r\n//             setchannels(data)\r\n//             }   \r\n//             myfun();    return () => {\r\n              \r\n//           }\r\n//       }, [])\r\n//       console.log(channels);\r\n//     return (\r\n//         <div>\r\n//             <div className=\"sidebarchannel\">\r\n//                 {channels && channels.map((msg)=>{\r\n//                     return <Channelmap key={msg.id} msg={msg}/>\r\n//                 })}               \r\n//             </div>\r\n//         </div>\r\n//     )\r\n// })\r\nconst SidebarChannel=()=>{\r\n    console.log('Sidebar Channel got rendered');\r\n    const currentserverid=useSelector((state)=>state.currentserver.id)\r\n    // console.log(currentserverid);\r\n    const channelRef=firestore.collection('servers').doc(currentserverid).collection('channels')\r\n    const [channels,setchannels]=useState([]);\r\n    useEffect(() => {\r\n        let data=[]\r\n        console.log('rendered due to channel change');\r\n          const myfun=async()=>{\r\n          await channelRef.orderBy('createdAt').get().then((snapshot)=>{\r\n              snapshot.docs.map((doc)=>{\r\n                  const mychannel=doc.data();\r\n                  mychannel.id=doc.id\r\n                  return data.push(mychannel)\r\n              })\r\n          })\r\n          setchannels(data)\r\n          }   \r\n          myfun();    return () => {\r\n            \r\n        }\r\n    }, [currentserverid])\r\n  return (\r\n      <div>\r\n          <div className=\"sidebarchannel\">\r\n              {channels && !!channels.length && channels.map((msg)=>{\r\n                  return <Channelmap key={msg.id} msg={msg}/>\r\n              })}               \r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default (SidebarChannel)","const newserver=(server)=>{\r\n    return{\r\n    type:'New_Server',\r\n    payload:server\r\n  }\r\n  }\r\n  export default newserver;","import React, { useState } from 'react'\r\nimport AddIcon from '@material-ui/icons/AddCircle';\r\nimport { Avatar, Container, DialogActions, DialogContent, DialogContentText, IconButton, makeStyles, Typography } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport './Addserver.scss'\r\nimport { auth, firestore } from '../../firebase/firebase';\r\nimport firebase from 'firebase/app'\r\nimport { useDispatch } from 'react-redux';\r\nimport currentdoc from '../../redux/document/document.actions';\r\nimport currentserver from '../../redux/server/server.actions';\r\nimport newserver from '../../redux/newserver/newserver.actions';\r\nconst useStyles=makeStyles({\r\n    addicon:{\r\n        width:'4.8rem',\r\n        height:'4.8rem',\r\n        color:'#43b581'\r\n    },\r\n    header:{\r\n        textAlign:'center'\r\n    },\r\n    header__heading:{\r\n        fontSize:'2rem',\r\n        color:'#060607',\r\n        padding:'.3rem 2rem',\r\n        fontFamily:'Whitney-bold',\r\n        display:'block'\r\n    },\r\n    header__text:{\r\n        fontSize:'1.5rem',\r\n        display:'block'\r\n    },\r\n    header__servername:{\r\n        marginRight:'80%',\r\n        color:'#6a7480',\r\n        fontSize:'1.25rem',\r\n        fontFamily:'Whitney-medium'\r\n    },\r\n    dialogcontent:{\r\n        backgroundColor:'#fff',\r\n        padding:'1rem 1.6rem'\r\n    },\r\n    dialogaction:{\r\n        backgroundColor:'#f6f6f7',\r\n        padding:'4% 5% 4% 5%',\r\n    },\r\n    paper: { \r\n        minWidth: '25%',\r\n    },\r\n    input:{\r\n        display:'none'\r\n    },\r\n    container:{\r\n        marginTop:'1.5rem'\r\n    }\r\n})\r\nfunction Addserver() {\r\n    const classes=useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [uploadfile,setuploadfile]=useState()\r\n    const [formValue,setformValue]=useState('');\r\n    const serverRef=firestore.collection('servers');\r\n    const roleRef=firestore.collection('roles');\r\n    // const [allroleid,setallroleid]=useState('');\r\n    const dispatch = useDispatch();\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n      };\r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n      const resizeFile = (file) =>\r\n            new Promise((resolve) => {\r\n                Resizer.imageFileResizer(\r\n                file,\r\n                100,\r\n                100,\r\n                \"JPEG\",\r\n                100,\r\n                0,\r\n                (uri) => {\r\n                    resolve(uri);\r\n                },\r\n                \"base64\",\r\n                );\r\n            });\r\n        \r\n      const handleSubmit=async (e)=>{\r\n        e.preventDefault();\r\n        if(formValue){\r\n            if(uploadfile){\r\n                await serverRef.add({\r\n                     servername:formValue,\r\n                     createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                     email:auth.currentUser.email,\r\n                     admin:auth.currentUser.displayName,\r\n                     userimage:auth.currentUser.photoURL,\r\n                     serverimage:uploadfile,\r\n                 }).then(async (value)=>{\r\n                    dispatch((newserver({present:true})));\r\n                    dispatch(currentserver({\r\n                        id:auth.currentUser.uid,\r\n                        name:formValue\r\n                    }))\r\n                    setuploadfile('');\r\n                    const channelRef=firestore.collection('servers').doc(value.id).collection('channels');\r\n                    await channelRef.add({\r\n                        channel:'general',\r\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                        email:auth.currentUser.email,\r\n                    }).then((value)=>dispatch((currentdoc({\r\n                        id:value.id,\r\n                        name:'general'\r\n                    }))))\r\n                    await channelRef.doc(value.id).set({\r\n                        channel:'roles',\r\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                        email:auth.currentUser.email,\r\n                    })\r\n                    let allroleid;\r\n                    const rolerefid=roleRef.doc(value.id);\r\n                    await rolerefid.set({\r\n                        servername:formValue,\r\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                    }).then(async()=>{\r\n                        const serverroleRef=serverRef.doc(value.id).collection('allroles');\r\n                        const roletyperef=roleRef.doc(value.id).collection('rolemenu');\r\n                        await serverroleRef.add({\r\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                        rolename:'Person'\r\n                    }).then(async(myval)=>{\r\n                        roletyperef.add({\r\n                            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                            rolename:'Person',\r\n                            serverroletypeid:myval.id,\r\n                        }).then(async(valid)=>{\r\n                            allroleid=valid.id\r\n                        })\r\n                        const serverallroles=serverroleRef.doc(myval.id).collection('allroles');\r\n                        serverallroles.add({\r\n                            color:'#ea596e',\r\n                            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                            rolename:'Female'\r\n                        }).then(async(servallrole)=>{\r\n                            const rolesallref=roletyperef.doc(allroleid).collection('allroles')\r\n                            rolesallref.add({\r\n                                'Female':{\r\n                                    color:'#ea596e',\r\n                                    number:1,\r\n                                    serverroleid:servallrole.id\r\n                                }\r\n                            })\r\n                        })\r\n                        serverallroles.add({\r\n                            color:'#226699',\r\n                            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                            rolename:'Male'\r\n                        }).then(async(servallrole)=>{\r\n                            const rolesallref=roletyperef.doc(allroleid).collection('allroles')\r\n                            rolesallref.add({\r\n                                'Male':{\r\n                                    color:'#226699',\r\n                                    number:1,\r\n                                    serverroleid:servallrole.id\r\n                                }\r\n                            })\r\n                        })\r\n                    })\r\n                    })\r\n                 })\r\n             }\r\n             else{\r\n                const rolerefid=roleRef.doc();\r\n                await serverRef.add({\r\n                     servername:formValue,\r\n                     createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                     email:auth.currentUser.email,\r\n                     admin:auth.currentUser.displayName,\r\n                     userimage:auth.currentUser.photoURL,\r\n                     serverimage:'./discord-clone/discord_server.png',\r\n                     roleid:rolerefid.id,\r\n                 }).then(async (value)=>{\r\n                     dispatch((newserver({present:true})));\r\n                    dispatch(currentserver({\r\n                        id:value.id,\r\n                        name:formValue\r\n                    }))\r\n                    const channelRef=firestore.collection('servers').doc(value.id).collection('channels')\r\n                    await channelRef.add({\r\n                        channel:'general',\r\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                        email:auth.currentUser.email,\r\n                    }).then((value)=>dispatch((currentdoc({\r\n                        id:value.id,\r\n                        name:'general'\r\n                    }))))\r\n                    await channelRef.add({\r\n                        channel:'roles',\r\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                        email:auth.currentUser.email,\r\n                    })\r\n                    let allroleid;\r\n                    await rolerefid.set({\r\n                        serverid:value.id,\r\n                        servername:formValue,\r\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                    }).then(async()=>{\r\n                        const serverroleRef=serverRef.doc(value.id).collection('allroles');\r\n                        const roletyperef=roleRef.doc(rolerefid.id).collection('rolemenu');\r\n                        await serverroleRef.add({\r\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                        rolename:'Person'\r\n                    }).then(async(myval)=>{\r\n                        roletyperef.add({\r\n                            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                            rolename:'Person',\r\n                            serverroletypeid:myval.id,\r\n                        }).then(async(valid)=>{\r\n                            allroleid=valid.id\r\n                        })\r\n                        const serverallroles=serverroleRef.doc(myval.id).collection('allroles');\r\n                        serverallroles.add({\r\n                            color:'#ea596e',\r\n                            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                            rolename:'Female'\r\n                        }).then(async(servallrole)=>{\r\n                            const rolesallref=roletyperef.doc(allroleid).collection('allroles')\r\n                            rolesallref.add({\r\n                                'Female':{\r\n                                    color:'#ea596e',\r\n                                    number:1,\r\n                                    serverroleid:servallrole.id\r\n                                }\r\n                            })\r\n                        })\r\n                        serverallroles.add({\r\n                            color:'#226699',\r\n                            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                            rolename:'Male'\r\n                        }).then(async(servallrole)=>{\r\n                            const rolesallref=roletyperef.doc(allroleid).collection('allroles')\r\n                            rolesallref.add({\r\n                                'Male':{\r\n                                    color:'#226699',\r\n                                    number:1,\r\n                                    serverroleid:servallrole.id\r\n                                }\r\n                            })\r\n                        })\r\n\r\n                    })\r\n                    })\r\n                 })\r\n             }\r\n        }\r\n        setformValue('');\r\n\r\n      }\r\n      const handleImageUpload=async(e)=>{\r\n        const encodedimage=await resizeFile(e.target.files[0]);\r\n        setuploadfile(encodedimage);\r\n      }\r\n      \r\n    return (\r\n    <div className='addserver'>\r\n            <div className=\"addserver__addicon\">\r\n                <IconButton onClick={handleClickOpen} >\r\n                   <AddIcon className={classes.addicon} />\r\n                </IconButton>\r\n            </div>\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" classes={{ paper: classes.paper}} >\r\n            <DialogContent className={classes.dialogcontent}>\r\n            <DialogContentText component='div' className={classes.header}>\r\n                    <Typography component={'span'} className={classes.header__heading}>\r\n                        Customize your server\r\n                    </Typography>\r\n\r\n                    <Typography component={'span'} className={classes.header__text}>\r\n                        Give your new server a personality with a name and an icon.\r\n                    </Typography>\r\n                    <Typography component={'span'} className={classes.header__text}>\r\n                        You can always change it later.\r\n                    </Typography>\r\n                    <Container className={classes.container} maxWidth=\"sm\">\r\n                    <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={handleImageUpload} />\r\n                        <label htmlFor=\"icon-button-file\">\r\n                            <IconButton className={classes.iconbutton} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                <img className='uploadimage' src=\"/./upload.png\" alt=\"\"/>\r\n                            </IconButton>\r\n                        </label>\r\n                        </Container>\r\n                    <Typography component={'span'} className={classes.header__servername}>\r\n                        SERVER NAME\r\n                    </Typography>                \r\n            </DialogContentText>\r\n                <input type=\"text\" required placeholder={`${auth.currentUser && auth.currentUser.displayName}'s server`} className='input__content' autoFocus onChange={(e)=>setformValue(e.target.value)} value={formValue}/>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogaction}>\r\n            <button type='text' onClick={handleClose} className='addserver__form-back'>Back</button>\r\n                <form onSubmit={handleSubmit} className='addserver__form'>\r\n                    <button type='submit' onClick={handleClose} className='addserver__form-button'>Create</button>\r\n                </form>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Addserver\r\n","import React, { useState } from 'react'\r\nimport { Container, DialogActions, DialogContent, DialogContentText, IconButton, makeStyles, Typography } from '@material-ui/core';\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport './Changeservername.scss'\r\nimport { firestore } from '../../firebase/firebase';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nconst useStyles=makeStyles({\r\n    addicon:{\r\n        width:'4.8rem',\r\n        height:'4.8rem',\r\n        color:'#43b581'\r\n    },\r\n    header:{\r\n        textAlign:'center',\r\n    },\r\n    header__heading:{\r\n        fontSize:'2rem',\r\n        color:'#060607',\r\n        padding:'.3rem 2rem',\r\n        fontFamily:'Whitney-bold',\r\n        display:'block'\r\n    },\r\n    header__text:{\r\n        fontSize:'1.5rem',\r\n        display:'block'\r\n    },\r\n    header__servername:{\r\n        marginRight:'75%',\r\n        color:'#6a7480',\r\n        fontSize:'1.25rem',\r\n        fontFamily:'Whitney-medium'\r\n    },\r\n    dialogcontent:{\r\n        backgroundColor:'#fff',\r\n    },\r\n    dialogaction:{\r\n        backgroundColor:'#f6f6f7',\r\n        padding:'4% 5% 4% 5%',\r\n    },\r\n    paper: { \r\n        minWidth: '25%',\r\n    },\r\n    input:{\r\n        display:'none',\r\n    },\r\n    container:{\r\n        marginTop:'1.5rem'\r\n    }\r\n})\r\nfunction ChangeServername({handleClose}) {\r\n    const classes=useStyles();\r\n    const [uploadfile,setuploadfile]=useState()\r\n    const [formValue,setformValue]=useState('');\r\n    const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const serverRef=firestore.collection('servers').doc(currentserverid);\r\n      const resizeFile = (file) =>\r\n            new Promise((resolve) => {\r\n                Resizer.imageFileResizer(\r\n                file,\r\n                100,\r\n                100,\r\n                \"JPEG\",\r\n                100,\r\n                0,\r\n                (uri) => {\r\n                    resolve(uri);\r\n                },\r\n                \"base64\",\r\n                );\r\n            });\r\n        \r\n      const handleSubmit=async (e)=>{\r\n          console.log('hanlde called');\r\n          handleClose();\r\n        e.preventDefault();\r\n\r\n        if(formValue){\r\n            if(uploadfile){\r\n                await serverRef.update({\r\n                     servername:formValue,\r\n                     serverimage:uploadfile\r\n                 })\r\n                 setformValue('');\r\n             }\r\n             else{\r\n                 await serverRef.update({\r\n                     servername:formValue,\r\n                 })\r\n                 setformValue('');\r\n             }\r\n        }\r\n      }\r\n      const handleImageUpload=async(e)=>{\r\n        const encodedimage=await resizeFile(e.target.files[0]);\r\n        setuploadfile(encodedimage);\r\n      }\r\n      \r\n    return (\r\n    <div className='ChangeServername'>\r\n            <DialogContent className={classes.dialogcontent}>\r\n            <DialogContentText className={classes.header}>\r\n                    <Typography component={'span'} className={classes.header__heading}>\r\n                        Customize your server\r\n                    </Typography>\r\n\r\n                    <Typography component={'span'} className={classes.header__text}>\r\n                        Change your Server Name and icon...\r\n                    </Typography>\r\n                    <Container className={classes.container} maxWidth=\"sm\">\r\n                    <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={handleImageUpload} />\r\n                        <label htmlFor=\"icon-button-file\">\r\n                            <IconButton className={classes.iconbutton} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                <img className='uploadimage' src=\"./upload.png\" alt=\"\"/>\r\n                            </IconButton>\r\n                        </label>\r\n                        </Container>\r\n                    <Typography component={'span'} className={classes.header__servername}>\r\n                       SERVER NAME\r\n                    </Typography>                \r\n            </DialogContentText>\r\n                <input type=\"text\" placeholder='Change server name' required className='input__content' autoFocus onChange={(e)=>setformValue(e.target.value)} value={formValue}/>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogaction}>\r\n            <button type='text' onClick={handleClose} className='ChangeServername__form-back'>Back</button>\r\n                <form onSubmit={handleSubmit} className='ChangeServername__form'>\r\n                    <button type='submit' className='ChangeServername__form-button'>Change</button>\r\n                </form>\r\n            </DialogActions>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ChangeServername\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useSelector } from 'react-redux';\r\nimport { firestore } from '../../firebase/firebase';\r\nimport { DialogContent, DialogContentText } from '@material-ui/core';\r\nimport firebase from 'firebase/app'\r\nimport './AddNewRole.scss'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '50rem',\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  anotherrole:{\r\n    marginTop:'1rem',\r\n\r\n  },\r\n  dialogcontent:{\r\n    width:'100%'\r\n  },\r\n  finishedanotherrole:{\r\n    marginTop:'1rem',\r\n    marginLeft:'2%'\r\n  }\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Get Started to Add Role', 'Add Role type', 'Add role'];\r\n}\r\n\r\nexport default function AddNewRole({handleClose}) {\r\n  const classes = useStyles();\r\n  // const roleid=useSelector((state)=>state.currentserver.roleid);\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [multirole,setmultirole]=useState([]);\r\n  const [completed, setCompleted] = React.useState(false);\r\n  const steps = getSteps();\r\n  const currentserverid=useSelector((state)=>state.currentserver.id);\r\n    const [formValue,setformValue]=useState({\r\n        color:'#fff',\r\n        rolename:''\r\n    });\r\n  const [typeofrole,settypeofrole]=useState('');\r\n  const serverRef=firestore.collection('servers').doc(currentserverid).collection('allroles');\r\n  const roleRef=firestore.collection('roles').doc(currentserverid).collection('rolemenu');\r\n  function getStepContent(stepIndex) {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return 'Select your Role';\r\n      case 1:\r\n        return <>\r\n          <DialogContent className={classes.dialogcontent}>\r\n              <DialogContentText className={classes.header}>\r\n                      <Typography component={'span'} className={classes.header__rolename}>\r\n                         Type Of Role\r\n                      </Typography>                \r\n              </DialogContentText>\r\n                  <input type=\"text\" name='rolename' required className='input__content' autoFocus onChange={(e)=>settypeofrole(e.target.value)} value={typeofrole}/>\r\n              </DialogContent>\r\n        </>\r\n      case 2:\r\n        return <>\r\n            <DialogContent className={classes.dialogcontent}>\r\n              <DialogContentText className={classes.header}>\r\n                      <Typography component={'span'} className={classes.header__rolename}>\r\n                         Role Name\r\n                      </Typography>                \r\n              </DialogContentText>\r\n                  <input type=\"text\" name='rolename' required className='input__content' autoFocus onChange={handleChange} value={formValue.rolename}/>\r\n                  <DialogContentText className={classes.roleheader}>\r\n                      <Typography component={'span'} className={classes.roleheader__rolecolor}>\r\n                          Role Color\r\n                          </Typography> \r\n                      </DialogContentText>\r\n                  <input type=\"text\" name='color' required className='input__content' onChange={handleChange} value={formValue.color}/>\r\n                  {/* {formValue.rolename && 'DO you want to add another role with same category type?'} */}\r\n                  <div className=\"addmorediv\">\r\n                    <Button onClick={handleaddanotherrole} className={classes.anotherrole} color='primary' variant='contained'>Add another role with same category type?</Button>\r\n                    <Button onClick={handlefinishedrole} className={classes.finishedanotherrole} color='primary' variant='contained'>Finished adding more</Button>\r\n                  </div>\r\n                 \r\n              </DialogContent>\r\n        </>\r\n      default:\r\n        return 'Unknown stepIndex';\r\n    }\r\n  }\r\n\r\n  const handleaddanotherrole=()=>{\r\n    setmultirole(()=>{\r\n      return [...multirole,formValue]\r\n    })\r\n    setformValue({\r\n      color:'',\r\n      rolename:''\r\n    })\r\n  }\r\n  const handlefinishedrole=()=>{\r\n    if(typeofrole){\r\n      if(formValue.rolename){\r\n        setmultirole(()=>{\r\n          return [...multirole,formValue]\r\n        })\r\n      }\r\n  }\r\n  setformValue({\r\n    color:'',\r\n    rolename:''\r\n  })\r\n}\r\n    const handleChange=(e)=>{\r\n    const {name,value}=e.target;\r\n    setformValue(()=>{\r\n        return{\r\n            ...formValue,\r\n            [name]:value\r\n        }\r\n    })\r\n  }\r\n  const handleNext = () => {\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n  const [typeid,settypeid]=useState('');\r\n  const [roletypeid,setroletypeid]=useState('');\r\n  const handlebranchandnext=async()=>{\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    if(!completed){\r\n      if(typeofrole){\r\n          await serverRef.add({\r\n              createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n              rolename:typeofrole\r\n          }).then(async(val)=>{\r\n              settypeid(val.id);\r\n              await roleRef.add({\r\n                createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                rolename:typeofrole,\r\n                serverroletypeid:val.id,\r\n              }).then((valid)=>{\r\n                console.log('called',valid.id);\r\n                setroletypeid(valid.id);\r\n              })\r\n          })\r\n          setCompleted(true);\r\n      }\r\n  }\r\n  }\r\n  const handleroleandnext=async()=>{\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    if(typeofrole){\r\n        const addroleref=serverRef.doc(typeid).collection('allroles');\r\n        if(multirole && multirole.length){\r\n          multirole.map(async(rol)=>{\r\n            await addroleref.add({\r\n              color:rol.color,\r\n              createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n              rolename:rol.rolename\r\n          }).then(async (thisid)=>{\r\n            const allroleRef=roleRef.doc(roletypeid).collection('allroles');\r\n            await allroleRef.add({\r\n              [rol.rolename]:{\r\n                color:rol.color,\r\n                number:1,\r\n                serverroleid:thisid.id\r\n              }\r\n            })\r\n          }).then(()=>{\r\n            settypeofrole('');\r\n            setformValue('');\r\n            settypeid('');\r\n            setCompleted(false);\r\n          })\r\n          })\r\n          setmultirole([]);\r\n          handleClose();\r\n        }\r\n        else{\r\n          if(formValue.rolename){\r\n            await addroleref.add({\r\n                color:formValue.color,\r\n                createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n                rolename:formValue.rolename\r\n            }).then(async (thisid)=>{\r\n              const allroleRef=roleRef.doc(roletypeid).collection('allroles');\r\n              await allroleRef.add({\r\n                [formValue.rolename]:{\r\n                  color:formValue.color,\r\n                  number:1,\r\n                  serverroleid:thisid.id\r\n                }\r\n              }).then(()=>{\r\n                settypeofrole('');\r\n                setformValue('');\r\n                settypeid('');\r\n                setCompleted(false);\r\n              })\r\n            })\r\n        }\r\n        handleClose();\r\n        }  \r\n    }\r\n    \r\n  }\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? null : (\r\n          <div>\r\n            <Typography component='div' className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button>\r\n              {\r\n                  activeStep && activeStep===1? <Button variant=\"contained\" color=\"primary\" onClick={handlebranchandnext}>\r\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                </Button> : (activeStep===2 ? <Button variant=\"contained\" color=\"primary\" onClick={handleroleandnext}>\r\n                Finish</Button> : <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>) \r\n              }\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { auth, firestore } from '../../firebase/firebase';\r\nimport currentserver, { deleteServer } from '../../redux/server/server.actions';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport './AvailableServers.scss'\r\nimport { Dialog, makeStyles, withStyles } from '@material-ui/core';\r\nimport ChangeServername from './Changeservername'\r\n// import newserver from '../../redux/newserver/newserver.actions'\r\n// import firebase from 'firebase/app'\r\nimport AddNewRole from '../AddNewRole/AddNewRole';\r\nimport { useHistory } from 'react-router';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nconst useStyles=makeStyles({\r\n    paper: { \r\n        minWidth: '25%',\r\n    },\r\n})\r\nfunction AvailableServersmap({server}) {\r\n  const history=useHistory();\r\n  const channelRef=firestore.collection('servers').doc(server.id).collection('channels');\r\n  const query=channelRef.orderBy('createdAt').limit(1);\r\n  const [channels]=useCollectionData(query,{idField:'id'});\r\n    const classes=useStyles();\r\n    const initialState = {\r\n        mouseX: null,\r\n        mouseY: null,\r\n      };\r\n      const [state, setState] = useState(initialState);\r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    setState({\r\n      mouseX: event.clientX - 2,\r\n      mouseY: event.clientY - 4,\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setState(initialState);\r\n  };      \r\n    const dispatch = useDispatch();\r\n    const id=useSelector((state)=>state.currentserver.id)\r\n    const myserver=server;\r\n\r\n    // const handleDelete=async(server)=>{\r\n    //     setState(initialState);\r\n    //     dispatch(deleteServer(server));\r\n    //     dispatch((newserver({present:false})));\r\n    //     if(server.email===auth.currentUser.email){\r\n    //         const serverRef=firestore.collection('servers').doc(server.id);\r\n    //         const roleref=firestore.collection('roles').doc(server.id);\r\n    //         await roleref.delete();        \r\n    //         await serverRef.delete();\r\n    //         const userref=firestore.collection('users');\r\n    //         userref.doc(auth.currentUser.uid).set({\r\n    //           roles:{\r\n    //             [auth.currentUser.uid]:firebase.firestore.FieldValue.delete()\r\n    //           }\r\n    //         },{ merge: true })  \r\n    //     }\r\n    //     else{\r\n    //       return\r\n    //     }\r\n    // }\r\n    const handlechangeserver=async(server)=>{\r\n      await history.push(`/channels/${server.id}/${channels[0].id}`);\r\n        dispatch((currentserver({\r\n            id:server.id,\r\n            name:server.servername,\r\n            email:server.email,\r\n        })))\r\n        setState(initialState);\r\n    }\r\n    \r\n    const [open,setopen]=useState(false);\r\n    const [role,setrole]=useState(false);\r\n    const handleChangenickname=()=>{\r\n        if(myserver.email===auth.currentUser.email)\r\n        {\r\n            dispatch((currentserver({\r\n                id:server.id,\r\n                name:server.servername,\r\n                email:server.email\r\n            })))\r\n            setopen(true);\r\n        }\r\n        handleClose();\r\n    }\r\n    const handleAddroles=()=>{\r\n      if(myserver.email===auth.currentUser.email)\r\n        {\r\n          setrole(true);\r\n\r\n        }\r\n        dispatch((currentserver({\r\n          id:myserver.id,\r\n          name:myserver.servername,\r\n          email:myserver.email,\r\n      })))\r\n        handleClose();\r\n    }\r\n    const handledialogactions=()=>{\r\n        setopen(false);\r\n    }\r\n   \r\n    const StyledMenu = withStyles({\r\n        paper: {\r\n          backgroundColor:'#18191c',\r\n          color:'#b9bbbe',\r\n          padding: '6px 8px',\r\n        },\r\n      })((props) => (\r\n        <Menu  \r\n        anchorReference=\"anchorPosition\"\r\n        anchorPosition={\r\n        state.mouseY !== null && state.mouseX !== null\r\n            ? { top: state.mouseY, left: state.mouseX }\r\n            : undefined\r\n        }{...props}/>\r\n      ));\r\n    const StyledMenuItem = withStyles((theme) => ({\r\n        root: {\r\n            fontSize:'1.4rem',\r\n            '&:first-child':{\r\n                backgroundColor:'#5c6fb1',\r\n                color:'#fff'\r\n            },\r\n            '&:last-child':{\r\n                color:'rgb(240, 71, 71)'\r\n            },\r\n          '&:focus': {\r\n            backgroundColor: theme.palette.primary.main,\r\n            '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n              color: theme.palette.common.white,\r\n              fontSize:'1.4rem'\r\n            },\r\n          },\r\n        },\r\n      }))(MenuItem);\r\n\r\n    return (\r\n        <div className='availableserver__map'>\r\n            <img key={server.id} onContextMenu={handleClick} style={{ cursor: 'context-menu' }} onClick={async()=>{\r\n                dispatch(currentserver({id:server.id,name:server.servername,email:server.email}))\r\n                 await history.push(`/discord-clone/channels/${server.id}/${channels[0].id}`);\r\n                //  const channelRef=firestore.collection('servers').doc(server.id).collection('channels');\r\n                  // channelRef.get().then((response)=>{\r\n                  //   response.forEach(doc=>{\r\n                  //     console.log(doc.data())\r\n                  //   })\r\n                  // })\r\n                  // console.log(result);                 \r\n                }}\r\n                \r\n                className={`${id===server.id && `availableserver__map-clicked`} availableserver__map-image`}\r\n                src={server.serverimage} alt=\"availableserver\"\r\n                >\r\n                </img>\r\n                \r\n                <StyledMenu keepMounted open={state.mouseY !== null} onClose={handleClose}>\r\n                    <StyledMenuItem onClick={()=>handlechangeserver(server)}>{server.servername}</StyledMenuItem>\r\n                    <StyledMenuItem onClick={handleChangenickname}>Change Nickname</StyledMenuItem>\r\n                    <StyledMenuItem onClick={handleAddroles}>Add roles</StyledMenuItem>\r\n                    <StyledMenuItem onClick={()=>{\r\n                      setState(initialState);\r\n                      dispatch(deleteServer(server));\r\n                    }}>Delete Server</StyledMenuItem>\r\n                </StyledMenu>\r\n                {open && <Dialog open={open} onClose={()=>setopen(false)} aria-labelledby=\"form-dialog-title\" classes={{ paper: classes.paper}} >\r\n                    <ChangeServername handleClose={handledialogactions}/>\r\n                </Dialog>}\r\n                {role && <Dialog open={role} onClose={()=>setrole(false)} aria-labelledby=\"form-dialog-title\" classes={{ paper: classes.paper}} >\r\n                    <AddNewRole handleClose={()=>setrole(false)}/>\r\n                </Dialog>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AvailableServersmap\r\n","import React, { useEffect } from 'react'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { firestore } from '../../firebase/firebase';\r\nimport AvailableServersmap from './AvailableServersmap';\r\nimport './AvailableServers.scss'\r\nimport currentserver from '../../redux/server/server.actions';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nfunction AvailableServers () {\r\n    const dispatch = useDispatch();\r\n    const serverRef=firestore.collection('servers');\r\n    const query=serverRef.orderBy('createdAt').limit(10);\r\n    const [servers]=useCollectionData(query,{idField:'id'});\r\n    const newserver=useSelector((state)=>state.newserver.present);\r\n    useEffect(() => {\r\n        if(newserver){\r\n            return\r\n        }\r\n        else{\r\n            if(servers && !!servers.length){\r\n                // dispatch(currentserver({id:servers[0].id,name:servers[0].servername,email:servers[0].email,roleid:servers[0].roleid}));\r\n            }\r\n        }\r\n        return () => {   \r\n        }\r\n    }, [servers,newserver,dispatch])\r\n    // useEffect(() => {\r\n    //         if(newserver){\r\n    //             dispatch()\r\n    //         }\r\n    //     return () => {\r\n            \r\n    //     }\r\n    // }, [newserver])\r\n          return (\r\n        <div className='availableserver'>\r\n            {servers && servers.map((server)=>{\r\n                    return <AvailableServersmap key={server.id} server={server}/>\r\n                })} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AvailableServers\r\n","import React from 'react'\r\nimport './ChatHeader.scss'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport EditLocationIcon from '@material-ui/icons/EditLocation';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { fade, IconButton,InputBase,makeStyles } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nconst useStyles=makeStyles((theme)=>{\r\n    return{\r\n        button:{\r\n            color:'#babbbd',\r\n            padding:'.8rem'\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: '#212226',\r\n            '&:hover': {\r\n              backgroundColor: fade('#212226', 0.5),\r\n            },\r\n            marginLeft: 0,\r\n            marginRight:theme.spacing(.4),\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n              marginLeft: theme.spacing(1),\r\n              width: 'auto',\r\n            },\r\n          },\r\n          searchIcon: {\r\n            padding: theme.spacing(0, 1.5),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            color:'#363940'\r\n          },\r\n          inputRoot: {\r\n            color: 'inherit',\r\n          },\r\n          inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            fontSize:theme.spacing(1.5),\r\n            // vertical padding + font size from searchIcon\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n              width: '12ch',\r\n              '&:focus': {\r\n                width: '20ch',\r\n              },\r\n            },\r\n          },\r\n    }\r\n})\r\nfunction ChatHeader() {\r\n    const classes=useStyles();\r\n    return (\r\n        <div className=\"chat__main\">\r\n            <div className=\"chatheader\">\r\n                <div className=\"chatheader__topic\">\r\n                    <p className='chatheader__topic-hash'>#</p>\r\n                    <p className=\"chatheader__topic-content\">{useSelector((state)=>state.doc.name)}</p>\r\n                </div>\r\n                <div className=\"chatheader__items\">\r\n                    <div className='chatheader__items-left'>\r\n                        <IconButton className={classes.button} aria-label=\"settings\">\r\n                            <NotificationsIcon fontSize='large'/>\r\n                        </IconButton>\r\n                        <IconButton className={classes.button} aria-label=\"settings\">\r\n                            <EditLocationIcon fontSize='large'/>\r\n                        </IconButton>\r\n                        <IconButton className={classes.button} aria-label=\"settings\">\r\n                            <PeopleIcon fontSize='large'/>\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                        <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                        placeholder=\"Search\"\r\n                        classes={{\r\n                            root: classes.inputRoot,\r\n                            input: classes.inputInput,\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                        <div className=\"chatheader__items-right\">\r\n                        <IconButton className={classes.button} aria-label=\"settings\">\r\n                            <InboxIcon fontSize='large'/>\r\n                        </IconButton>\r\n                        <IconButton className={classes.button} aria-label=\"settings\">\r\n                            <HelpIcon fontSize='large'/>\r\n                        </IconButton>\r\n                        </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatHeader\r\n","import { IconButton, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Addserver from '../../components/AddServer/Addserver'\r\nimport AvailableServers from '../../components/AvailableServers/AvailableServers'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChatHeader from '../../components/ChatHeader/ChatHeader'\r\nimport AddChannelPopup from '../../components/AddChannelPopup/AddChannelPopup'\r\nimport SidebarChannel from '../../components/SidebarChannel/SidebarChannel'\r\nimport Sidebarvoice from '../../components/Sidebarvoice/Sidebarvoice'\r\nimport BadgeAvatars from '../../components/Avatar/BadgeAvatar'\r\nimport Roles from '../../components/Roles/Roles'\r\nimport './Universal.scss'\r\nconst useStyles=makeStyles((theme)=>{\r\n    return{\r\n        button:{\r\n            padding:theme.spacing(1),\r\n            color:'#fff'\r\n        }\r\n    }\r\n})\r\nconst Universal = ({children}) => {\r\n    const classes=useStyles();\r\n    console.log('Universal called');\r\n    return (\r\n        <>\r\n            <div className=\"mainpage\">\r\n                <div className=\"mainpage__servers\">\r\n                    <div className=\"mainpage__servers--add\">\r\n                        <Addserver/>\r\n                    </div>\r\n                    <div className=\"mainpage__servers-display\">\r\n                        <AvailableServers/>\r\n                    </div>\r\n                </div>\r\n                <div className='universal'>\r\n                    <div className=\"universal__header\">\r\n                        <div className=\"universal__header-sidebar\">\r\n                                <p className='universal__header-currentchannel'>{useSelector((state)=>state.currentserver.name)}</p>\r\n                                <div className=\"universal__header-expandicon\">\r\n                                    <IconButton className={classes.button} aria-label=\"settings\">\r\n                                        <ExpandMoreIcon fontSize='large'/>\r\n                                    </IconButton>\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"universal__header-chatbar\">\r\n                            <div className=\"universal__header--chat\">\r\n                                <ChatHeader/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"universal__content\">\r\n                        <div className='universal__sidebar'>\r\n                            {/* <div className='universal__channels'>\r\n                                <div className=\"universal__channels-header\">\r\n                                    <div className=\"universal__channels-expandicon\">\r\n                                    <IconButton className={classes.button} aria-label=\"settings\">\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n                                        </div>\r\n                                    <p>Text Channels</p>\r\n                                    <div className=\"universal__channels-addicon\">\r\n                                        <AddChannelPopup/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"universal__channels-list\">\r\n                                    <SidebarChannel/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"universal__voice\">\r\n                                <Sidebarvoice/>\r\n                            </div>\r\n                            <div className=\"universal__avatar\">\r\n                                    <BadgeAvatars/>\r\n                            </div> */}\r\n                        </div>\r\n                        {children}\r\n                        {/* <div className=\"chat\">\r\n                            <div className='chat__message'>\r\n                                <ChatMessage/>\r\n                            </div>\r\n                            <div className=\"chat__searchbar\">\r\n                                <ChatSearchBar/>\r\n                            </div>\r\n                        </div> */}\r\n                        <div className=\"universal__roles\">\r\n                            {/* <Roles/> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Universal\r\n","import { IconButton, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Addserver from '../../components/AddServer/Addserver'\r\nimport AvailableServers from '../../components/AvailableServers/AvailableServers'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChatHeader from '../../components/ChatHeader/ChatHeader'\r\nimport './Layout_Sidebar.scss'\r\nconst useStyles=makeStyles((theme)=>{\r\n    return{\r\n        button:{\r\n            padding:theme.spacing(1),\r\n            color:'#fff'\r\n        }\r\n    }\r\n})\r\nconst LayoutSidebar = ({children}) => {\r\n    console.log('layout sidebar');\r\n    const classes=useStyles();\r\n    return (\r\n        <>\r\n            <div className=\"mainpage\">\r\n                <div className=\"mainpage__servers\">\r\n                    <div className=\"mainpage__servers--add\">\r\n                        <Addserver/>\r\n                    </div>\r\n                    <div className=\"mainpage__servers-display\">\r\n                        <AvailableServers/>\r\n                    </div>\r\n                </div>\r\n                <div className='main'>\r\n                    <div className=\"main__header\">\r\n                        <div className=\"main__header-sidebar\">\r\n                                <p className='main__header-currentchannel'>{useSelector((state)=>state.currentserver.name)}</p>\r\n                                <div className=\"main__header-expandicon\">\r\n                                    <IconButton className={classes.button} aria-label=\"settings\">\r\n                                        <ExpandMoreIcon fontSize='large'/>\r\n                                    </IconButton>\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"main__header-chatbar\">\r\n                            <div className=\"main__header--chat\">\r\n                                <ChatHeader/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"main__content\">\r\n                        {/* <div className='main__sidebar'>\r\n                            <div className='main__channels'>\r\n                                <div className=\"main__channels-header\">\r\n                                    <div className=\"main__channels-expandicon\">\r\n                                    <IconButton className={classes.button} aria-label=\"settings\">\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n                                        </div>\r\n                                    <p>Text Channels</p>\r\n                                    <div className=\"main__channels-addicon\">\r\n                                        <AddChannelPopup/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"main__channels-list\">\r\n                                    <SidebarChannel/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"main__voice\">\r\n                                <Sidebarvoice/>\r\n                            </div>\r\n                            <div className=\"main__avatar\">\r\n                                    <BadgeAvatars/>\r\n                            </div>\r\n                        </div> */}\r\n                        {children}\r\n                        {/* <div className=\"chat\">\r\n                            <div className='chat__message'>\r\n                                <ChatMessage/>\r\n                            </div>\r\n                            <div className=\"chat__searchbar\">\r\n                                <ChatSearchBar/>\r\n                            </div>\r\n                        </div> */}\r\n                        {/* <div className=\"main__roles\">\r\n                            <Roles/>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LayoutSidebar\r\n","import styled from 'styled-components';\r\n\r\nexport const ErrorImageOverlay = styled.div`\r\n  height: 60vh;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ErrorImageContainer = styled.div`\r\n  display: inline-block;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 40vh;\r\n  height: 40vh;\r\n`;\r\n\r\nexport const ErrorImageText = styled.h2`\r\n  font-size: 28px;\r\n  color: #2f8e89;\r\n`;","import React,{lazy,Suspense} from 'react';\r\nimport './App.scss'\r\nimport {auth} from './firebase/firebase'\r\nimport {useAuthState} from 'react-firebase-hooks/auth'\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport Universal from './pages/Universal/Universal';\r\nimport LayoutSidebar from './pages/Layout_Sidebar/Layout_Sidebar';\r\nimport Spinner from './components/Spinner/Spinner';\r\nimport {ErrorBoundary} from 'react-error-boundary'\r\nimport {ErrorImageOverlay,ErrorImageContainer,ErrorImageText} from './pages/ErrorBoundaries/Errorboundaries.styles.jsx'\r\nconst Homepage=lazy(()=>import('./pages/HomePage/homepage.jsx'));\r\nconst Home=lazy(()=>import('./pages/home@me/home@me'));\r\nconst ServerPage=lazy(()=>import('./pages/ServerPage/ServerPage'));\r\n\r\nconst ErrorFallback=({error,resetErrorBoundary})=>{\r\n  return <>\r\n    <ErrorImageOverlay>\r\n      <ErrorImageContainer imageUrl='https://i.imgur.com/lKJiT77.png'/>\r\n      <ErrorImageText>Sorry this page is broken</ErrorImageText>\r\n      <button onClick={resetErrorBoundary}>Try again</button>\r\n    </ErrorImageOverlay>\r\n  </>\r\n}\r\n\r\nfunction App() {\r\nconst [user]=useAuthState(auth);\r\n  return (\r\n    <div className=\"App\">\r\n      <main>\r\n        {!user && <Redirect to='/discord-clone'/>}\r\n        <Switch>\r\n          <ErrorBoundary FallbackComponent={ErrorFallback}>\r\n          <Suspense fallback={<Spinner/>}>\r\n          <Route exact path='/discord-clone' render={()=>auth.currentUser?<Redirect to='/discord-clone/channels/@me'/>:<Homepage/>} />\r\n            <Switch>\r\n              <Route exact path='/discord-clone/channels/@me' render={()=><Universal><Home></Home></Universal>}/>\r\n              <Route path='/discord-clone/channels/:serverId' render={(props)=><LayoutSidebar><ServerPage {...props}/></LayoutSidebar>}/>\r\n            </Switch>\r\n            </Suspense>\r\n          </ErrorBoundary>\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState={\r\n    id:'ofIRBMmGukI3EXPAYmgn',\r\n    name:'Discordy'\r\n  }\r\n   const documentReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'Current_Document':\r\n      return {\r\n        ...state,\r\n        id:action.payload.id,\r\n        name:action.payload.name\r\n      }\r\n      default: return state\r\n    }\r\n  }\r\n  export default documentReducer\r\n  ","const initialState={\r\n    id:'',\r\n    msg:''\r\n  }\r\n   const messageReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'Current_message':\r\n      return {\r\n        ...state,\r\n        id:action.payload.id,\r\n        msg:action.payload.msg\r\n      }\r\n      default: return state\r\n    }\r\n  }\r\n  export default messageReducer\r\n  ","const initialState={\r\n    clicked:false,\r\n  }\r\n   const replyopenReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'Clicked':\r\n      return {\r\n        ...state,\r\n        clicked:!state.clicked,\r\n      }\r\n      default: return state\r\n    }\r\n  }\r\n  export default replyopenReducer\r\n  ","const initialState={\r\n  open:false,\r\n  }\r\n   const openReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'Change_open':\r\n      return {\r\n        ...state,\r\n        open:!state.open,\r\n      }\r\n      default: return state\r\n    }\r\n  }\r\n  export default openReducer\r\n  ","const initialState={\r\n    id:'',\r\n    sender:'',\r\n    msg:'',\r\n    photo:'',\r\n    // base64:''\r\n  }\r\n   const ReplyclickedReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'Reply_message':\r\n        return{\r\n          ...state,\r\n            id:action.payload.id,\r\n            sender:action.payload.sender,\r\n            msg:action.payload.msg,\r\n            photo:action.payload.photo,\r\n        }\r\n      \r\n      default: return state\r\n    }\r\n  }\r\n  export default ReplyclickedReducer\r\n  ","const initialState={\r\n    clicked:false,\r\n  }\r\n   const replytoggleReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'Reply_toggle':\r\n      return {\r\n        ...state,\r\n        clicked:!state.clicked,\r\n      }\r\n      default: return state\r\n    }\r\n  }\r\n  export default replytoggleReducer\r\n  ","const initialState={\r\n    id:'LNhwXEYI7pTlOgTN9Chm',\r\n    name:'Welcome to Discord',\r\n    email:'',\r\n  }\r\n   const currentserverReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'Current_Server':\r\n      return {\r\n        ...state,\r\n        id:action.payload.id,\r\n        name:action.payload.name,\r\n        email:action.payload.email,\r\n      }\r\n      default: return state\r\n    }\r\n  }\r\n  export default currentserverReducer\r\n  ","const initialState={\r\n    present:false\r\n  }\r\n   const newserverReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'New_Server':\r\n      return {\r\n        ...state,\r\n        present:action.payload.present\r\n      }\r\n      default: return state\r\n    }\r\n  }\r\n  export default newserverReducer\r\n  ","const initialState={\r\n    admin:'',\r\n    squad:''\r\n  }\r\n   const CurrentRoleReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n      case 'Current_Role':\r\n      return {\r\n        ...state,\r\n        admin:action.payload.admin,\r\n        squad:action.payload.squad\r\n      }\r\n      default: return state\r\n    }\r\n  }\r\n  export default CurrentRoleReducer\r\n  ","import {combineReducers} from 'redux';\r\nimport documentReducer from './document/documentReducer';\r\nimport messageReducer from './message/messageReducer'\r\nimport clickedReducer from './clicked/clickedReducer'\r\nimport openReducer from './openupload/messageReducer'\r\nimport ReplyclickedReducer from './replyclicked/replyclickedReducer'\r\nimport replytoggleReducer from './replytoggle/replytoggleReducer'\r\nimport currentserverReducer from './server/serverReducer'\r\nimport newserverReducer from './newserver/newserverReducer';\r\nimport CurrentRoleReducer from './roles/rolesReducer';\r\nexport default combineReducers({\r\n  doc:documentReducer,\r\n  msg:messageReducer,\r\n  click:clickedReducer,\r\n  open:openReducer,\r\n  reply:ReplyclickedReducer,\r\n  replytoggle:replytoggleReducer,\r\n  currentserver:currentserverReducer,\r\n  newserver:newserverReducer,\r\n  currentrole:CurrentRoleReducer,\r\n})\r\n","import {all,call, select, takeLatest} from 'redux-saga/effects'\r\n// import { CurrentServerSelector } from '../server/server.selectors'\r\n\r\n\r\n// export function* SwitchDocumentSuccess(){\r\n//     const id=yield select(CurrentServerSelector)\r\n//     // yield put(currentdoc())\r\n\r\n// }\r\n\r\n// export function* SwitchDocumentStart(){\r\n//     yield takeLatest('Current_Server',SwitchDocumentSuccess)\r\n// }\r\n\r\nexport function* DocumentSagas(){\r\n    yield all([])\r\n}","import {all,call, takeEvery} from 'redux-saga/effects'\r\nimport { auth, firestore, default as firebase } from '../../firebase/firebase';\r\n\r\nexport function* DeleteServerSuccess({payload}){\r\n    yield console.log(payload);\r\n    if(payload.email===auth.currentUser.email){\r\n        const serverRef=yield firestore.collection('servers').doc(payload.id);\r\n        const roleref=yield firestore.collection('roles').doc(payload.id);\r\n        yield roleref.delete();        \r\n        yield serverRef.delete();\r\n        const userref=yield firestore.collection('users');\r\n        yield userref.doc(auth.currentUser.uid).set({\r\n          roles:{\r\n            [auth.currentUser.uid]:firebase.firestore.FieldValue.delete()\r\n          }\r\n        },{ merge: true })  \r\n    }\r\n    else{\r\n      return\r\n    }\r\n}\r\n\r\nexport function* DeleteServerStart(){\r\n    yield takeEvery('Delete_Server_Start',DeleteServerSuccess)\r\n}\r\n\r\nexport function* AddServerStart(){\r\n\r\n}\r\n\r\n\r\n\r\nexport function* Serversagas(){\r\n    yield all([call(AddServerStart),call(DeleteServerStart)])\r\n}","import { all, call, takeLatest } from \"@redux-saga/core/effects\";\r\nimport { auth,CreateUserProfileDocument,Googleprovider } from \"../../firebase/firebase\";\r\n\r\nexport function* GoogleSignInSuccess(){\r\n    yield auth.signInWithPopup(Googleprovider)\r\n    yield call(CreateUserProfileDocument);\r\n}\r\n\r\nexport function* GoogleSignInStart(){\r\n    yield takeLatest('Google_SignIn_Start',GoogleSignInSuccess)\r\n}\r\n\r\n\r\nexport function* userSagas(){\r\n    yield all([call(GoogleSignInStart)])\r\n}","import {all,call} from 'redux-saga/effects'\r\nimport { DocumentSagas } from './document/document.sagas'\r\nimport { Serversagas } from './server/server.sagas'\r\nimport { userSagas } from './users/user.sagas'\r\nexport default function* rootSaga(){\r\n    yield all([call(userSagas),call(DocumentSagas),call(Serversagas)])\r\n}\r\n","import rootReducer from './rootReducer.js'\r\nimport {createStore,applyMiddleware} from 'redux'\r\nimport {logger} from 'redux-logger'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './root-Saga'\r\nconst sagaMiddleware=createSagaMiddleware();\r\nconst middleware=[logger,sagaMiddleware]\r\nconst store=createStore(rootReducer,applyMiddleware(...middleware))\r\nsagaMiddleware.run(rootSaga);\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n      <App />\r\n      </BrowserRouter>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorkerRegistration.register();\r\n","const currentserver=(server)=>{\r\n    return{\r\n    type:'Current_Server',\r\n    payload:server\r\n  }\r\n  }\r\n  export default currentserver;\r\n\r\n  export const deleteServer=(server)=>{\r\n    return{\r\n      type:'Delete_Server_Start',\r\n      payload:server\r\n    }\r\n  }\r\n\r\n","const currentdoc=(doc)=>{\r\n    return{\r\n    type:'Current_Document',\r\n    payload:doc\r\n  }\r\n  }\r\n  export default currentdoc;\r\n  ","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\nimport 'firebase/database'\r\nimport \"firebase/performance\";\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyC_flKosPn-LPJF8JsKT3-IhlI3RDMOjqk\",\r\n    authDomain: \"discord-clone-12045.firebaseapp.com\",\r\n    projectId: \"discord-clone-12045\",\r\n    storageBucket: \"discord-clone-12045.appspot.com\",\r\n    messagingSenderId: \"889501806287\",\r\n    appId: \"1:889501806287:web:a96c4cf73eee4e8b2c11ba\"\r\n  };\r\n  firebase.initializeApp(firebaseConfig);\r\n  export const firestore=firebase.firestore();\r\n  export default firebase;\r\n  export const auth=firebase.auth();\r\n  export const storage=firebase.storage();\r\n  export const perf = firebase.performance();\r\n  export const db=firebase.database();\r\n  export const Googleprovider=new firebase.auth.GoogleAuthProvider();\r\n  // const signinWithGithub=()=>{\r\n//   const provider=new firebase.auth.GithubAuthProvider();\r\n//   auth.signInWithPopup(provider).catch(alert);\r\n// }\r\n  export const CreateUserProfileDocument=()=>{\r\n    const userRef=firestore.collection('users').doc(auth.currentUser.uid);\r\n    userRef.set({\r\n      username:auth.currentUser.displayName,\r\n      useremail:auth.currentUser.email,\r\n      userphoto:auth.currentUser.photoURL,\r\n      createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n      roles:{}\r\n    },{merge:true})\r\n  }","import styled from 'styled-components';\r\n\r\nexport const SpinnerOverlay = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color:#232428;\r\n`;\r\n","import { SpinnerOverlay} from './Spinner.styles'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <>\r\n        <SpinnerOverlay>\r\n            <img src=\"/discord-clone/discord.gif\" alt=\"Discord Gif\" />\r\n        </SpinnerOverlay>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Spinner"],"sourceRoot":""}